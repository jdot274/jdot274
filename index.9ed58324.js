let e,t,i,r,n;function a(e,t,i,r){Object.defineProperty(e,t,{get:i,set:r,enumerable:!0,configurable:!0})}var s={};a(s,"REVISION",()=>o),a(s,"MOUSE",()=>l),a(s,"TOUCH",()=>h),a(s,"CullFaceNone",()=>c),a(s,"CullFaceBack",()=>u),a(s,"CullFaceFront",()=>d),a(s,"CullFaceFrontBack",()=>p),a(s,"BasicShadowMap",()=>m),a(s,"PCFShadowMap",()=>f),a(s,"PCFSoftShadowMap",()=>g),a(s,"VSMShadowMap",()=>v),a(s,"FrontSide",()=>y),a(s,"BackSide",()=>x),a(s,"DoubleSide",()=>_),a(s,"FlatShading",()=>b),a(s,"SmoothShading",()=>w),a(s,"NoBlending",()=>M),a(s,"NormalBlending",()=>S),a(s,"AdditiveBlending",()=>T),a(s,"SubtractiveBlending",()=>E),a(s,"MultiplyBlending",()=>A),a(s,"CustomBlending",()=>L),a(s,"AddEquation",()=>R),a(s,"SubtractEquation",()=>C),a(s,"ReverseSubtractEquation",()=>P),a(s,"MinEquation",()=>I),a(s,"MaxEquation",()=>D),a(s,"ZeroFactor",()=>N),a(s,"OneFactor",()=>B),a(s,"SrcColorFactor",()=>z),a(s,"OneMinusSrcColorFactor",()=>F),a(s,"SrcAlphaFactor",()=>O),a(s,"OneMinusSrcAlphaFactor",()=>H),a(s,"DstAlphaFactor",()=>U),a(s,"OneMinusDstAlphaFactor",()=>G),a(s,"DstColorFactor",()=>k),a(s,"OneMinusDstColorFactor",()=>V),a(s,"SrcAlphaSaturateFactor",()=>W),a(s,"NeverDepth",()=>j),a(s,"AlwaysDepth",()=>q),a(s,"LessDepth",()=>X),a(s,"LessEqualDepth",()=>Y),a(s,"EqualDepth",()=>Z),a(s,"GreaterEqualDepth",()=>J),a(s,"GreaterDepth",()=>Q),a(s,"NotEqualDepth",()=>K),a(s,"MultiplyOperation",()=>$),a(s,"MixOperation",()=>ee),a(s,"AddOperation",()=>et),a(s,"NoToneMapping",()=>ei),a(s,"LinearToneMapping",()=>er),a(s,"ReinhardToneMapping",()=>en),a(s,"CineonToneMapping",()=>ea),a(s,"ACESFilmicToneMapping",()=>es),a(s,"CustomToneMapping",()=>eo),a(s,"UVMapping",()=>el),a(s,"CubeReflectionMapping",()=>eh),a(s,"CubeRefractionMapping",()=>ec),a(s,"EquirectangularReflectionMapping",()=>eu),a(s,"EquirectangularRefractionMapping",()=>ed),a(s,"CubeUVReflectionMapping",()=>ep),a(s,"CubeUVRefractionMapping",()=>em),a(s,"RepeatWrapping",()=>ef),a(s,"ClampToEdgeWrapping",()=>eg),a(s,"MirroredRepeatWrapping",()=>ev),a(s,"NearestFilter",()=>ey),a(s,"NearestMipmapNearestFilter",()=>ex),a(s,"NearestMipMapNearestFilter",()=>e_),a(s,"NearestMipmapLinearFilter",()=>eb),a(s,"NearestMipMapLinearFilter",()=>ew),a(s,"LinearFilter",()=>eM),a(s,"LinearMipmapNearestFilter",()=>eS),a(s,"LinearMipMapNearestFilter",()=>eT),a(s,"LinearMipmapLinearFilter",()=>eE),a(s,"LinearMipMapLinearFilter",()=>eA),a(s,"UnsignedByteType",()=>eL),a(s,"ByteType",()=>eR),a(s,"ShortType",()=>eC),a(s,"UnsignedShortType",()=>eP),a(s,"IntType",()=>eI),a(s,"UnsignedIntType",()=>eD),a(s,"FloatType",()=>eN),a(s,"HalfFloatType",()=>eB),a(s,"UnsignedShort4444Type",()=>ez),a(s,"UnsignedShort5551Type",()=>eF),a(s,"UnsignedShort565Type",()=>eO),a(s,"UnsignedInt248Type",()=>eH),a(s,"AlphaFormat",()=>eU),a(s,"RGBFormat",()=>eG),a(s,"RGBAFormat",()=>ek),a(s,"LuminanceFormat",()=>eV),a(s,"LuminanceAlphaFormat",()=>eW),a(s,"RGBEFormat",()=>ej),a(s,"DepthFormat",()=>eq),a(s,"DepthStencilFormat",()=>eX),a(s,"RedFormat",()=>eY),a(s,"RedIntegerFormat",()=>eZ),a(s,"RGFormat",()=>eJ),a(s,"RGIntegerFormat",()=>eQ),a(s,"RGBIntegerFormat",()=>eK),a(s,"RGBAIntegerFormat",()=>e$),a(s,"RGB_S3TC_DXT1_Format",()=>e0),a(s,"RGBA_S3TC_DXT1_Format",()=>e1),a(s,"RGBA_S3TC_DXT3_Format",()=>e3),a(s,"RGBA_S3TC_DXT5_Format",()=>e2),a(s,"RGB_PVRTC_4BPPV1_Format",()=>e4),a(s,"RGB_PVRTC_2BPPV1_Format",()=>e5),a(s,"RGBA_PVRTC_4BPPV1_Format",()=>e6),a(s,"RGBA_PVRTC_2BPPV1_Format",()=>e8),a(s,"RGB_ETC1_Format",()=>e7),a(s,"RGB_ETC2_Format",()=>e9),a(s,"RGBA_ETC2_EAC_Format",()=>te),a(s,"RGBA_ASTC_4x4_Format",()=>tt),a(s,"RGBA_ASTC_5x4_Format",()=>ti),a(s,"RGBA_ASTC_5x5_Format",()=>tr),a(s,"RGBA_ASTC_6x5_Format",()=>tn),a(s,"RGBA_ASTC_6x6_Format",()=>ta),a(s,"RGBA_ASTC_8x5_Format",()=>ts),a(s,"RGBA_ASTC_8x6_Format",()=>to),a(s,"RGBA_ASTC_8x8_Format",()=>tl),a(s,"RGBA_ASTC_10x5_Format",()=>th),a(s,"RGBA_ASTC_10x6_Format",()=>tc),a(s,"RGBA_ASTC_10x8_Format",()=>tu),a(s,"RGBA_ASTC_10x10_Format",()=>td),a(s,"RGBA_ASTC_12x10_Format",()=>tp),a(s,"RGBA_ASTC_12x12_Format",()=>tm),a(s,"RGBA_BPTC_Format",()=>tf),a(s,"SRGB8_ALPHA8_ASTC_4x4_Format",()=>tg),a(s,"SRGB8_ALPHA8_ASTC_5x4_Format",()=>tv),a(s,"SRGB8_ALPHA8_ASTC_5x5_Format",()=>ty),a(s,"SRGB8_ALPHA8_ASTC_6x5_Format",()=>tx),a(s,"SRGB8_ALPHA8_ASTC_6x6_Format",()=>t_),a(s,"SRGB8_ALPHA8_ASTC_8x5_Format",()=>tb),a(s,"SRGB8_ALPHA8_ASTC_8x6_Format",()=>tw),a(s,"SRGB8_ALPHA8_ASTC_8x8_Format",()=>tM),a(s,"SRGB8_ALPHA8_ASTC_10x5_Format",()=>tS),a(s,"SRGB8_ALPHA8_ASTC_10x6_Format",()=>tT),a(s,"SRGB8_ALPHA8_ASTC_10x8_Format",()=>tE),a(s,"SRGB8_ALPHA8_ASTC_10x10_Format",()=>tA),a(s,"SRGB8_ALPHA8_ASTC_12x10_Format",()=>tL),a(s,"SRGB8_ALPHA8_ASTC_12x12_Format",()=>tR),a(s,"LoopOnce",()=>tC),a(s,"LoopRepeat",()=>tP),a(s,"LoopPingPong",()=>tI),a(s,"InterpolateDiscrete",()=>tD),a(s,"InterpolateLinear",()=>tN),a(s,"InterpolateSmooth",()=>tB),a(s,"ZeroCurvatureEnding",()=>tz),a(s,"ZeroSlopeEnding",()=>tF),a(s,"WrapAroundEnding",()=>tO),a(s,"NormalAnimationBlendMode",()=>tH),a(s,"AdditiveAnimationBlendMode",()=>tU),a(s,"TrianglesDrawMode",()=>tG),a(s,"TriangleStripDrawMode",()=>tk),a(s,"TriangleFanDrawMode",()=>tV),a(s,"LinearEncoding",()=>tW),a(s,"sRGBEncoding",()=>tj),a(s,"GammaEncoding",()=>tq),a(s,"RGBEEncoding",()=>tX),a(s,"LogLuvEncoding",()=>tY),a(s,"RGBM7Encoding",()=>tZ),a(s,"RGBM16Encoding",()=>tJ),a(s,"RGBDEncoding",()=>tQ),a(s,"BasicDepthPacking",()=>tK),a(s,"RGBADepthPacking",()=>t$),a(s,"TangentSpaceNormalMap",()=>t0),a(s,"ObjectSpaceNormalMap",()=>t1),a(s,"ZeroStencilOp",()=>t3),a(s,"KeepStencilOp",()=>t2),a(s,"ReplaceStencilOp",()=>t4),a(s,"IncrementStencilOp",()=>t5),a(s,"DecrementStencilOp",()=>t6),a(s,"IncrementWrapStencilOp",()=>t8),a(s,"DecrementWrapStencilOp",()=>t7),a(s,"InvertStencilOp",()=>t9),a(s,"NeverStencilFunc",()=>ie),a(s,"LessStencilFunc",()=>it),a(s,"EqualStencilFunc",()=>ii),a(s,"LessEqualStencilFunc",()=>ir),a(s,"GreaterStencilFunc",()=>ia),a(s,"NotEqualStencilFunc",()=>is),a(s,"GreaterEqualStencilFunc",()=>io),a(s,"AlwaysStencilFunc",()=>il),a(s,"StaticDrawUsage",()=>ih),a(s,"DynamicDrawUsage",()=>ic),a(s,"StreamDrawUsage",()=>iu),a(s,"StaticReadUsage",()=>id),a(s,"DynamicReadUsage",()=>ip),a(s,"StreamReadUsage",()=>im),a(s,"StaticCopyUsage",()=>ig),a(s,"DynamicCopyUsage",()=>iv),a(s,"StreamCopyUsage",()=>iy),a(s,"GLSL1",()=>ix),a(s,"GLSL3",()=>i_),a(s,"EventDispatcher",()=>ib),a(s,"Math",()=>iD),a(s,"Vector2",()=>iN),a(s,"Matrix3",()=>iB),a(s,"ImageUtils",()=>iz),a(s,"Texture",()=>iO),a(s,"Vector4",()=>iU),a(s,"WebGLRenderTarget",()=>iG),a(s,"WebGLMultisampleRenderTarget",()=>ik),a(s,"Quaternion",()=>iV),a(s,"Vector3",()=>iW),a(s,"Box3",()=>iX),a(s,"Sphere",()=>ri),a(s,"Ray",()=>rc),a(s,"Matrix4",()=>ru),a(s,"Euler",()=>rb),a(s,"Layers",()=>rw),a(s,"Object3D",()=>rz),a(s,"Plane",()=>rU),a(s,"Triangle",()=>rQ),a(s,"Material",()=>r$),a(s,"Color",()=>r6),a(s,"MeshBasicMaterial",()=>r8),a(s,"BufferAttribute",()=>ne),a(s,"Int8BufferAttribute",()=>nt),a(s,"Uint8BufferAttribute",()=>ni),a(s,"Uint8ClampedBufferAttribute",()=>nr),a(s,"Int16BufferAttribute",()=>nn),a(s,"Uint16BufferAttribute",()=>na),a(s,"Int32BufferAttribute",()=>ns),a(s,"Uint32BufferAttribute",()=>no),a(s,"Float16BufferAttribute",()=>nl),a(s,"Float32BufferAttribute",()=>nh),a(s,"Float64BufferAttribute",()=>nc),a(s,"BufferGeometry",()=>nb),a(s,"Mesh",()=>nH),a(s,"BoxBufferGeometry",()=>nG),a(s,"UniformsUtils",()=>nW),a(s,"ShaderMaterial",()=>nj),a(s,"Camera",()=>nq),a(s,"PerspectiveCamera",()=>nX),a(s,"CubeCamera",()=>nY),a(s,"CubeTexture",()=>nZ),a(s,"WebGLCubeRenderTarget",()=>nJ),a(s,"DataTexture",()=>nQ),a(s,"Frustum",()=>n0),a(s,"PlaneBufferGeometry",()=>n2),a(s,"ShaderChunk",()=>n4),a(s,"UniformsLib",()=>n5),a(s,"ShaderLib",()=>n6),a(s,"DataTexture2DArray",()=>au),a(s,"DataTexture3D",()=>ad),a(s,"MeshDepthMaterial",()=>sN),a(s,"MeshDistanceMaterial",()=>sB),a(s,"WebGLUtils",()=>sH),a(s,"ArrayCamera",()=>sU),a(s,"Group",()=>sG),a(s,"WebGLRenderer",()=>sq),a(s,"WebGL1Renderer",()=>sX),a(s,"FogExp2",()=>sY),a(s,"Fog",()=>sZ),a(s,"Scene",()=>sJ),a(s,"InterleavedBuffer",()=>sQ),a(s,"InterleavedBufferAttribute",()=>s$),a(s,"SpriteMaterial",()=>s0),a(s,"Sprite",()=>or),a(s,"LOD",()=>oo),a(s,"SkinnedMesh",()=>op),a(s,"Bone",()=>om),a(s,"Skeleton",()=>ov),a(s,"InstancedMesh",()=>ow),a(s,"LineBasicMaterial",()=>oM),a(s,"Line",()=>oR),a(s,"LineSegments",()=>oI),a(s,"LineLoop",()=>oD),a(s,"PointsMaterial",()=>oN),a(s,"Points",()=>oH),a(s,"VideoTexture",()=>oG),a(s,"CompressedTexture",()=>ok),a(s,"CanvasTexture",()=>oV),a(s,"DepthTexture",()=>oW),a(s,"CircleBufferGeometry",()=>oj),a(s,"CylinderBufferGeometry",()=>oq),a(s,"ConeBufferGeometry",()=>oX),a(s,"PolyhedronBufferGeometry",()=>oY),a(s,"DodecahedronBufferGeometry",()=>oZ),a(s,"EdgesGeometry",()=>o0),a(s,"ShapeUtils",()=>lo),a(s,"ExtrudeBufferGeometry",()=>lc),a(s,"IcosahedronBufferGeometry",()=>ld),a(s,"LatheBufferGeometry",()=>lp),a(s,"OctahedronBufferGeometry",()=>lm),a(s,"ParametricBufferGeometry",()=>lf),a(s,"RingBufferGeometry",()=>lg),a(s,"ShapeBufferGeometry",()=>lv),a(s,"SphereBufferGeometry",()=>ly),a(s,"TetrahedronBufferGeometry",()=>lx),a(s,"TextBufferGeometry",()=>l_),a(s,"TorusBufferGeometry",()=>lb),a(s,"TorusKnotBufferGeometry",()=>lw),a(s,"TubeBufferGeometry",()=>lM),a(s,"WireframeGeometry",()=>lS),a(s,"ShadowMaterial",()=>lE),a(s,"RawShaderMaterial",()=>lA),a(s,"MeshStandardMaterial",()=>lL),a(s,"MeshPhysicalMaterial",()=>lR),a(s,"MeshPhongMaterial",()=>lC),a(s,"MeshToonMaterial",()=>lP),a(s,"MeshNormalMaterial",()=>lI),a(s,"MeshLambertMaterial",()=>lD),a(s,"MeshMatcapMaterial",()=>lN),a(s,"LineDashedMaterial",()=>lB),a(s,"AnimationUtils",()=>lF),a(s,"Interpolant",()=>lO),a(s,"CubicInterpolant",()=>lH),a(s,"LinearInterpolant",()=>lU),a(s,"DiscreteInterpolant",()=>lG),a(s,"KeyframeTrack",()=>lk),a(s,"BooleanKeyframeTrack",()=>lV),a(s,"ColorKeyframeTrack",()=>lW),a(s,"NumberKeyframeTrack",()=>lj),a(s,"QuaternionLinearInterpolant",()=>lq),a(s,"QuaternionKeyframeTrack",()=>lX),a(s,"StringKeyframeTrack",()=>lY),a(s,"VectorKeyframeTrack",()=>lZ),a(s,"AnimationClip",()=>lJ),a(s,"Cache",()=>lQ),a(s,"LoadingManager",()=>lK),a(s,"DefaultLoadingManager",()=>l$),a(s,"Loader",()=>l0),a(s,"FileLoader",()=>l3),a(s,"AnimationLoader",()=>l2),a(s,"CompressedTextureLoader",()=>l4),a(s,"ImageLoader",()=>l5),a(s,"CubeTextureLoader",()=>l6),a(s,"DataTextureLoader",()=>l8),a(s,"TextureLoader",()=>l7),a(s,"Curve",()=>l9),a(s,"EllipseCurve",()=>he),a(s,"ArcCurve",()=>ht),a(s,"CatmullRomCurve3",()=>ho),a(s,"CubicBezierCurve",()=>hu),a(s,"CubicBezierCurve3",()=>hd),a(s,"LineCurve",()=>hp),a(s,"LineCurve3",()=>hm),a(s,"QuadraticBezierCurve",()=>hf),a(s,"QuadraticBezierCurve3",()=>hg),a(s,"SplineCurve",()=>hv),a(s,"CurvePath",()=>hx),a(s,"Path",()=>h_),a(s,"Shape",()=>hb),a(s,"Light",()=>hw),a(s,"HemisphereLight",()=>hM),a(s,"SpotLight",()=>hR),a(s,"PointLight",()=>hN),a(s,"OrthographicCamera",()=>hB),a(s,"DirectionalLight",()=>hF),a(s,"AmbientLight",()=>hO),a(s,"RectAreaLight",()=>hH),a(s,"SphericalHarmonics3",()=>hU),a(s,"LightProbe",()=>hG),a(s,"MaterialLoader",()=>hk),a(s,"LoaderUtils",()=>hV),a(s,"InstancedBufferGeometry",()=>hW),a(s,"InstancedBufferAttribute",()=>hj),a(s,"BufferGeometryLoader",()=>hq),a(s,"ObjectLoader",()=>hX),a(s,"ImageBitmapLoader",()=>hQ),a(s,"ShapePath",()=>hK),a(s,"Font",()=>h$),a(s,"FontLoader",()=>h0),a(s,"AudioContext",()=>h1),a(s,"AudioLoader",()=>h3),a(s,"HemisphereLightProbe",()=>h2),a(s,"AmbientLightProbe",()=>h4),a(s,"StereoCamera",()=>h8),a(s,"Clock",()=>h7),a(s,"AudioListener",()=>cn),a(s,"Audio",()=>ca),a(s,"PositionalAudio",()=>cc),a(s,"AudioAnalyser",()=>cu),a(s,"PropertyMixer",()=>cd),a(s,"PropertyBinding",()=>c_),a(s,"AnimationObjectGroup",()=>cb),a(s,"AnimationMixer",()=>cM),a(s,"Uniform",()=>cS),a(s,"InstancedInterleavedBuffer",()=>cT),a(s,"GLBufferAttribute",()=>cE),a(s,"Raycaster",()=>cA),a(s,"Spherical",()=>cC),a(s,"Cylindrical",()=>cP),a(s,"Box2",()=>cD),a(s,"Line3",()=>cz),a(s,"ImmediateRenderObject",()=>cF),a(s,"SpotLightHelper",()=>cH),a(s,"SkeletonHelper",()=>cV),a(s,"PointLightHelper",()=>cW),a(s,"HemisphereLightHelper",()=>cY),a(s,"GridHelper",()=>cZ),a(s,"PolarGridHelper",()=>cJ),a(s,"DirectionalLightHelper",()=>c0),a(s,"CameraHelper",()=>c2),a(s,"BoxHelper",()=>c6),a(s,"Box3Helper",()=>c8),a(s,"PlaneHelper",()=>c7),a(s,"ArrowHelper",()=>ue),a(s,"AxesHelper",()=>ut),a(s,"DataUtils",()=>un),a(s,"PMREMGenerator",()=>u_),a(s,"LineStrip",()=>uA),a(s,"LinePieces",()=>uL),a(s,"NoColors",()=>uR),a(s,"FaceColors",()=>uC),a(s,"VertexColors",()=>uP),a(s,"MeshFaceMaterial",()=>uI),a(s,"MultiMaterial",()=>uD),a(s,"PointCloud",()=>uN),a(s,"Particle",()=>uB),a(s,"ParticleSystem",()=>uz),a(s,"PointCloudMaterial",()=>uF),a(s,"ParticleBasicMaterial",()=>uO),a(s,"ParticleSystemMaterial",()=>uH),a(s,"Vertex",()=>uU),a(s,"DynamicBufferAttribute",()=>uG),a(s,"Int8Attribute",()=>uk),a(s,"Uint8Attribute",()=>uV),a(s,"Uint8ClampedAttribute",()=>uW),a(s,"Int16Attribute",()=>uj),a(s,"Uint16Attribute",()=>uq),a(s,"Int32Attribute",()=>uX),a(s,"Uint32Attribute",()=>uY),a(s,"Float32Attribute",()=>uZ),a(s,"Float64Attribute",()=>uJ),a(s,"AxisHelper",()=>uQ),a(s,"BoundingBoxHelper",()=>uK),a(s,"EdgesHelper",()=>u$),a(s,"WireframeHelper",()=>u0),a(s,"XHRLoader",()=>u1),a(s,"BinaryTextureLoader",()=>u3),a(s,"WebGLRenderTargetCube",()=>u2),a(s,"CanvasRenderer",()=>u4),a(s,"JSONLoader",()=>u5),a(s,"SceneUtils",()=>u6),a(s,"LensFlare",()=>u8),a(s,"BoxGeometry",()=>nG),a(s,"CircleGeometry",()=>oj),a(s,"ConeGeometry",()=>oX),a(s,"CylinderGeometry",()=>oq),a(s,"DodecahedronGeometry",()=>oZ),a(s,"ExtrudeGeometry",()=>lc),a(s,"IcosahedronGeometry",()=>ld),a(s,"LatheGeometry",()=>lp),a(s,"MathUtils",()=>iD),a(s,"OctahedronGeometry",()=>lm),a(s,"ParametricGeometry",()=>lf),a(s,"PlaneGeometry",()=>n2),a(s,"PolyhedronGeometry",()=>oY),a(s,"RingGeometry",()=>lg),a(s,"ShapeGeometry",()=>lv),a(s,"SphereGeometry",()=>ly),a(s,"TetrahedronGeometry",()=>lx),a(s,"TextGeometry",()=>l_),a(s,"TorusGeometry",()=>lb),a(s,"TorusKnotGeometry",()=>lw),a(s,"TubeGeometry",()=>lM);/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const o="128",l={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},h={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},c=0,u=1,d=2,p=3,m=0,f=1,g=2,v=3,y=0,x=1,_=2,b=1,w=2,M=0,S=1,T=2,E=3,A=4,L=5,R=100,C=101,P=102,I=103,D=104,N=200,B=201,z=202,F=203,O=204,H=205,U=206,G=207,k=208,V=209,W=210,j=0,q=1,X=2,Y=3,Z=4,J=5,Q=6,K=7,$=0,ee=1,et=2,ei=0,er=1,en=2,ea=3,es=4,eo=5,el=300,eh=301,ec=302,eu=303,ed=304,ep=306,em=307,ef=1e3,eg=1001,ev=1002,ey=1003,ex=1004,e_=1004,eb=1005,ew=1005,eM=1006,eS=1007,eT=1007,eE=1008,eA=1008,eL=1009,eR=1010,eC=1011,eP=1012,eI=1013,eD=1014,eN=1015,eB=1016,ez=1017,eF=1018,eO=1019,eH=1020,eU=1021,eG=1022,ek=1023,eV=1024,eW=1025,ej=1023,eq=1026,eX=1027,eY=1028,eZ=1029,eJ=1030,eQ=1031,eK=1032,e$=1033,e0=33776,e1=33777,e3=33778,e2=33779,e4=35840,e5=35841,e6=35842,e8=35843,e7=36196,e9=37492,te=37496,tt=37808,ti=37809,tr=37810,tn=37811,ta=37812,ts=37813,to=37814,tl=37815,th=37816,tc=37817,tu=37818,td=37819,tp=37820,tm=37821,tf=36492,tg=37840,tv=37841,ty=37842,tx=37843,t_=37844,tb=37845,tw=37846,tM=37847,tS=37848,tT=37849,tE=37850,tA=37851,tL=37852,tR=37853,tC=2200,tP=2201,tI=2202,tD=2300,tN=2301,tB=2302,tz=2400,tF=2401,tO=2402,tH=2500,tU=2501,tG=0,tk=1,tV=2,tW=3e3,tj=3001,tq=3007,tX=3002,tY=3003,tZ=3004,tJ=3005,tQ=3006,tK=3200,t$=3201,t0=0,t1=1,t3=0,t2=7680,t4=7681,t5=7682,t6=7683,t8=34055,t7=34056,t9=5386,ie=512,it=513,ii=514,ir=515,ia=516,is=517,io=518,il=519,ih=35044,ic=35048,iu=35040,id=35045,ip=35049,im=35041,ig=35046,iv=35050,iy=35042,ix="100",i_="300 es";class ib{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners[e];if(void 0!==i){let e=i.indexOf(t);-1!==e&&i.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners[e.type];if(void 0!==t){e.target=this;let i=t.slice(0);for(let t=0,r=i.length;t<r;t++)i[t].call(this,e);e.target=null}}}const iw=[];for(let e=0;e<256;e++)iw[e]=(e<16?"0":"")+e.toString(16);let iM=1234567;const iS=Math.PI/180,iT=180/Math.PI;function iE(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(iw[255&e]+iw[e>>8&255]+iw[e>>16&255]+iw[e>>24&255]+"-"+iw[255&t]+iw[t>>8&255]+"-"+iw[t>>16&15|64]+iw[t>>24&255]+"-"+iw[63&i|128]+iw[i>>8&255]+"-"+iw[i>>16&255]+iw[i>>24&255]+iw[255&r]+iw[r>>8&255]+iw[r>>16&255]+iw[r>>24&255]).toUpperCase()}function iA(e,t,i){return Math.max(t,Math.min(i,e))}function iL(e,t){return(e%t+t)%t}function iR(e,t,i){return(1-i)*e+i*t}function iC(e){return(e&e-1)==0&&0!==e}function iP(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function iI(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var iD=Object.freeze({__proto__:null,DEG2RAD:iS,RAD2DEG:iT,generateUUID:iE,clamp:iA,euclideanModulo:iL,mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:iR,damp:function(e,t,i,r){return iR(e,t,1-Math.exp(-i*r))},pingpong:function(e,t=1){return t-Math.abs(iL(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(iM=e%2147483647),((iM=16807*iM%2147483647)-1)/2147483646},degToRad:function(e){return e*iS},radToDeg:function(e){return e*iT},isPowerOfTwo:iC,ceilPowerOfTwo:iP,floorPowerOfTwo:iI,setQuaternionFromProperEuler:function(e,t,i,r,n){let a=Math.cos,s=Math.sin,o=a(i/2),l=s(i/2),h=a((t+r)/2),c=s((t+r)/2),u=a((t-r)/2),d=s((t-r)/2),p=a((r-t)/2),m=s((r-t)/2);switch(n){case"XYX":e.set(o*c,l*u,l*d,o*h);break;case"YZY":e.set(l*d,o*c,l*u,o*h);break;case"ZXZ":e.set(l*u,l*d,o*c,o*h);break;case"XZX":e.set(o*c,l*m,l*p,o*h);break;case"YXY":e.set(l*p,o*c,l*m,o*h);break;case"ZYZ":e.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}});class iN{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),r=Math.sin(t),n=this.x-e.x,a=this.y-e.y;return this.x=n*i-a*r+e.x,this.y=n*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}iN.prototype.isVector2=!0;class iB{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=r,h[2]=s,h[3]=t,h[4]=n,h[5]=o,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,r=t.elements,n=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],m=r[0],f=r[3],g=r[6],v=r[1],y=r[4],x=r[7],_=r[2],b=r[5],w=r[8];return n[0]=a*m+s*v+o*_,n[3]=a*f+s*y+o*b,n[6]=a*g+s*x+o*w,n[1]=l*m+h*v+c*_,n[4]=l*f+h*y+c*b,n[7]=l*g+h*x+c*w,n[2]=u*m+d*v+p*_,n[5]=u*f+d*y+p*b,n[8]=u*g+d*x+p*w,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-i*n*h+i*s*o+r*n*l-r*a*o}invert(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=h*a-s*l,u=s*o-h*n,d=l*n-a*o,p=t*c+i*u+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let m=1/p;return e[0]=c*m,e[1]=(r*l-h*i)*m,e[2]=(s*i-r*a)*m,e[3]=u*m,e[4]=(h*t-r*o)*m,e[5]=(r*n-s*t)*m,e[6]=d*m,e[7]=(i*o-l*t)*m,e[8]=(a*t-i*n)*m,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,n,a,s){let o=Math.cos(n),l=Math.sin(n);return this.set(i*o,i*l,-i*(o*a+l*s)+a+e,-r*l,r*o,-r*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),r=this.elements,n=r[0],a=r[3],s=r[6],o=r[1],l=r[4],h=r[7];return r[0]=t*n+i*o,r[3]=t*a+i*l,r[6]=t*s+i*h,r[1]=-i*n+t*o,r[4]=-i*a+t*l,r[7]=-i*s+t*h,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}iB.prototype.isMatrix3=!0;class iz{static getDataURL(t){let i;if(/^data:/i.test(t.src)||"undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)i=t;else{void 0===e&&(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),e.width=t.width,e.height=t.height;let r=e.getContext("2d");t instanceof ImageData?r.putImageData(t,0,0):r.drawImage(t,0,0,t.width,t.height),i=e}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}}let iF=0;class iO extends ib{constructor(e=iO.DEFAULT_IMAGE,t=iO.DEFAULT_MAPPING,i=eg,r=eg,n=eM,a=eE,s=ek,o=eL,l=1,h=tW){super(),Object.defineProperty(this,"id",{value:iF++}),this.uuid=iE(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new iN(0,0),this.repeat=new iN(1,1),this.center=new iN(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new iB,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let r=this.image;if(void 0===r.uuid&&(r.uuid=iE()),!t&&void 0===e.images[r.uuid]){let t;if(Array.isArray(r)){t=[];for(let e=0,i=r.length;e<i;e++)r[e].isDataTexture?t.push(iH(r[e].image)):t.push(iH(r[e]))}else t=iH(r);e.images[r.uuid]={uuid:r.uuid,url:t}}i.image=r.uuid}return t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==el)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ef:e.x=e.x-Math.floor(e.x);break;case eg:e.x=e.x<0?0:1;break;case ev:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case ef:e.y=e.y-Math.floor(e.y);break;case eg:e.y=e.y<0?0:1;break;case ev:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function iH(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?iz.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}iO.DEFAULT_IMAGE=void 0,iO.DEFAULT_MAPPING=el,iO.prototype.isTexture=!0;class iU{constructor(e=0,t=0,i=0,r=1){this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,r=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,n;let a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],m=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(u-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(u+p)&&.1>Math.abs(s+c+m-3))return this.set(1,0,0,0),this;t=Math.PI;let e=(s+1)/2,a=(c+1)/2,f=(m+1)/2,g=(o+h)/4,v=(l+d)/4,y=(u+p)/4;return e>a&&e>f?e<.01?(i=0,r=.707106781,n=.707106781):(r=g/(i=Math.sqrt(e)),n=v/i):a>f?a<.01?(i=.707106781,r=0,n=.707106781):(i=g/(r=Math.sqrt(a)),n=y/r):f<.01?(i=.707106781,r=.707106781,n=0):(i=v/(n=Math.sqrt(f)),r=y/n),this.set(i,r,n,t),this}let f=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(f)&&(f=1),this.x=(p-u)/f,this.y=(l-d)/f,this.z=(h-o)/f,this.w=Math.acos((s+c+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}iU.prototype.isVector4=!0;class iG extends ib{constructor(e,t,i){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new iU(0,0,e,t),this.scissorTest=!1,this.viewport=new iU(0,0,e,t),i=i||{},this.texture=new iO(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:eM,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}iG.prototype.isWebGLRenderTarget=!0;class ik extends iG{constructor(e,t,i){super(e,t,i),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}ik.prototype.isWebGLMultisampleRenderTarget=!0;class iV{constructor(e=0,t=0,i=0,r=1){this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,t,r)}static slerpFlat(e,t,i,r,n,a,s){let o=i[r+0],l=i[r+1],h=i[r+2],c=i[r+3],u=n[a+0],d=n[a+1],p=n[a+2],m=n[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c;return}if(1===s){e[t+0]=u,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(c!==m||o!==u||l!==d||h!==p){let e=1-s,t=o*u+l*d+h*p+c*m,i=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){let n=Math.sqrt(r),a=Math.atan2(n,t*i);e=Math.sin(e*a)/n,s=Math.sin(s*a)/n}let n=s*i;if(o=o*e+u*n,l=l*e+d*n,h=h*e+p*n,c=c*e+m*n,e===1-s){let e=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=e,l*=e,h*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,i,r,n,a){let s=i[r],o=i[r+1],l=i[r+2],h=i[r+3],c=n[a],u=n[a+1],d=n[a+2],p=n[a+3];return e[t]=s*p+h*c+o*d-l*u,e[t+1]=o*p+h*u+l*c-s*d,e[t+2]=l*p+h*d+s*u-o*c,e[t+3]=h*p-s*c-o*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let i=e._x,r=e._y,n=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(i/2),h=s(r/2),c=s(n/2),u=o(i/2),d=o(r/2),p=o(n/2);switch(a){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],r=t[4],n=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],c=t[10],u=i+s+c;if(u>0){let e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(h-o)*e,this._y=(n-l)*e,this._z=(a-r)*e}else if(i>s&&i>c){let e=2*Math.sqrt(1+i-s-c);this._w=(h-o)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(n+l)/e}else if(s>c){let e=2*Math.sqrt(1+s-i-c);this._w=(n-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(o+h)/e}else{let e=2*Math.sqrt(1+c-i-s);this._w=(a-r)/e,this._x=(n+l)/e,this._y=(o+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=i,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(iA(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);if(0===i)return this;let r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,r=e._y,n=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+a*s+r*l-n*o,this._y=r*h+a*o+n*s-i*l,this._z=n*h+a*l+i*o-r*s,this._w=a*h-i*s-r*o-n*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,r=this._y,n=this._z,a=this._w,s=a*e._w+i*e._x+r*e._y+n*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=i,this._y=r,this._z=n,this;let o=1-s*s;if(o<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*i+t*this._x,this._y=e*r+t*this._y,this._z=e*n+t*this._z,this.normalize(),this._onChangeCallback(),this}let l=Math.sqrt(o),h=Math.atan2(l,s),c=Math.sin((1-t)*h)/l,u=Math.sin(t*h)/l;return this._w=a*c+this._w*u,this._x=i*c+this._x*u,this._y=r*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){this.copy(e).slerp(t,i)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}iV.prototype.isQuaternion=!0;class iW{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(iq.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(iq.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6]*r,this.y=n[1]*t+n[4]*i+n[7]*r,this.z=n[2]*t+n[5]*i+n[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,r=this.z,n=e.elements,a=1/(n[3]*t+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*t+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*t+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*t+n[6]*i+n[10]*r+n[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,r=this.z,n=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*i,h=o*i+s*t-n*r,c=o*r+n*i-a*t,u=-n*t-a*i-s*r;return this.x=l*o+-(u*n)+-(h*s)- -(c*a),this.y=h*o+-(u*a)+-(c*n)- -(l*s),this.z=c*o+-(u*s)+-(l*a)- -(h*n),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r,this.y=n[1]*t+n[5]*i+n[9]*r,this.z=n[2]*t+n[6]*i+n[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,r=e.y,n=e.z,a=t.x,s=t.y,o=t.z;return this.x=r*o-n*s,this.y=n*a-i*o,this.z=i*s-r*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ij.copy(this).projectOnVector(e),this.sub(ij)}reflect(e){return this.sub(ij.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(iA(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}iW.prototype.isVector3=!0;const ij=new iW,iq=new iV;class iX{constructor(e=new iW(1/0,1/0,1/0),t=new iW(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let l=e[o],h=e[o+1],c=e[o+2];l<t&&(t=l),h<i&&(i=h),c<r&&(r=c),l>n&&(n=l),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,i,r),this.max.set(n,a,s),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let l=e.getX(o),h=e.getY(o),c=e.getZ(o);l<t&&(t=l),h<i&&(i=h),c<r&&(r=c),l>n&&(n=l),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,i,r),this.max.set(n,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=iZ.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new iW),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new iW),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);let t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),iJ.copy(t.boundingBox),iJ.applyMatrix4(e.matrixWorld),this.union(iJ));let i=e.children;for(let e=0,t=i.length;e<t;e++)this.expandByObject(i[e]);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new iW),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,iZ),iZ.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(i2),i4.subVectors(this.max,i2),iQ.subVectors(e.a,i2),iK.subVectors(e.b,i2),i$.subVectors(e.c,i2),i0.subVectors(iK,iQ),i1.subVectors(i$,iK),i3.subVectors(iQ,i$);let t=[0,-i0.z,i0.y,0,-i1.z,i1.y,0,-i3.z,i3.y,i0.z,0,-i0.x,i1.z,0,-i1.x,i3.z,0,-i3.x,-i0.y,i0.x,0,-i1.y,i1.x,0,-i3.y,i3.x,0];return!!(i8(t,iQ,iK,i$,i4)&&i8(t=[1,0,0,0,1,0,0,0,1],iQ,iK,i$,i4))&&(i5.crossVectors(i0,i1),i8(t=[i5.x,i5.y,i5.z],iQ,iK,i$,i4))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new iW),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return iZ.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(iZ).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(iY[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),iY[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),iY[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),iY[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),iY[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),iY[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),iY[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),iY[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(iY)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}iX.prototype.isBox3=!0;const iY=[new iW,new iW,new iW,new iW,new iW,new iW,new iW,new iW],iZ=new iW,iJ=new iX,iQ=new iW,iK=new iW,i$=new iW,i0=new iW,i1=new iW,i3=new iW,i2=new iW,i4=new iW,i5=new iW,i6=new iW;function i8(e,t,i,r,n){for(let a=0,s=e.length-3;a<=s;a+=3){i6.fromArray(e,a);let s=n.x*Math.abs(i6.x)+n.y*Math.abs(i6.y)+n.z*Math.abs(i6.z),o=t.dot(i6),l=i.dot(i6),h=r.dot(i6);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>s)return!1}return!0}const i7=new iX,i9=new iW,re=new iW,rt=new iW;class ri{constructor(e=new iW,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):i7.setFromPoints(e).getCenter(i);let r=0;for(let t=0,n=e.length;t<n;t++)r=Math.max(r,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new iW),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return(void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new iX),this.isEmpty())?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){rt.subVectors(e,this.center);let t=rt.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),i=(e-this.radius)*.5;this.center.add(rt.multiplyScalar(i/e)),this.radius+=i}return this}union(e){return re.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(i9.copy(e.center).add(re)),this.expandByPoint(i9.copy(e.center).sub(re)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const rr=new iW,rn=new iW,ra=new iW,rs=new iW,ro=new iW,rl=new iW,rh=new iW;class rc{constructor(e=new iW,t=new iW(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new iW),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rr)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new iW),t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=rr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rr.copy(this.direction).multiplyScalar(t).add(this.origin),rr.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){let n,a,s,o;rn.copy(e).add(t).multiplyScalar(.5),ra.copy(t).sub(e).normalize(),rs.copy(this.origin).sub(rn);let l=.5*e.distanceTo(t),h=-this.direction.dot(ra),c=rs.dot(this.direction),u=-rs.dot(ra),d=rs.lengthSq(),p=Math.abs(1-h*h);if(p>0){if(n=h*u-c,a=h*c-u,o=l*p,n>=0){if(a>=-o){if(a<=o){let e=1/p;n*=e,a*=e,s=n*(n+h*a+2*c)+a*(h*n+a+2*u)+d}else s=-(n=Math.max(0,-(h*(a=l)+c)))*n+a*(a+2*u)+d}else s=-(n=Math.max(0,-(h*(a=-l)+c)))*n+a*(a+2*u)+d}else a<=-o?(a=(n=Math.max(0,-(-h*l+c)))>0?-l:Math.min(Math.max(-l,-u),l),s=-n*n+a*(a+2*u)+d):a<=o?(n=0,s=(a=Math.min(Math.max(-l,-u),l))*(a+2*u)+d):(a=(n=Math.max(0,-(h*l+c)))>0?l:Math.min(Math.max(-l,-u),l),s=-n*n+a*(a+2*u)+d)}else a=h>0?-l:l,s=-(n=Math.max(0,-(h*a+c)))*n+a*(a+2*u)+d;return i&&i.copy(this.direction).multiplyScalar(n).add(this.origin),r&&r.copy(ra).multiplyScalar(a).add(rn),s}intersectSphere(e,t){rr.subVectors(e.center,this.origin);let i=rr.dot(this.direction),r=rr.dot(rr)-i*i,n=e.radius*e.radius;if(r>n)return null;let a=Math.sqrt(n-r),s=i-a,o=i+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let i,r,n,a,s,o;let l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return(l>=0?(i=(e.min.x-u.x)*l,r=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,r=(e.min.x-u.x)*l),h>=0?(n=(e.min.y-u.y)*h,a=(e.max.y-u.y)*h):(n=(e.max.y-u.y)*h,a=(e.min.y-u.y)*h),i>a||n>r)?null:((n>i||i!=i)&&(i=n),(a<r||r!=r)&&(r=a),c>=0?(s=(e.min.z-u.z)*c,o=(e.max.z-u.z)*c):(s=(e.max.z-u.z)*c,o=(e.min.z-u.z)*c),i>o||s>r)?null:((s>i||i!=i)&&(i=s),(o<r||r!=r)&&(r=o),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return null!==this.intersectBox(e,rr)}intersectTriangle(e,t,i,r,n){let a;ro.subVectors(t,e),rl.subVectors(i,e),rh.crossVectors(ro,rl);let s=this.direction.dot(rh);if(s>0){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}rs.subVectors(this.origin,e);let o=a*this.direction.dot(rl.crossVectors(rs,rl));if(o<0)return null;let l=a*this.direction.dot(ro.cross(rs));if(l<0||o+l>s)return null;let h=-a*rs.dot(rh);return h<0?null:this.at(h/s,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ru{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,s,o,l,h,c,u,d,p,m,f){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ru().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,r=1/rd.setFromMatrixColumn(e,0).length(),n=1/rd.setFromMatrixColumn(e,1).length(),a=1/rd.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*n,t[5]=i[5]*n,t[6]=i[6]*n,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,i=e.x,r=e.y,n=e.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(r),l=Math.sin(r),h=Math.cos(n),c=Math.sin(n);if("XYZ"===e.order){let e=a*h,i=a*c,r=s*h,n=s*c;t[0]=o*h,t[4]=-o*c,t[8]=l,t[1]=i+r*l,t[5]=e-n*l,t[9]=-s*o,t[2]=n-e*l,t[6]=r+i*l,t[10]=a*o}else if("YXZ"===e.order){let e=o*h,i=o*c,r=l*h,n=l*c;t[0]=e+n*s,t[4]=r*s-i,t[8]=a*l,t[1]=a*c,t[5]=a*h,t[9]=-s,t[2]=i*s-r,t[6]=n+e*s,t[10]=a*o}else if("ZXY"===e.order){let e=o*h,i=o*c,r=l*h,n=l*c;t[0]=e-n*s,t[4]=-a*c,t[8]=r+i*s,t[1]=i+r*s,t[5]=a*h,t[9]=n-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let e=a*h,i=a*c,r=s*h,n=s*c;t[0]=o*h,t[4]=r*l-i,t[8]=e*l+n,t[1]=o*c,t[5]=n*l+e,t[9]=i*l-r,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let e=a*o,i=a*l,r=s*o,n=s*l;t[0]=o*h,t[4]=n-e*c,t[8]=r*c+i,t[1]=c,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=i*c+r,t[10]=e-n*c}else if("XZY"===e.order){let e=a*o,i=a*l,r=s*o,n=s*l;t[0]=o*h,t[4]=-c,t[8]=l*h,t[1]=e*c+n,t[5]=a*h,t[9]=i*c-r,t[2]=r*c-i,t[6]=s*h,t[10]=n*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(rm,e,rf)}lookAt(e,t,i){let r=this.elements;return ry.subVectors(e,t),0===ry.lengthSq()&&(ry.z=1),ry.normalize(),rg.crossVectors(i,ry),0===rg.lengthSq()&&(1===Math.abs(i.z)?ry.x+=1e-4:ry.z+=1e-4,ry.normalize(),rg.crossVectors(i,ry)),rg.normalize(),rv.crossVectors(ry,rg),r[0]=rg.x,r[4]=rv.x,r[8]=ry.x,r[1]=rg.y,r[5]=rv.y,r[9]=ry.y,r[2]=rg.z,r[6]=rv.z,r[10]=ry.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,r=t.elements,n=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],b=r[0],w=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],L=r[13],R=r[2],C=r[6],P=r[10],I=r[14],D=r[3],N=r[7],B=r[11],z=r[15];return n[0]=a*b+s*T+o*R+l*D,n[4]=a*w+s*E+o*C+l*N,n[8]=a*M+s*A+o*P+l*B,n[12]=a*S+s*L+o*I+l*z,n[1]=h*b+c*T+u*R+d*D,n[5]=h*w+c*E+u*C+d*N,n[9]=h*M+c*A+u*P+d*B,n[13]=h*S+c*L+u*I+d*z,n[2]=p*b+m*T+f*R+g*D,n[6]=p*w+m*E+f*C+g*N,n[10]=p*M+m*A+f*P+g*B,n[14]=p*S+m*L+f*I+g*z,n[3]=v*b+y*T+x*R+_*D,n[7]=v*w+y*E+x*C+_*N,n[11]=v*M+y*A+x*P+_*B,n[15]=v*S+y*L+x*I+_*z,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14],p=e[3];return p*(+n*o*c-r*l*c-n*s*u+i*l*u+r*s*d-i*o*d)+e[7]*(+t*o*d-t*l*u+n*a*u-r*a*d+r*l*h-n*o*h)+e[11]*(+t*l*c-t*s*d-n*a*c+i*a*d+n*s*h-i*l*h)+e[15]*(-r*s*h-t*o*c+t*s*u+r*a*c-i*a*u+i*o*h)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,i){let r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=c*f*l-m*u*l+m*o*d-s*f*d-c*o*g+s*u*g,y=p*u*l-h*f*l-p*o*d+a*f*d+h*o*g-a*u*g,x=h*m*l-p*c*l+p*s*d-a*m*d-h*s*g+a*c*g,_=p*c*o-h*m*o-p*s*u+a*m*u+h*s*f-a*c*f,b=t*v+i*y+r*x+n*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return e[0]=v*w,e[1]=(m*u*n-c*f*n-m*r*d+i*f*d+c*r*g-i*u*g)*w,e[2]=(s*f*n-m*o*n+m*r*l-i*f*l-s*r*g+i*o*g)*w,e[3]=(c*o*n-s*u*n-c*r*l+i*u*l+s*r*d-i*o*d)*w,e[4]=y*w,e[5]=(h*f*n-p*u*n+p*r*d-t*f*d-h*r*g+t*u*g)*w,e[6]=(p*o*n-a*f*n-p*r*l+t*f*l+a*r*g-t*o*g)*w,e[7]=(a*u*n-h*o*n+h*r*l-t*u*l-a*r*d+t*o*d)*w,e[8]=x*w,e[9]=(p*c*n-h*m*n-p*i*d+t*m*d+h*i*g-t*c*g)*w,e[10]=(a*m*n-p*s*n+p*i*l-t*m*l-a*i*g+t*s*g)*w,e[11]=(h*s*n-a*c*n-h*i*l+t*c*l+a*i*d-t*s*d)*w,e[12]=_*w,e[13]=(h*m*r-p*c*r+p*i*u-t*m*u-h*i*f+t*c*f)*w,e[14]=(p*s*r-a*m*r-p*i*o+t*m*o+a*i*f-t*s*f)*w,e[15]=(a*c*r-h*s*r+h*i*o-t*c*o-a*i*u+t*s*u)*w,this}scale(e){let t=this.elements,i=e.x,r=e.y,n=e.z;return t[0]*=i,t[4]*=r,t[8]*=n,t[1]*=i,t[5]*=r,t[9]*=n,t[2]*=i,t[6]*=r,t[10]*=n,t[3]*=i,t[7]*=r,t[11]*=n,this}getMaxScaleOnAxis(){let e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),r=Math.sin(t),n=1-i,a=e.x,s=e.y,o=e.z,l=n*a,h=n*s;return this.set(l*a+i,l*s-r*o,l*o+r*s,0,l*s+r*o,h*s+i,h*o-r*a,0,l*o-r*s,h*o+r*a,n*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this}compose(e,t,i){let r=this.elements,n=t._x,a=t._y,s=t._z,o=t._w,l=n+n,h=a+a,c=s+s,u=n*l,d=n*h,p=n*c,m=a*h,f=a*c,g=s*c,v=o*l,y=o*h,x=o*c,_=i.x,b=i.y,w=i.z;return r[0]=(1-(m+g))*_,r[1]=(d+x)*_,r[2]=(p-y)*_,r[3]=0,r[4]=(d-x)*b,r[5]=(1-(u+g))*b,r[6]=(f+v)*b,r[7]=0,r[8]=(p+y)*w,r[9]=(f-v)*w,r[10]=(1-(u+m))*w,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){let r=this.elements,n=rd.set(r[0],r[1],r[2]).length(),a=rd.set(r[4],r[5],r[6]).length(),s=rd.set(r[8],r[9],r[10]).length();0>this.determinant()&&(n=-n),e.x=r[12],e.y=r[13],e.z=r[14],rp.copy(this);let o=1/n,l=1/a,h=1/s;return rp.elements[0]*=o,rp.elements[1]*=o,rp.elements[2]*=o,rp.elements[4]*=l,rp.elements[5]*=l,rp.elements[6]*=l,rp.elements[8]*=h,rp.elements[9]*=h,rp.elements[10]*=h,t.setFromRotationMatrix(rp),i.x=n,i.y=a,i.z=s,this}makePerspective(e,t,i,r,n,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let s=this.elements;return s[0]=2*n/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*n/(i-r),s[9]=(i+r)/(i-r),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+n)/(a-n),s[14]=-2*a*n/(a-n),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,i,r,n,a){let s=this.elements,o=1/(t-e),l=1/(i-r),h=1/(a-n);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((i+r)*l),s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-((a+n)*h),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}ru.prototype.isMatrix4=!0;const rd=new iW,rp=new ru,rm=new iW(0,0,0),rf=new iW(1,1,1),rg=new iW,rv=new iW,ry=new iW,rx=new ru,r_=new iV;class rb{constructor(e=0,t=0,i=0,r=rb.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,i){let r=e.elements,n=r[0],a=r[4],s=r[8],o=r[1],l=r[5],h=r[9],c=r[2],u=r[6],d=r[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(iA(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-iA(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(iA(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-iA(c,-1,1)),.9999999>Math.abs(c)?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(iA(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-iA(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,n)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return rx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(rx,t,i)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return r_.setFromEuler(this),this.setFromQuaternion(r_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new iW(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}rb.prototype.isEuler=!0,rb.DefaultOrder="XYZ",rb.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class rw{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}}let rM=0;const rS=new iW,rT=new iV,rE=new ru,rA=new iW,rL=new iW,rR=new iW,rC=new iV,rP=new iW(1,0,0),rI=new iW(0,1,0),rD=new iW(0,0,1),rN={type:"added"},rB={type:"removed"};class rz extends ib{constructor(){super(),Object.defineProperty(this,"id",{value:rM++}),this.uuid=iE(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=rz.DefaultUp.clone();let e=new iW,t=new rb,i=new iV,r=new iW(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ru},normalMatrix:{value:new iB}}),this.matrix=new ru,this.matrixWorld=new ru,this.matrixAutoUpdate=rz.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new rw,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return rT.setFromAxisAngle(e,t),this.quaternion.multiply(rT),this}rotateOnWorldAxis(e,t){return rT.setFromAxisAngle(e,t),this.quaternion.premultiply(rT),this}rotateX(e){return this.rotateOnAxis(rP,e)}rotateY(e){return this.rotateOnAxis(rI,e)}rotateZ(e){return this.rotateOnAxis(rD,e)}translateOnAxis(e,t){return rS.copy(e).applyQuaternion(this.quaternion),this.position.add(rS.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rP,e)}translateY(e){return this.translateOnAxis(rI,e)}translateZ(e){return this.translateOnAxis(rD,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(rE.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?rA.copy(e):rA.set(e,t,i);let r=this.parent;this.updateWorldMatrix(!0,!1),rL.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?rE.lookAt(rL,rA,this.up):rE.lookAt(rA,rL,this.up),this.quaternion.setFromRotationMatrix(rE),r&&(rE.extractRotation(r.matrixWorld),rT.setFromRotationMatrix(rE),this.quaternion.premultiply(rT.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(rN)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(rB)),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(rB)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),rE.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),rE.multiply(e.parent.matrixWorld)),e.applyMatrix4(rE),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){let r=this.children[i].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new iW),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new iV),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rL,e,rR),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new iW),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rL,rC,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new iW),this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let r={};function n(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){r.geometry=n(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let i=t.shapes;if(Array.isArray(i))for(let t=0,r=i.length;t<r;t++){let r=i[t];n(e.shapes,r)}else n(e.shapes,i)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let i=0,r=this.material.length;i<r;i++)t.push(n(e.materials,this.material[i]));r.material=t}else r.material=n(e.materials,this.material)}if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){let i=this.animations[t];r.animations.push(n(e.animations,i))}}if(t){let t=a(e.geometries),r=a(e.materials),n=a(e.textures),s=a(e.images),o=a(e.shapes),l=a(e.skeletons),h=a(e.animations);t.length>0&&(i.geometries=t),r.length>0&&(i.materials=r),n.length>0&&(i.textures=n),s.length>0&&(i.images=s),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h)}return i.object=r,i;function a(e){let t=[];for(let i in e){let r=e[i];delete r.metadata,t.push(r)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let i=e.children[t];this.add(i.clone())}return this}}rz.DefaultUp=new iW(0,1,0),rz.DefaultMatrixAutoUpdate=!0,rz.prototype.isObject3D=!0;const rF=new iW,rO=new iW,rH=new iB;class rU{constructor(e=new iW(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let r=rF.subVectors(i,t).cross(rO.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new iW),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new iW);let i=e.delta(rF),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let n=-(e.start.dot(this.normal)+this.constant)/r;return n<0||n>1?null:t.copy(i).multiplyScalar(n).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new iW),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||rH.getNormalMatrix(e),r=this.coplanarPoint(rF).applyMatrix4(e),n=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(n),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}rU.prototype.isPlane=!0;const rG=new iW,rk=new iW,rV=new iW,rW=new iW,rj=new iW,rq=new iW,rX=new iW,rY=new iW,rZ=new iW,rJ=new iW;class rQ{constructor(e=new iW,t=new iW,i=new iW){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new iW),r.subVectors(i,t),rG.subVectors(e,t),r.cross(rG);let n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,i,r,n){rG.subVectors(r,t),rk.subVectors(i,t),rV.subVectors(e,t);let a=rG.dot(rG),s=rG.dot(rk),o=rG.dot(rV),l=rk.dot(rk),h=rk.dot(rV),c=a*l-s*s;if(void 0===n&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),n=new iW),0===c)return n.set(-2,-1,-1);let u=1/c,d=(l*o-s*h)*u,p=(a*h-s*o)*u;return n.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,rW),rW.x>=0&&rW.y>=0&&rW.x+rW.y<=1}static getUV(e,t,i,r,n,a,s,o){return this.getBarycoord(e,t,i,r,rW),o.set(0,0),o.addScaledVector(n,rW.x),o.addScaledVector(a,rW.y),o.addScaledVector(s,rW.z),o}static isFrontFacing(e,t,i,r){return rG.subVectors(i,t),rk.subVectors(e,t),0>rG.cross(rk).dot(r)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return rG.subVectors(this.c,this.b),rk.subVectors(this.a,this.b),.5*rG.cross(rk).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new iW),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return rQ.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new rU),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return rQ.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,n){return rQ.getUV(e,this.a,this.b,this.c,t,i,r,n)}containsPoint(e){return rQ.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return rQ.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i,r;void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new iW);let n=this.a,a=this.b,s=this.c;rj.subVectors(a,n),rq.subVectors(s,n),rY.subVectors(e,n);let o=rj.dot(rY),l=rq.dot(rY);if(o<=0&&l<=0)return t.copy(n);rZ.subVectors(e,a);let h=rj.dot(rZ),c=rq.dot(rZ);if(h>=0&&c<=h)return t.copy(a);let u=o*c-h*l;if(u<=0&&o>=0&&h<=0)return i=o/(o-h),t.copy(n).addScaledVector(rj,i);rJ.subVectors(e,s);let d=rj.dot(rJ),p=rq.dot(rJ);if(p>=0&&d<=p)return t.copy(s);let m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return r=l/(l-p),t.copy(n).addScaledVector(rq,r);let f=h*p-d*c;if(f<=0&&c-h>=0&&d-p>=0)return rX.subVectors(s,a),r=(c-h)/(c-h+(d-p)),t.copy(a).addScaledVector(rX,r);let g=1/(f+m+u);return i=m*g,r=u*g,t.copy(n).addScaledVector(rj,i).addScaledVector(rq,r)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rK=0;function r$(){Object.defineProperty(this,"id",{value:rK++}),this.uuid=iE(),this.name="",this.type="Material",this.fog=!0,this.blending=S,this.side=y,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=O,this.blendDst=H,this.blendEquation=R,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Y,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=il,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=t2,this.stencilZFail=t2,this.stencilZPass=t2,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}r$.prototype=Object.assign(Object.create(ib.prototype),{constructor:r$,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===b;continue}let r=this[t];if(void 0===r){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}},toJSON:function(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){let t=[];for(let i in e){let r=e[i];delete r.metadata,t.push(r)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==S&&(i.blending=this.blending),this.side!==y&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){let t=r(e.textures),n=r(e.images);t.length>0&&(i.textures=t),n.length>0&&(i.images=n)}return i},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let e=t.length;i=Array(e);for(let r=0;r!==e;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(r$.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const r0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},r1={h:0,s:0,l:0},r3={h:0,s:0,l:0};function r2(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}function r4(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function r5(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class r6{constructor(e,t,i){if(void 0===t&&void 0===i)return this.set(e);return this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=iL(e,1),t=iA(t,0,1),i=iA(i,0,1),0===t)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,n=2*i-r;this.r=r2(n,r,e+1/3),this.g=r2(n,r,e),this.b=r2(n,r,e-1/3)}return this}setStyle(e){let t;function i(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(t=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;let r=t[1],n=t[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,i(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,i(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){let t=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,n=parseInt(e[3],10)/100;return i(e[4]),this.setHSL(t,r,n)}}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){let e=t[1],i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){let t=r0[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){let i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=r4(e.r),this.g=r4(e.g),this.b=r4(e.b),this}copyLinearToSRGB(e){return this.r=r5(e.r),this.g=r5(e.g),this.b=r5(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){let t,i;void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});let r=this.r,n=this.g,a=this.b,s=Math.max(r,n,a),o=Math.min(r,n,a),l=(o+s)/2;if(o===s)t=0,i=0;else{let e=s-o;switch(i=l<=.5?e/(s+o):e/(2-s-o),s){case r:t=(n-a)/e+(n<a?6:0);break;case n:t=(a-r)/e+2;break;case a:t=(r-n)/e+4}t/=6}return e.h=t,e.s=i,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,i){return this.getHSL(r1),r1.h+=e,r1.s+=t,r1.l+=i,this.setHSL(r1.h,r1.s,r1.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(r1),e.getHSL(r3);let i=iR(r1.h,r3.h,t),r=iR(r1.s,r3.s,t),n=iR(r1.l,r3.l,t);return this.setHSL(i,r,n),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}r6.NAMES=r0,r6.prototype.isColor=!0,r6.prototype.r=1,r6.prototype.g=1,r6.prototype.b=1;class r8 extends r${constructor(e){super(),this.type="MeshBasicMaterial",this.color=new r6(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}r8.prototype.isMeshBasicMaterial=!0;const r7=new iW,r9=new iN;class ne{constructor(e,t,i){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=ih,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),n=new r6),t[i++]=n.r,t[i++]=n.g,t[i++]=n.b}return this}copyVector2sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),n=new iN),t[i++]=n.x,t[i++]=n.y}return this}copyVector3sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),n=new iW),t[i++]=n.x,t[i++]=n.y,t[i++]=n.z}return this}copyVector4sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),n=new iU),t[i++]=n.x,t[i++]=n.y,t[i++]=n.z,t[i++]=n.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)r9.fromBufferAttribute(this,t),r9.applyMatrix3(e),this.setXY(t,r9.x,r9.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)r7.fromBufferAttribute(this,t),r7.applyMatrix3(e),this.setXYZ(t,r7.x,r7.y,r7.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)r7.x=this.getX(t),r7.y=this.getY(t),r7.z=this.getZ(t),r7.applyMatrix4(e),this.setXYZ(t,r7.x,r7.y,r7.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)r7.x=this.getX(t),r7.y=this.getY(t),r7.z=this.getZ(t),r7.applyNormalMatrix(e),this.setXYZ(t,r7.x,r7.y,r7.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)r7.x=this.getX(t),r7.y=this.getY(t),r7.z=this.getZ(t),r7.transformDirection(e),this.setXYZ(t,r7.x,r7.y,r7.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ih&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}ne.prototype.isBufferAttribute=!0;class nt extends ne{constructor(e,t,i){super(new Int8Array(e),t,i)}}class ni extends ne{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class nr extends ne{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class nn extends ne{constructor(e,t,i){super(new Int16Array(e),t,i)}}class na extends ne{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class ns extends ne{constructor(e,t,i){super(new Int32Array(e),t,i)}}class no extends ne{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class nl extends ne{constructor(e,t,i){super(new Uint16Array(e),t,i)}}nl.prototype.isFloat16BufferAttribute=!0;class nh extends ne{constructor(e,t,i){super(new Float32Array(e),t,i)}}class nc extends ne{constructor(e,t,i){super(new Float64Array(e),t,i)}}function nu(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,r=e.length;i<r;++i)e[i]>t&&(t=e[i]);return t}const nd={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function np(e,t){return new nd[e](t)}let nm=0;const nf=new ru,ng=new rz,nv=new iW,ny=new iX,nx=new iX,n_=new iW;class nb extends ib{constructor(){super(),Object.defineProperty(this,"id",{value:nm++}),this.uuid=iE(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(nu(e)>65535?no:na)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let t=new iB().getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(e){return nf.makeRotationX(e),this.applyMatrix4(nf),this}rotateY(e){return nf.makeRotationY(e),this.applyMatrix4(nf),this}rotateZ(e){return nf.makeRotationZ(e),this.applyMatrix4(nf),this}translate(e,t,i){return nf.makeTranslation(e,t,i),this.applyMatrix4(nf),this}scale(e,t,i){return nf.makeScale(e,t,i),this.applyMatrix4(nf),this}lookAt(e){return ng.lookAt(e),ng.updateMatrix(),this.applyMatrix4(ng.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(nv).negate(),this.translate(nv.x,nv.y,nv.z),this}setFromPoints(e){let t=[];for(let i=0,r=e.length;i<r;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new nh(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new iX);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new iW(-1/0,-1/0,-1/0),new iW(1/0,1/0,1/0));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];ny.setFromBufferAttribute(i),this.morphTargetsRelative?(n_.addVectors(this.boundingBox.min,ny.min),this.boundingBox.expandByPoint(n_),n_.addVectors(this.boundingBox.max,ny.max),this.boundingBox.expandByPoint(n_)):(this.boundingBox.expandByPoint(ny.min),this.boundingBox.expandByPoint(ny.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ri);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new iW,1/0);return}if(e){let i=this.boundingSphere.center;if(ny.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];nx.setFromBufferAttribute(i),this.morphTargetsRelative?(n_.addVectors(ny.min,nx.min),ny.expandByPoint(n_),n_.addVectors(ny.max,nx.max),ny.expandByPoint(n_)):(ny.expandByPoint(nx.min),ny.expandByPoint(nx.max))}ny.getCenter(i);let r=0;for(let t=0,n=e.count;t<n;t++)n_.fromBufferAttribute(e,t),r=Math.max(r,i.distanceToSquared(n_));if(t)for(let n=0,a=t.length;n<a;n++){let a=t[n],s=this.morphTargetsRelative;for(let t=0,n=a.count;t<n;t++)n_.fromBufferAttribute(a,t),s&&(nv.fromBufferAttribute(e,t),n_.add(nv)),r=Math.max(r,i.distanceToSquared(n_))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,r=t.position.array,n=t.normal.array,a=t.uv.array,s=r.length/3;void 0===t.tangent&&this.setAttribute("tangent",new ne(new Float32Array(4*s),4));let o=t.tangent.array,l=[],h=[];for(let e=0;e<s;e++)l[e]=new iW,h[e]=new iW;let c=new iW,u=new iW,d=new iW,p=new iN,m=new iN,f=new iN,g=new iW,v=new iW,y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let e=0,t=y.length;e<t;++e){let t=y[e],n=t.start,s=t.count;for(let e=n,t=n+s;e<t;e+=3)!function(e,t,i){c.fromArray(r,3*e),u.fromArray(r,3*t),d.fromArray(r,3*i),p.fromArray(a,2*e),m.fromArray(a,2*t),f.fromArray(a,2*i),u.sub(c),d.sub(c),m.sub(p),f.sub(p);let n=1/(m.x*f.y-f.x*m.y);isFinite(n)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(n),v.copy(d).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(n),l[e].add(g),l[t].add(g),l[i].add(g),h[e].add(v),h[t].add(v),h[i].add(v))}(i[e+0],i[e+1],i[e+2])}let x=new iW,_=new iW,b=new iW,w=new iW;function M(e){b.fromArray(n,3*e),w.copy(b);let t=l[e];x.copy(t),x.sub(b.multiplyScalar(b.dot(t))).normalize(),_.crossVectors(w,t);let i=_.dot(h[e]);o[4*e]=x.x,o[4*e+1]=x.y,o[4*e+2]=x.z,o[4*e+3]=i<0?-1:1}for(let e=0,t=y.length;e<t;++e){let t=y[e],r=t.start,n=t.count;for(let e=r,t=r+n;e<t;e+=3)M(i[e+0]),M(i[e+1]),M(i[e+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new ne(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);let r=new iW,n=new iW,a=new iW,s=new iW,o=new iW,l=new iW,h=new iW,c=new iW;if(e)for(let u=0,d=e.count;u<d;u+=3){let d=e.getX(u+0),p=e.getX(u+1),m=e.getX(u+2);r.fromBufferAttribute(t,d),n.fromBufferAttribute(t,p),a.fromBufferAttribute(t,m),h.subVectors(a,n),c.subVectors(r,n),h.cross(c),s.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),s.add(h),o.add(h),l.add(h),i.setXYZ(d,s.x,s.y,s.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,s=t.count;e<s;e+=3)r.fromBufferAttribute(t,e+0),n.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,n),c.subVectors(r,n),h.cross(c),i.setXYZ(e+0,h.x,h.y,h.z),i.setXYZ(e+1,h.x,h.y,h.z),i.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let i=this.attributes;for(let r in i){if(void 0===e.attributes[r])continue;let n=i[r].array,a=e.attributes[r],s=a.array,o=a.itemSize*t,l=Math.min(s.length,n.length-o);for(let e=0,t=o;e<l;e++,t++)n[t]=s[e]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)n_.fromBufferAttribute(e,t),n_.normalize(),e.setXYZ(t,n_.x,n_.y,n_.z)}toNonIndexed(){function e(e,t){let i=e.array,r=e.itemSize,n=e.normalized,a=new i.constructor(t.length*r),s=0,o=0;for(let e=0,n=t.length;e<n;e++){s=t[e]*r;for(let e=0;e<r;e++)a[o++]=i[s++]}return new ne(a,r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new nb,i=this.index.array,r=this.attributes;for(let n in r){let a=e(r[n],i);t.setAttribute(n,a)}let n=this.morphAttributes;for(let r in n){let a=[],s=n[r];for(let t=0,r=s.length;t<r;t++){let r=e(s[t],i);a.push(r)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let e=0,i=a.length;e<i;e++){let i=a[e];t.addGroup(i.start,i.count,i.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let i=this.attributes;for(let t in i){let r=i[t];e.data.attributes[t]=r.toJSON(e.data)}let r={},n=!1;for(let t in this.morphAttributes){let i=this.morphAttributes[t],a=[];for(let t=0,r=i.length;t<r;t++){let r=i[t];a.push(r.toJSON(e.data))}a.length>0&&(r[t]=a,n=!0)}n&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return new nb().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let r=e.attributes;for(let e in r){let i=r[e];this.setAttribute(e,i.clone(t))}let n=e.morphAttributes;for(let e in n){let i=[],r=n[e];for(let e=0,n=r.length;e<n;e++)i.push(r[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}let s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());let o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}nb.prototype.isBufferGeometry=!0;const nw=new ru,nM=new rc,nS=new ri,nT=new iW,nE=new iW,nA=new iW,nL=new iW,nR=new iW,nC=new iW,nP=new iW,nI=new iW,nD=new iW,nN=new iN,nB=new iN,nz=new iN,nF=new iW,nO=new iW;class nH extends rz{constructor(e=new nb,t=new r8){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){let i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{let t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let i;let r=this.geometry,n=this.material,a=this.matrixWorld;if(void 0!==n&&(null===r.boundingSphere&&r.computeBoundingSphere(),nS.copy(r.boundingSphere),nS.applyMatrix4(a),!1!==e.ray.intersectsSphere(nS))){if(nw.copy(a).invert(),nM.copy(e.ray).applyMatrix4(nw),null!==r.boundingBox&&!1===nM.intersectsBox(r.boundingBox))return;if(r.isBufferGeometry){let a=r.index,s=r.attributes.position,o=r.morphAttributes.position,l=r.morphTargetsRelative,h=r.attributes.uv,c=r.attributes.uv2,u=r.groups,d=r.drawRange;if(null!==a){if(Array.isArray(n))for(let r=0,p=u.length;r<p;r++){let p=u[r],m=n[p.materialIndex],f=Math.max(p.start,d.start),g=Math.min(p.start+p.count,d.start+d.count);for(let r=f;r<g;r+=3)(i=nU(this,m,e,nM,s,o,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)))&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=p.materialIndex,t.push(i))}else{let r=Math.max(0,d.start),u=Math.min(a.count,d.start+d.count);for(let d=r;d<u;d+=3)(i=nU(this,n,e,nM,s,o,l,h,c,a.getX(d),a.getX(d+1),a.getX(d+2)))&&(i.faceIndex=Math.floor(d/3),t.push(i))}}else if(void 0!==s){if(Array.isArray(n))for(let r=0,a=u.length;r<a;r++){let a=u[r],p=n[a.materialIndex],m=Math.max(a.start,d.start),f=Math.min(a.start+a.count,d.start+d.count);for(let r=m;r<f;r+=3)(i=nU(this,p,e,nM,s,o,l,h,c,r,r+1,r+2))&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=a.materialIndex,t.push(i))}else{let r=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);for(let u=r;u<a;u+=3)(i=nU(this,n,e,nM,s,o,l,h,c,u,u+1,u+2))&&(i.faceIndex=Math.floor(u/3),t.push(i))}}}else r.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function nU(e,t,i,r,n,a,s,o,l,h,c,u){nT.fromBufferAttribute(n,h),nE.fromBufferAttribute(n,c),nA.fromBufferAttribute(n,u);let d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){nP.set(0,0,0),nI.set(0,0,0),nD.set(0,0,0);for(let e=0,t=a.length;e<t;e++){let t=d[e],i=a[e];0!==t&&(nL.fromBufferAttribute(i,h),nR.fromBufferAttribute(i,c),nC.fromBufferAttribute(i,u),s?(nP.addScaledVector(nL,t),nI.addScaledVector(nR,t),nD.addScaledVector(nC,t)):(nP.addScaledVector(nL.sub(nT),t),nI.addScaledVector(nR.sub(nE),t),nD.addScaledVector(nC.sub(nA),t)))}nT.add(nP),nE.add(nI),nA.add(nD)}e.isSkinnedMesh&&t.skinning&&(e.boneTransform(h,nT),e.boneTransform(c,nE),e.boneTransform(u,nA));let p=function(e,t,i,r,n,a,s,o){if(null===(t.side===x?r.intersectTriangle(s,a,n,!0,o):r.intersectTriangle(n,a,s,t.side!==_,o)))return null;nO.copy(o),nO.applyMatrix4(e.matrixWorld);let l=i.ray.origin.distanceTo(nO);return l<i.near||l>i.far?null:{distance:l,point:nO.clone(),object:e}}(e,t,i,r,nT,nE,nA,nF);if(p){o&&(nN.fromBufferAttribute(o,h),nB.fromBufferAttribute(o,c),nz.fromBufferAttribute(o,u),p.uv=rQ.getUV(nF,nT,nE,nA,nN,nB,nz,new iN)),l&&(nN.fromBufferAttribute(l,h),nB.fromBufferAttribute(l,c),nz.fromBufferAttribute(l,u),p.uv2=rQ.getUV(nF,nT,nE,nA,nN,nB,nz,new iN));let e={a:h,b:c,c:u,normal:new iW,materialIndex:0};rQ.getNormal(nT,nE,nA,e.normal),p.face=e}return p}nH.prototype.isMesh=!0;class nG extends nb{constructor(e=1,t=1,i=1,r=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:a};let s=this;r=Math.floor(r),n=Math.floor(n);let o=[],l=[],h=[],c=[],u=0,d=0;function p(e,t,i,r,n,a,p,m,f,g,v){let y=a/f,x=p/g,_=a/2,b=p/2,w=m/2,M=f+1,S=g+1,T=0,E=0,A=new iW;for(let a=0;a<S;a++){let s=a*x-b;for(let o=0;o<M;o++){let u=o*y-_;A[e]=u*r,A[t]=s*n,A[i]=w,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=m>0?1:-1,h.push(A.x,A.y,A.z),c.push(o/f),c.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){let i=u+t+M*e,r=u+t+M*(e+1),n=u+(t+1)+M*(e+1),a=u+(t+1)+M*e;o.push(i,r,a),o.push(r,n,a),E+=6}s.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,i,t,e,a=Math.floor(a),n,0),p("z","y","x",1,-1,i,t,-e,a,n,1),p("x","z","y",1,1,e,i,t,r,a,2),p("x","z","y",1,-1,e,i,-t,r,a,3),p("x","y","z",1,-1,e,t,i,r,n,4),p("x","y","z",-1,-1,e,t,-i,r,n,5),this.setIndex(o),this.setAttribute("position",new nh(l,3)),this.setAttribute("normal",new nh(h,3)),this.setAttribute("uv",new nh(c,2))}}function nk(e){let t={};for(let i in e)for(let r in t[i]={},e[i]){let n=e[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?t[i][r]=n.clone():Array.isArray(n)?t[i][r]=n.slice():t[i][r]=n}return t}function nV(e){let t={};for(let i=0;i<e.length;i++){let r=nk(e[i]);for(let e in r)t[e]=r[e]}return t}const nW={clone:nk,merge:nV};class nj extends r${constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=nk(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let i={};for(let e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}nj.prototype.isShaderMaterial=!0;class nq extends rz{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ru,this.projectionMatrix=new ru,this.projectionMatrixInverse=new ru}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new iW),this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}nq.prototype.isCamera=!0;class nX extends nq{constructor(e=50,t=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*iT*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*iS*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*iT*Math.atan(Math.tan(.5*iS*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,n,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*iS*this.fov)/this.zoom,i=2*t,r=this.aspect*i,n=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,s=a.fullHeight;n+=a.offsetX*r/e,t-=a.offsetY*i/s,r*=a.width/e,i*=a.height/s}let s=this.filmOffset;0!==s&&(n+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}nX.prototype.isPerspectiveCamera=!0;class nY extends rz{constructor(e,t,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;let r=new nX(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new iW(1,0,0)),this.add(r);let n=new nX(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new iW(-1,0,0)),this.add(n);let a=new nX(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new iW(0,1,0)),this.add(a);let s=new nX(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new iW(0,-1,0)),this.add(s);let o=new nX(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new iW(0,0,1)),this.add(o);let l=new nX(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new iW(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget,[r,n,a,s,o,l]=this.children,h=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;let u=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,n),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,s),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=u,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=h}}class nZ extends iO{constructor(e,t,i,r,n,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:eh,i,r,n,a,s=void 0!==s?s:eG,o,l,h),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}nZ.prototype.isCubeTexture=!0;class nJ extends iG{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),t=t||{},this.texture=new nZ(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:eM,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=ek,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new nG(5,5,5),n=new nj({name:"CubemapFromEquirect",uniforms:nk(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:x,blending:M});n.uniforms.tEquirect.value=t;let a=new nH(r,n),s=t.minFilter;return t.minFilter===eE&&(t.minFilter=eM),new nY(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){let n=e.getRenderTarget();for(let n=0;n<6;n++)e.setRenderTarget(this,n),e.clear(t,i,r);e.setRenderTarget(n)}}nJ.prototype.isWebGLCubeRenderTarget=!0;class nQ extends iO{constructor(e,t,i,r,n,a,s,o,l,h,c,u){super(null,a,s,o,l,h,r,n,c,u),this.image={data:e||null,width:t||1,height:i||1},this.magFilter=void 0!==l?l:ey,this.minFilter=void 0!==h?h:ey,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}nQ.prototype.isDataTexture=!0;const nK=new ri,n$=new iW;class n0{constructor(e=new rU,t=new rU,i=new rU,r=new rU,n=new rU,a=new rU){this.planes=[e,t,i,r,n,a]}set(e,t,i,r,n,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(r),s[4].copy(n),s[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,r=i[0],n=i[1],a=i[2],s=i[3],o=i[4],l=i[5],h=i[6],c=i[7],u=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],v=i[14],y=i[15];return t[0].setComponents(s-r,c-o,m-u,y-f).normalize(),t[1].setComponents(s+r,c+o,m+u,y+f).normalize(),t[2].setComponents(s+n,c+l,m+d,y+g).normalize(),t[3].setComponents(s-n,c-l,m-d,y-g).normalize(),t[4].setComponents(s-a,c-h,m-p,y-v).normalize(),t[5].setComponents(s+a,c+h,m+p,y+v).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),nK.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(nK)}intersectsSprite(e){return nK.center.set(0,0,0),nK.radius=.7071067811865476,nK.applyMatrix4(e.matrixWorld),this.intersectsSphere(nK)}intersectsSphere(e){let t=this.planes,i=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let r=t[i];if(n$.x=r.normal.x>0?e.max.x:e.min.x,n$.y=r.normal.y>0?e.max.y:e.min.y,n$.z=r.normal.z>0?e.max.z:e.min.z,0>r.distanceToPoint(n$))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function n1(){let e=null,t=!1,i=null,r=null;function n(t,a){i(t,a),r=e.requestAnimationFrame(n)}return{start:function(){!0!==t&&null!==i&&(r=e.requestAnimationFrame(n),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function n3(e,t){let i=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let i=r.get(t);i&&(e.deleteBuffer(i.buffer),r.delete(t))},update:function(t,n){if(t.isGLBufferAttribute){let e=r.get(t);(!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let a=r.get(t);void 0===a?r.set(t,function(t,r){let n=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(r,s),e.bufferData(r,n,a),t.onUploadCallback();let o=5126;return n instanceof Float32Array?o=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?t.isFloat16BufferAttribute?i?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:n instanceof Int16Array?o=5122:n instanceof Uint32Array?o=5125:n instanceof Int32Array?o=5124:n instanceof Int8Array?o=5120:n instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,n)):a.version<t.version&&(!function(t,r,n){let a=r.array,s=r.updateRange;e.bindBuffer(n,t),-1===s.count?e.bufferSubData(n,0,a):(i?e.bufferSubData(n,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(n,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(a.buffer,t,n),a.version=t.version)}}}class n2 extends nb{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};let n=e/2,a=t/2,s=Math.floor(i),o=Math.floor(r),l=s+1,h=o+1,c=e/s,u=t/o,d=[],p=[],m=[],f=[];for(let e=0;e<h;e++){let t=e*u-a;for(let i=0;i<l;i++){let r=i*c-n;p.push(r,-t,0),m.push(0,0,1),f.push(i/s),f.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){let i=t+l*e,r=t+l*(e+1),n=t+1+l*(e+1),a=t+1+l*e;d.push(i,r,a),d.push(r,n,a)}this.setIndex(d),this.setAttribute("position",new nh(p,3)),this.setAttribute("normal",new nh(m,3)),this.setAttribute("uv",new nh(f,2))}}const n4={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n#else\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n	}\n	return 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n	return Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	return specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n	float invAlpha = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifndef ENVMAP_TYPE_CUBE_UV\n		envColor = envMapTexelToLinear( envColor );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n		#else\n			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	fogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float specularRoughness;\n	vec3 specularColor;\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifdef CLEARCOAT\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			ccIrradiance *= PI;\n		#endif\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef CLEARCOAT\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	float clearcoatInv = 1.0 - clearcoatDHR;\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n	#ifdef CLEARCOAT\n		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifndef USE_MORPHNORMALS\n		uniform float morphTargetInfluences[ 8 ];\n	#else\n		uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n	transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n	transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n	transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n		transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n		transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n		transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n		transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n	totalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n	uniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n	\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#ifndef FLAT_SHADED\n		vNormal = normalize( transformedNormal );\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n	#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n	uniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#ifdef TRANSMISSION\n		float totalTransmission = transmission;\n	#endif\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <transmissionmap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#ifdef TRANSMISSION\n		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n	#endif\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}"},n5={common:{diffuse:{value:new r6(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new iB},uv2Transform:{value:new iB},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new iN(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new r6(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new r6(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new iB}},sprite:{diffuse:{value:new r6(15658734)},opacity:{value:1},center:{value:new iN(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new iB}}},n6={basic:{uniforms:nV([n5.common,n5.specularmap,n5.envmap,n5.aomap,n5.lightmap,n5.fog]),vertexShader:n4.meshbasic_vert,fragmentShader:n4.meshbasic_frag},lambert:{uniforms:nV([n5.common,n5.specularmap,n5.envmap,n5.aomap,n5.lightmap,n5.emissivemap,n5.fog,n5.lights,{emissive:{value:new r6(0)}}]),vertexShader:n4.meshlambert_vert,fragmentShader:n4.meshlambert_frag},phong:{uniforms:nV([n5.common,n5.specularmap,n5.envmap,n5.aomap,n5.lightmap,n5.emissivemap,n5.bumpmap,n5.normalmap,n5.displacementmap,n5.fog,n5.lights,{emissive:{value:new r6(0)},specular:{value:new r6(1118481)},shininess:{value:30}}]),vertexShader:n4.meshphong_vert,fragmentShader:n4.meshphong_frag},standard:{uniforms:nV([n5.common,n5.envmap,n5.aomap,n5.lightmap,n5.emissivemap,n5.bumpmap,n5.normalmap,n5.displacementmap,n5.roughnessmap,n5.metalnessmap,n5.fog,n5.lights,{emissive:{value:new r6(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:n4.meshphysical_vert,fragmentShader:n4.meshphysical_frag},toon:{uniforms:nV([n5.common,n5.aomap,n5.lightmap,n5.emissivemap,n5.bumpmap,n5.normalmap,n5.displacementmap,n5.gradientmap,n5.fog,n5.lights,{emissive:{value:new r6(0)}}]),vertexShader:n4.meshtoon_vert,fragmentShader:n4.meshtoon_frag},matcap:{uniforms:nV([n5.common,n5.bumpmap,n5.normalmap,n5.displacementmap,n5.fog,{matcap:{value:null}}]),vertexShader:n4.meshmatcap_vert,fragmentShader:n4.meshmatcap_frag},points:{uniforms:nV([n5.points,n5.fog]),vertexShader:n4.points_vert,fragmentShader:n4.points_frag},dashed:{uniforms:nV([n5.common,n5.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:n4.linedashed_vert,fragmentShader:n4.linedashed_frag},depth:{uniforms:nV([n5.common,n5.displacementmap]),vertexShader:n4.depth_vert,fragmentShader:n4.depth_frag},normal:{uniforms:nV([n5.common,n5.bumpmap,n5.normalmap,n5.displacementmap,{opacity:{value:1}}]),vertexShader:n4.normal_vert,fragmentShader:n4.normal_frag},sprite:{uniforms:nV([n5.sprite,n5.fog]),vertexShader:n4.sprite_vert,fragmentShader:n4.sprite_frag},background:{uniforms:{uvTransform:{value:new iB},t2D:{value:null}},vertexShader:n4.background_vert,fragmentShader:n4.background_frag},cube:{uniforms:nV([n5.envmap,{opacity:{value:1}}]),vertexShader:n4.cube_vert,fragmentShader:n4.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:n4.equirect_vert,fragmentShader:n4.equirect_frag},distanceRGBA:{uniforms:nV([n5.common,n5.displacementmap,{referencePosition:{value:new iW},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:n4.distanceRGBA_vert,fragmentShader:n4.distanceRGBA_frag},shadow:{uniforms:nV([n5.lights,n5.fog,{color:{value:new r6(0)},opacity:{value:1}}]),vertexShader:n4.shadow_vert,fragmentShader:n4.shadow_frag}};function n8(e,t,i,r,n){let a,s;let o=new r6(0),l=0,h=null,c=0,u=null;function d(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,n)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),d(o,l=t)},getClearAlpha:function(){return l},setClearAlpha:function(e){d(o,l=e)},render:function(i,n,p,m){let f=!0===n.isScene?n.background:null;f&&f.isTexture&&(f=t.get(f));let g=e.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(f=null),null===f?d(o,l):f&&f.isColor&&(d(f,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.mapping===ep)?(void 0===s&&((s=new nH(new nG(1,1,1),new nj({name:"BackgroundCubeMaterial",uniforms:nk(n6.cube.uniforms),vertexShader:n6.cube.vertexShader,fragmentShader:n6.cube.fragmentShader,side:x,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(s)),s.material.uniforms.envMap.value=f,s.material.uniforms.flipEnvMap.value=f.isCubeTexture&&f._needsFlipEnvMap?-1:1,(h!==f||c!==f.version||u!==e.toneMapping)&&(s.material.needsUpdate=!0,h=f,c=f.version,u=e.toneMapping),i.unshift(s,s.geometry,s.material,0,0,null)):f&&f.isTexture&&(void 0===a&&((a=new nH(new n2(2,2),new nj({name:"BackgroundMaterial",uniforms:nk(n6.background.uniforms),vertexShader:n6.background.vertexShader,fragmentShader:n6.background.fragmentShader,side:y,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(a)),a.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),a.material.uniforms.uvTransform.value.copy(f.matrix),(h!==f||c!==f.version||u!==e.toneMapping)&&(a.material.needsUpdate=!0,h=f,c=f.version,u=e.toneMapping),i.unshift(a,a.geometry,a.material,0,0,null))}}}function n7(e,t,i,r){let n=e.getParameter(34921),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=d(null),h=l;function c(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function u(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){let t=[],i=[],r=[];for(let e=0;e<n;e++)t[e]=0,i[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){let e=h.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){f(e,0)}function f(i,n){let a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;a[i]=1,0===s[i]&&(e.enableVertexAttribArray(i),s[i]=1),o[i]!==n&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,n),o[i]=n)}function g(){let t=h.newAttributes,i=h.enabledAttributes;for(let r=0,n=i.length;r<n;r++)i[r]!==t[r]&&(e.disableVertexAttribArray(r),i[r]=0)}function v(t,i,n,a,s,o){!0===r.isWebGL2&&(5124===n||5125===n)?e.vertexAttribIPointer(t,i,n,s,o):e.vertexAttribPointer(t,i,n,a,s,o)}function y(){x(),h!==l&&c((h=l).object)}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(n,l,u,y,x){let _=!1;if(s){let t=function(t,i,n){let s=!0===n.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let h=l[i.id];void 0===h&&(h={},l[i.id]=h);let c=h[s];return void 0===c&&(c=d(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),h[s]=c),c}(y,u,l);h!==t&&c((h=t).object),(_=function(e,t){let i=h.attributes,r=e.attributes,n=0;for(let e in r){let t=i[e],a=r[e];if(void 0===t||t.attribute!==a||t.data!==a.data)return!0;n++}return h.attributesNum!==n||h.index!==t}(y,x))&&function(e,t){let i={},r=e.attributes,n=0;for(let e in r){let t=r[e],a={};a.attribute=t,t.data&&(a.data=t.data),i[e]=a,n++}h.attributes=i,h.attributesNum=n,h.index=t}(y,x)}else{let e=!0===l.wireframe;(h.geometry!==y.id||h.program!==u.id||h.wireframe!==e)&&(h.geometry=y.id,h.program=u.id,h.wireframe=e,_=!0)}!0===n.isInstancedMesh&&(_=!0),null!==x&&i.update(x,34963),_&&(function(n,a,s,o){if(!1===r.isWebGL2&&(n.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();let l=o.attributes,h=s.getAttributes(),c=a.defaultAttributeValues;for(let t in h){let r=h[t];if(r>=0){let a=l[t];if(void 0!==a){let t=a.normalized,n=a.itemSize,s=i.get(a);if(void 0===s)continue;let l=s.buffer,h=s.type,c=s.bytesPerElement;if(a.isInterleavedBufferAttribute){let i=a.data,s=i.stride,u=a.offset;i&&i.isInstancedInterleavedBuffer?(f(r,i.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=i.meshPerAttribute*i.count)):m(r),e.bindBuffer(34962,l),v(r,n,h,t,s*c,u*c)}else a.isInstancedBufferAttribute?(f(r,a.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)):m(r),e.bindBuffer(34962,l),v(r,n,h,t,0,0)}else if("instanceMatrix"===t){let t=i.get(n.instanceMatrix);if(void 0===t)continue;let a=t.buffer,s=t.type;f(r+0,1),f(r+1,1),f(r+2,1),f(r+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(r+0,4,s,!1,64,0),e.vertexAttribPointer(r+1,4,s,!1,64,16),e.vertexAttribPointer(r+2,4,s,!1,64,32),e.vertexAttribPointer(r+3,4,s,!1,64,48)}else if("instanceColor"===t){let t=i.get(n.instanceColor);if(void 0===t)continue;let a=t.buffer,s=t.type;f(r,1),e.bindBuffer(34962,a),e.vertexAttribPointer(r,3,s,!1,12,0)}else if(void 0!==c){let i=c[t];if(void 0!==i)switch(i.length){case 2:e.vertexAttrib2fv(r,i);break;case 3:e.vertexAttrib3fv(r,i);break;case 4:e.vertexAttrib4fv(r,i);break;default:e.vertexAttrib1fv(r,i)}}}}g()}(n,l,u,y),null!==x&&e.bindBuffer(34963,i.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){for(let e in y(),o){let t=o[e];for(let e in t){let i=t[e];for(let e in i)u(i[e].object),delete i[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let e in t){let i=t[e];for(let e in i)u(i[e].object),delete i[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let i=o[t];if(void 0===i[e.id])continue;let r=i[e.id];for(let e in r)u(r[e].object),delete r[e];delete i[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function n9(e,t,i,r){let n;let a=r.isWebGL2;this.setMode=function(e){n=e},this.render=function(t,r){e.drawArrays(n,t,r),i.update(r,n,1)},this.renderInstances=function(r,s,o){let l,h;if(0!==o){if(a)l=e,h="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[h](n,r,s,o),i.update(s,n,o)}}}function ae(e,t,i){let r;function n(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==i.precision?i.precision:"highp",o=n(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=!0===i.logarithmicDepthBuffer,h=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),f=e.getParameter(36348),g=e.getParameter(36349),v=c>0,y=a||t.has("OES_texture_float"),x=a?e.getParameter(36183):0;return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let i=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:x}}function at(e){let t=this,i=null,r=0,n=!1,a=!1,s=new rU,o=new iB,l={value:null,needsUpdate:!1};function h(){l.value!==i&&(l.value=i,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,i,r,n){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==n||null===h){let t=r+4*a,n=i.matrixWorldInverse;o.getNormalMatrix(n),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,i=r;t!==a;++t,i+=4)s.copy(e[t]).applyMatrix4(n,o),s.normal.toArray(h,i),h[i+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==r||n;return n=t,i=c(e,a,0),r=e.length,s},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1,h()},this.setState=function(t,s,o){let u=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,m=e.get(t);if(n&&null!==u&&0!==u.length&&(!a||p)){let e=a?0:r,t=4*e,n=m.clippingState||null;l.value=n,n=c(u,s,t,o);for(let e=0;e!==t;++e)n[e]=i[e];m.clippingState=n,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}else a?c(null):h()}}function ai(e){let t=new WeakMap;function i(e,t){return t===eu?e.mapping=eh:t===ed&&(e.mapping=ec),e}function r(e){let i=e.target;i.removeEventListener("dispose",r);let n=t.get(i);void 0!==n&&(t.delete(i),n.dispose())}return{get:function(n){if(n&&n.isTexture){let a=n.mapping;if(a===eu||a===ed){if(t.has(n))return i(t.get(n).texture,n.mapping);{let a=n.image;if(!a||!(a.height>0))return null;{let s=e.getRenderTarget(),o=new nJ(a.height/2);return o.fromEquirectangularTexture(e,n),t.set(n,o),e.setRenderTarget(s),n.addEventListener("dispose",r),i(o.texture,n.mapping)}}}}return n},dispose:function(){t=new WeakMap}}}function ar(e){let t={};function i(i){let r;if(void 0!==t[i])return t[i];switch(i){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(i)}return t[i]=r,r}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function an(e,t,i,r){let n={},a=new WeakMap;function s(e){let o=e.target;for(let e in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",s),delete n[o.id];let l=a.get(o);l&&(t.remove(l),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],r=e.index,n=e.attributes.position,s=0;if(null!==r){let e=r.array;s=r.version;for(let t=0,r=e.length;t<r;t+=3){let r=e[t+0],n=e[t+1],a=e[t+2];i.push(r,n,n,a,a,r)}}else{let e=n.array;s=n.version;for(let t=0,r=e.length/3-1;t<r;t+=3){let e=t+0,r=t+1,n=t+2;i.push(e,r,r,n,n,e)}}let o=new(nu(i)>65535?no:na)(i,1);o.version=s;let l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===n[t.id]||(t.addEventListener("dispose",s),n[t.id]=!0,i.memory.geometries++),t},update:function(e){let i=e.attributes;for(let e in i)t.update(i[e],34962);let r=e.morphAttributes;for(let e in r){let i=r[e];for(let e=0,r=i.length;e<r;e++)t.update(i[e],34962)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return a.get(e)}}}function aa(e,t,i,r){let n,a,s;let o=r.isWebGL2;this.setMode=function(e){n=e},this.setIndex=function(e){a=e.type,s=e.bytesPerElement},this.render=function(t,r){e.drawElements(n,r,a,t*s),i.update(r,n,1)},this.renderInstances=function(r,l,h){let c,u;if(0!==h){if(o)c=e,u="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===c){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}c[u](n,l,a,r*s,h),i.update(l,n,h)}}}function as(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,r){switch(t.calls++,i){case 4:t.triangles+=e/3*r;break;case 1:t.lines+=e/2*r;break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function ao(e,t){return e[0]-t[0]}function al(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ah(e){let t={},i=new Float32Array(8),r=[];for(let e=0;e<8;e++)r[e]=[e,0];return{update:function(n,a,s,o){let l=n.morphTargetInfluences,h=void 0===l?0:l.length,c=t[a.id];if(void 0===c){c=[];for(let e=0;e<h;e++)c[e]=[e,0];t[a.id]=c}for(let e=0;e<h;e++){let t=c[e];t[0]=e,t[1]=l[e]}c.sort(al);for(let e=0;e<8;e++)e<h&&c[e][1]?(r[e][0]=c[e][0],r[e][1]=c[e][1]):(r[e][0]=Number.MAX_SAFE_INTEGER,r[e][1]=0);r.sort(ao);let u=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal,p=0;for(let e=0;e<8;e++){let t=r[e],n=t[0],s=t[1];n!==Number.MAX_SAFE_INTEGER&&s?(u&&a.getAttribute("morphTarget"+e)!==u[n]&&a.setAttribute("morphTarget"+e,u[n]),d&&a.getAttribute("morphNormal"+e)!==d[n]&&a.setAttribute("morphNormal"+e,d[n]),i[e]=s,p+=s):(u&&!0===a.hasAttribute("morphTarget"+e)&&a.deleteAttribute("morphTarget"+e),d&&!0===a.hasAttribute("morphNormal"+e)&&a.deleteAttribute("morphNormal"+e),i[e]=0)}let m=a.morphTargetsRelative?1:1-p;o.getUniforms().setValue(e,"morphTargetBaseInfluence",m),o.getUniforms().setValue(e,"morphTargetInfluences",i)}}}function ac(e,t,i,r){let n=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){let s=r.render.frame,o=e.geometry,l=t.get(e,o);return n.get(l)!==s&&(t.update(l),n.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),l},dispose:function(){n=new WeakMap}}}n6.physical={uniforms:nV([n6.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new iN(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new r6(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:n4.meshphysical_vert,fragmentShader:n4.meshphysical_frag};class au extends iO{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=ey,this.minFilter=ey,this.wrapR=eg,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}au.prototype.isDataTexture2DArray=!0;class ad extends iO{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=ey,this.minFilter=ey,this.wrapR=eg,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ad.prototype.isDataTexture3D=!0;const ap=new iO,am=new au,af=new ad,ag=new nZ,av=[],ay=[],ax=new Float32Array(16),a_=new Float32Array(9),ab=new Float32Array(4);function aw(e,t,i){let r=e[0];if(r<=0||r>0)return e;let n=t*i,a=av[n];if(void 0===a&&(a=new Float32Array(n),av[n]=a),0!==t){r.toArray(a,0);for(let r=1,n=0;r!==t;++r)n+=i,e[r].toArray(a,n)}return a}function aM(e,t){if(e.length!==t.length)return!1;for(let i=0,r=e.length;i<r;i++)if(e[i]!==t[i])return!1;return!0}function aS(e,t){for(let i=0,r=t.length;i<r;i++)e[i]=t[i]}function aT(e,t){let i=ay[t];void 0===i&&(i=new Int32Array(t),ay[t]=i);for(let r=0;r!==t;++r)i[r]=e.allocateTextureUnit();return i}function aE(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function aA(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(aM(i,t))return;e.uniform2fv(this.addr,t),aS(i,t)}}function aL(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(aM(i,t))return;e.uniform3fv(this.addr,t),aS(i,t)}}function aR(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(aM(i,t))return;e.uniform4fv(this.addr,t),aS(i,t)}}function aC(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(aM(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),aS(i,t)}else{if(aM(i,r))return;ab.set(r),e.uniformMatrix2fv(this.addr,!1,ab),aS(i,r)}}function aP(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(aM(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),aS(i,t)}else{if(aM(i,r))return;a_.set(r),e.uniformMatrix3fv(this.addr,!1,a_),aS(i,r)}}function aI(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(aM(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),aS(i,t)}else{if(aM(i,r))return;ax.set(r),e.uniformMatrix4fv(this.addr,!1,ax),aS(i,r)}}function aD(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function aN(e,t){let i=this.cache;aM(i,t)||(e.uniform2iv(this.addr,t),aS(i,t))}function aB(e,t){let i=this.cache;aM(i,t)||(e.uniform3iv(this.addr,t),aS(i,t))}function az(e,t){let i=this.cache;aM(i,t)||(e.uniform4iv(this.addr,t),aS(i,t))}function aF(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function aO(e,t){let i=this.cache;aM(i,t)||(e.uniform2uiv(this.addr,t),aS(i,t))}function aH(e,t){let i=this.cache;aM(i,t)||(e.uniform3uiv(this.addr,t),aS(i,t))}function aU(e,t){let i=this.cache;aM(i,t)||(e.uniform4uiv(this.addr,t),aS(i,t))}function aG(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.safeSetTexture2D(t||ap,n)}function ak(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture3D(t||af,n)}function aV(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.safeSetTextureCube(t||ag,n)}function aW(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture2DArray(t||am,n)}function aj(e,t){e.uniform1fv(this.addr,t)}function aq(e,t){let i=aw(t,this.size,2);e.uniform2fv(this.addr,i)}function aX(e,t){let i=aw(t,this.size,3);e.uniform3fv(this.addr,i)}function aY(e,t){let i=aw(t,this.size,4);e.uniform4fv(this.addr,i)}function aZ(e,t){let i=aw(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function aJ(e,t){let i=aw(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function aQ(e,t){let i=aw(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function aK(e,t){e.uniform1iv(this.addr,t)}function a$(e,t){e.uniform2iv(this.addr,t)}function a0(e,t){e.uniform3iv(this.addr,t)}function a1(e,t){e.uniform4iv(this.addr,t)}function a3(e,t){e.uniform1uiv(this.addr,t)}function a2(e,t){e.uniform2uiv(this.addr,t)}function a4(e,t){e.uniform3uiv(this.addr,t)}function a5(e,t){e.uniform4uiv(this.addr,t)}function a6(e,t,i){let r=t.length,n=aT(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.safeSetTexture2D(t[e]||ap,n[e])}function a8(e,t,i){let r=t.length,n=aT(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.safeSetTextureCube(t[e]||ag,n[e])}function a7(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return aE;case 35664:return aA;case 35665:return aL;case 35666:return aR;case 35674:return aC;case 35675:return aP;case 35676:return aI;case 5124:case 35670:return aD;case 35667:case 35671:return aN;case 35668:case 35672:return aB;case 35669:case 35673:return az;case 5125:return aF;case 36294:return aO;case 36295:return aH;case 36296:return aU;case 35678:case 36198:case 36298:case 36306:case 35682:return aG;case 35679:case 36299:case 36307:return ak;case 35680:case 36300:case 36308:case 36293:return aV;case 36289:case 36303:case 36311:case 36292:return aW}}(t.type)}function a9(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return aj;case 35664:return aq;case 35665:return aX;case 35666:return aY;case 35674:return aZ;case 35675:return aJ;case 35676:return aQ;case 5124:case 35670:return aK;case 35667:case 35671:return a$;case 35668:case 35672:return a0;case 35669:case 35673:return a1;case 5125:return a3;case 36294:return a2;case 36295:return a4;case 36296:return a5;case 35678:case 36198:case 36298:case 36306:case 35682:return a6;case 35680:case 36300:case 36308:case 36293:return a8}}(t.type)}function se(e){this.id=e,this.seq=[],this.map={}}a9.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),aS(t,e)},se.prototype.setValue=function(e,t,i){let r=this.seq;for(let n=0,a=r.length;n!==a;++n){let a=r[n];a.setValue(e,t[a.id],i)}};const st=/(\w+)(\])?(\[|\.)?/g;function si(e,t){e.seq.push(t),e.map[t.id]=t}function sr(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){let i=e.getActiveUniform(t,r),n=e.getUniformLocation(t,i.name);!function(e,t,i){let r=e.name,n=r.length;for(st.lastIndex=0;;){let a=st.exec(r),s=st.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===n){si(i,void 0===h?new a7(o,e,t):new a9(o,e,t));break}{let e=i.map[o];void 0===e&&si(i,e=new se(o)),i=e}}}(i,n,this)}}function sn(e,t,i){let r=e.createShader(t);return e.shaderSource(r,i),e.compileShader(r),r}sr.prototype.setValue=function(e,t,i,r){let n=this.map[t];void 0!==n&&n.setValue(e,i,r)},sr.prototype.setOptional=function(e,t,i){let r=t[i];void 0!==r&&this.setValue(e,i,r)},sr.upload=function(e,t,i,r){for(let n=0,a=t.length;n!==a;++n){let a=t[n],s=i[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,r)}},sr.seqWithValue=function(e,t){let i=[];for(let r=0,n=e.length;r!==n;++r){let n=e[r];n.id in t&&i.push(n)}return i};let sa=0;function ss(e){switch(e){case tW:return["Linear","( value )"];case tj:return["sRGB","( value )"];case tX:return["RGBE","( value )"];case tZ:return["RGBM","( value, 7.0 )"];case tJ:return["RGBM","( value, 16.0 )"];case tQ:return["RGBD","( value, 256.0 )"];case tq:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case tY:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function so(e,t,i){let r=e.getShaderParameter(t,35713),n=e.getShaderInfoLog(t).trim();return r&&""===n?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+n+function(e){let t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function sl(e,t){let i=ss(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function sh(e){return""!==e}function sc(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function su(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const sd=/^[ \t]*#include +<([\w\d./]+)>/gm;function sp(e){return e.replace(sd,sm)}function sm(e,t){let i=n4[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return sp(i)}const sf=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,sg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sv(e){return e.replace(sg,sx).replace(sf,sy)}function sy(e,t,i,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sx(e,t,i,r)}function sx(e,t,i,r){let n="";for(let e=parseInt(t);e<parseInt(i);e++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return n}function s_(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function sb(e,t,i,r){let n,a,s,o,l;let h=e.getContext(),c=i.defines,u=i.vertexShader,d=i.fragmentShader,p=(l="SHADOWMAP_TYPE_BASIC",i.shadowMapType===f?l="SHADOWMAP_TYPE_PCF":i.shadowMapType===g?l="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===v&&(l="SHADOWMAP_TYPE_VSM"),l),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case eh:case ec:t="ENVMAP_TYPE_CUBE";break;case ep:case em:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),y=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case ec:case em:t="ENVMAP_MODE_REFRACTION"}return t}(i),x=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case $:t="ENVMAP_BLENDING_MULTIPLY";break;case ee:t="ENVMAP_BLENDING_MIX";break;case et:t="ENVMAP_BLENDING_ADD"}return t}(i),_=e.gammaFactor>0?e.gammaFactor:1,b=i.isWebGL2?"":[i.extensionDerivatives||i.envMapCubeUV||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||"physical"===i.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(sh).join("\n"),w=function(e){let t=[];for(let i in e){let r=e[i];!1!==r&&t.push("#define "+i+" "+r)}return t.join("\n")}(c),M=h.createProgram(),S=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((n=[w].filter(sh).join("\n")).length>0&&(n+="\n"),(a=[b,w].filter(sh).join("\n")).length>0&&(a+="\n")):(n=[s_(i),"#define SHADER_NAME "+i.shaderName,w,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+_,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+y:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+p:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(sh).join("\n"),a=[b,s_(i),"#define SHADER_NAME "+i.shaderName,w,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+_,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+m:"",i.envMap?"#define "+y:"",i.envMap?"#define "+x:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+p:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==ei?"#define TONE_MAPPING":"",i.toneMapping!==ei?n4.tonemapping_pars_fragment:"",i.toneMapping!==ei?function(e,t){let i;switch(t){case er:i="Linear";break;case en:i="Reinhard";break;case ea:i="OptimizedCineon";break;case es:i="ACESFilmic";break;case eo:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",n4.encodings_pars_fragment,i.map?sl("mapTexelToLinear",i.mapEncoding):"",i.matcap?sl("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?sl("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?sl("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?sl("lightMapTexelToLinear",i.lightMapEncoding):"",function(e,t){let i=ss(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(sh).join("\n")),u=su(u=sc(u=sp(u),i),i),d=su(d=sc(d=sp(d),i),i),u=sv(u),d=sv(d),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(S="#version 300 es\n",n="#define attribute in\n#define varying out\n#define texture2D texture\n"+n,a=["#define varying in",i.glslVersion===i_?"":"out highp vec4 pc_fragColor;",i.glslVersion===i_?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let T=S+n+u,E=S+a+d,A=sn(h,35633,T),L=sn(h,35632,E);if(h.attachShader(M,A),h.attachShader(M,L),void 0!==i.index0AttributeName?h.bindAttribLocation(M,0,i.index0AttributeName):!0===i.morphTargets&&h.bindAttribLocation(M,0,"position"),h.linkProgram(M),e.debug.checkShaderErrors){let e=h.getProgramInfoLog(M).trim(),t=h.getShaderInfoLog(A).trim(),i=h.getShaderInfoLog(L).trim(),r=!0,s=!0;if(!1===h.getProgramParameter(M,35714)){r=!1;let t=so(h,A,"vertex"),i=so(h,L,"fragment");console.error("THREE.WebGLProgram: shader error: ",h.getError(),"35715",h.getProgramParameter(M,35715),"gl.getProgramInfoLog",e,t,i)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):(""===t||""===i)&&(s=!1);s&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:n},fragmentShader:{log:i,prefix:a}})}return h.deleteShader(A),h.deleteShader(L),this.getUniforms=function(){return void 0===s&&(s=new sr(h,M)),s},this.getAttributes=function(){return void 0===o&&(o=function(e,t){let i={},r=e.getProgramParameter(t,35721);for(let n=0;n<r;n++){let r=e.getActiveAttrib(t,n).name;i[r]=e.getAttribLocation(t,r)}return i}(h,M)),o},this.destroy=function(){r.releaseStatesOfProgram(this),h.deleteProgram(M),this.program=void 0},this.name=i.shaderName,this.id=sa++,this.cacheKey=t,this.usedTimes=1,this.program=M,this.vertexShader=A,this.fragmentShader=L,this}function sw(e,t,i,r,n,a){let s=[],o=r.isWebGL2,l=r.logarithmicDepthBuffer,h=r.floatVertexTextures,c=r.maxVertexUniforms,u=r.vertexTextures,d=r.precision,p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function f(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=tW,t}return{getParameters:function(n,s,m,g,v){let y,b;let w=g.fog,M=n.isMeshStandardMaterial?g.environment:null,S=t.get(n.envMap||M),T=p[n.type],E=v.isSkinnedMesh?function(e){let t=e.skeleton.bones;if(h)return 1024;{let e=Math.min(Math.floor((c-20)/4),t.length);return e<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+e+"."),0):e}}(v):0;if(null!==n.precision&&(d=r.getMaxPrecision(n.precision))!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",d,"instead."),T){let e=n6[T];y=e.vertexShader,b=e.fragmentShader}else y=n.vertexShader,b=n.fragmentShader;let A=e.getRenderTarget();return{isWebGL2:o,shaderID:T,shaderName:n.type,vertexShader:y,fragmentShader:b,defines:n.defines,isRawShaderMaterial:!0===n.isRawShaderMaterial,glslVersion:n.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==A?f(A.texture):e.outputEncoding,map:!!n.map,mapEncoding:f(n.map),matcap:!!n.matcap,matcapEncoding:f(n.matcap),envMap:!!S,envMapMode:S&&S.mapping,envMapEncoding:f(S),envMapCubeUV:!!S&&(S.mapping===ep||S.mapping===em),lightMap:!!n.lightMap,lightMapEncoding:f(n.lightMap),aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:f(n.emissiveMap),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,objectSpaceNormalMap:n.normalMapType===t1,tangentSpaceNormalMap:n.normalMapType===t0,clearcoatMap:!!n.clearcoatMap,clearcoatRoughnessMap:!!n.clearcoatRoughnessMap,clearcoatNormalMap:!!n.clearcoatNormalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,gradientMap:!!n.gradientMap,sheen:!!n.sheen,transmissionMap:!!n.transmissionMap,combine:n.combine,vertexTangents:n.normalMap&&n.vertexTangents,vertexColors:n.vertexColors,vertexAlphas:!0===n.vertexColors&&v.geometry&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!n.map||!!n.bumpMap||!!n.normalMap||!!n.specularMap||!!n.alphaMap||!!n.emissiveMap||!!n.roughnessMap||!!n.metalnessMap||!!n.clearcoatMap||!!n.clearcoatRoughnessMap||!!n.clearcoatNormalMap||!!n.displacementMap||!!n.transmissionMap,uvsVertexOnly:!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatNormalMap||n.transmissionMap)&&!!n.displacementMap,fog:!!w,useFog:n.fog,fogExp2:w&&w.isFogExp2,flatShading:!!n.flatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:l,skinning:n.skinning&&E>0,maxBones:E,useVertexTexture:h,morphTargets:n.morphTargets,morphNormals:n.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:n.dithering,shadowMapEnabled:e.shadowMap.enabled&&m.length>0,shadowMapType:e.shadowMap.type,toneMapping:n.toneMapped?e.toneMapping:ei,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:n.side===_,flipSided:n.side===x,depthPacking:void 0!==n.depthPacking&&n.depthPacking,index0AttributeName:n.index0AttributeName,extensionDerivatives:n.extensions&&n.extensions.derivatives,extensionFragDepth:n.extensions&&n.extensions.fragDepth,extensionDrawBuffers:n.extensions&&n.extensions.drawBuffers,extensionShaderTextureLOD:n.extensions&&n.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||i.has("EXT_shader_texture_lod"),customProgramCacheKey:n.customProgramCacheKey()}},getProgramCacheKey:function(t){let i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.fragmentShader),i.push(t.vertexShader)),void 0!==t.defines)for(let e in t.defines)i.push(e),i.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<m.length;e++)i.push(t[m[e]]);i.push(e.outputEncoding),i.push(e.gammaFactor)}return i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){let t;let i=p[e.type];if(i){let e=n6[i];t=nW.clone(e.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,i){let r;for(let e=0,t=s.length;e<t;e++){let t=s[e];if(t.cacheKey===i){r=t,++r.usedTimes;break}}return void 0===r&&(r=new sb(e,i,t,n),s.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){let t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},programs:s}}function sM(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,r){e.get(t)[i]=r},dispose:function(){e=new WeakMap}}}function sS(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sT(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function sE(e){let t=[],i=0,r=[],n=[],a={id:-1};function s(r,n,s,o,l,h){let c=t[i],u=e.get(s);return void 0===c?(c={id:r.id,object:r,geometry:n,material:s,program:u.program||a,groupOrder:o,renderOrder:r.renderOrder,z:l,group:h},t[i]=c):(c.id=r.id,c.object=r,c.geometry=n,c.material=s,c.program=u.program||a,c.groupOrder=o,c.renderOrder=r.renderOrder,c.z=l,c.group=h),i++,c}return{opaque:r,transparent:n,init:function(){i=0,r.length=0,n.length=0},push:function(e,t,i,a,o,l){let h=s(e,t,i,a,o,l);(!0===i.transparent?n:r).push(h)},unshift:function(e,t,i,a,o,l){let h=s(e,t,i,a,o,l);(!0===i.transparent?n:r).unshift(h)},finish:function(){for(let e=i,r=t.length;e<r;e++){let i=t[e];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.program=null,i.group=null}},sort:function(e,t){r.length>1&&r.sort(e||sS),n.length>1&&n.sort(t||sT)}}}function sA(e){let t=new WeakMap;return{get:function(i,r){let n;return!1===t.has(i)?(n=new sE(e),t.set(i,[n])):r>=t.get(i).length?(n=new sE(e),t.get(i).push(n)):n=t.get(i)[r],n},dispose:function(){t=new WeakMap}}}function sL(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":i={direction:new iW,color:new r6};break;case"SpotLight":i={position:new iW,direction:new iW,color:new r6,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new iW,color:new r6,distance:0,decay:0};break;case"HemisphereLight":i={direction:new iW,skyColor:new r6,groundColor:new r6};break;case"RectAreaLight":i={color:new r6,position:new iW,halfWidth:new iW,halfHeight:new iW}}return e[t.id]=i,i}}}let sR=0;function sC(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function sP(e,t){let i=new sL,r=function(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new iN};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new iN,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)n.probe.push(new iW);let a=new iW,s=new ru,o=new ru;return{setup:function(a){let s=0,o=0,l=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let h=0,c=0,u=0,d=0,p=0,m=0,f=0,g=0;a.sort(sC);for(let e=0,t=a.length;e<t;e++){let t=a[e],v=t.color,y=t.intensity,x=t.distance,_=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=v.r*y,o+=v.g*y,l+=v.b*y;else if(t.isLightProbe)for(let e=0;e<9;e++)n.probe[e].addScaledVector(t.sh.coefficients[e],y);else if(t.isDirectionalLight){let e=i.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){let e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,n.directionalShadow[h]=i,n.directionalShadowMap[h]=_,n.directionalShadowMatrix[h]=t.shadow.matrix,m++}n.directional[h]=e,h++}else if(t.isSpotLight){let e=i.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(v).multiplyScalar(y),e.distance=x,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){let e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,n.spotShadow[u]=i,n.spotShadowMap[u]=_,n.spotShadowMatrix[u]=t.shadow.matrix,g++}n.spot[u]=e,u++}else if(t.isRectAreaLight){let e=i.get(t);e.color.copy(v).multiplyScalar(y),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),n.rectArea[d]=e,d++}else if(t.isPointLight){let e=i.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){let e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,i.shadowCameraNear=e.camera.near,i.shadowCameraFar=e.camera.far,n.pointShadow[c]=i,n.pointShadowMap[c]=_,n.pointShadowMatrix[c]=t.shadow.matrix,f++}n.point[c]=e,c++}else if(t.isHemisphereLight){let e=i.get(t);e.skyColor.copy(t.color).multiplyScalar(y),e.groundColor.copy(t.groundColor).multiplyScalar(y),n.hemi[p]=e,p++}}d>0&&(t.isWebGL2?(n.rectAreaLTC1=n5.LTC_FLOAT_1,n.rectAreaLTC2=n5.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=n5.LTC_FLOAT_1,n.rectAreaLTC2=n5.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=n5.LTC_HALF_1,n.rectAreaLTC2=n5.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=s,n.ambient[1]=o,n.ambient[2]=l;let v=n.hash;(v.directionalLength!==h||v.pointLength!==c||v.spotLength!==u||v.rectAreaLength!==d||v.hemiLength!==p||v.numDirectionalShadows!==m||v.numPointShadows!==f||v.numSpotShadows!==g)&&(n.directional.length=h,n.spot.length=u,n.rectArea.length=d,n.point.length=c,n.hemi.length=p,n.directionalShadow.length=m,n.directionalShadowMap.length=m,n.pointShadow.length=f,n.pointShadowMap.length=f,n.spotShadow.length=g,n.spotShadowMap.length=g,n.directionalShadowMatrix.length=m,n.pointShadowMatrix.length=f,n.spotShadowMatrix.length=g,v.directionalLength=h,v.pointLength=c,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=m,v.numPointShadows=f,v.numSpotShadows=g,n.version=sR++)},setupView:function(e,t){let i=0,r=0,l=0,h=0,c=0,u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){let d=e[t];if(d.isDirectionalLight){let e=n.directional[i];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),i++}else if(d.isSpotLight){let e=n.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){let e=n.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),o.identity(),s.copy(d.matrixWorld),s.premultiply(u),o.extractRotation(s),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),h++}else if(d.isPointLight){let e=n.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),r++}else if(d.isHemisphereLight){let e=n.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),e.direction.normalize(),c++}}},state:n}}function sI(e,t){let i=new sP(e,t),r=[],n=[];return{init:function(){r.length=0,n.length=0},state:{lightsArray:r,shadowsArray:n,lights:i},setupLights:function(){i.setup(r)},setupLightsView:function(e){i.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){n.push(e)}}}function sD(e,t){let i=new WeakMap;return{get:function(r,n=0){let a;return!1===i.has(r)?(a=new sI(e,t),i.set(r,[a])):n>=i.get(r).length?(a=new sI(e,t),i.get(r).push(a)):a=i.get(r)[n],a},dispose:function(){i=new WeakMap}}}class sN extends r${constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=tK,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}sN.prototype.isMeshDepthMaterial=!0;class sB extends r${constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new iW,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sz(e,t,i){let r=new n0,n=new iN,a=new iN,s=new iU,o=[],l=[],h={},c=i.maxTextureSize,u={0:x,1:y,2:_},d=new nj({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new iN},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean * HALF_SAMPLE_RATE;\n	squared_mean = squared_mean * HALF_SAMPLE_RATE;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let m=new nb;m.setAttribute("position",new ne(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let g=new nH(m,d),b=this;function w(e,t,i){let r=e<<0|t<<1|i<<2,n=o[r];return void 0===n&&(n=new sN({depthPacking:t$,morphTargets:e,skinning:t}),o[r]=n),n}function S(e,t,i){let r=e<<0|t<<1|i<<2,n=l[r];return void 0===n&&(n=new sB({morphTargets:e,skinning:t}),l[r]=n),n}function T(t,i,r,n,a,s,o){let l=null,c=w,d=t.customDepthMaterial;if(!0===n.isPointLight&&(c=S,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===r.morphTargets&&(e=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0);let n=!1;!0===t.isSkinnedMesh&&(!0===r.skinning?n=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t)),l=c(e,n,!0===t.isInstancedMesh)}else l=d;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){let e=l.uuid,t=r.uuid,i=h[e];void 0===i&&(i={},h[e]=i);let n=i[t];void 0===n&&(n=l.clone(),i[t]=n),l=n}return l.visible=r.visible,l.wireframe=r.wireframe,o===v?l.side=null!==r.shadowSide?r.shadowSide:r.side:l.side=null!==r.shadowSide?r.shadowSide:u[r.side],l.clipShadows=r.clipShadows,l.clippingPlanes=r.clippingPlanes,l.clipIntersection=r.clipIntersection,l.wireframeLinewidth=r.wireframeLinewidth,l.linewidth=r.linewidth,!0===n.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(n.matrixWorld),l.nearDistance=a,l.farDistance=s),l}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=f,this.render=function(i,o,l){if(!1===b.enabled||!1===b.autoUpdate&&!1===b.needsUpdate||0===i.length)return;let h=e.getRenderTarget(),u=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),f=e.state;f.setBlending(M),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let h=0,u=i.length;h<u;h++){let u=i[h],m=u.shadow;if(void 0===m){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===m.autoUpdate&&!1===m.needsUpdate)continue;n.copy(m.mapSize);let y=m.getFrameExtents();if(n.multiply(y),a.copy(m.mapSize),(n.x>c||n.y>c)&&(n.x>c&&(a.x=Math.floor(c/y.x),n.x=a.x*y.x,m.mapSize.x=a.x),n.y>c&&(a.y=Math.floor(c/y.y),n.y=a.y*y.y,m.mapSize.y=a.y)),null===m.map&&!m.isPointLightShadow&&this.type===v){let e={minFilter:eM,magFilter:eM,format:ek};m.map=new iG(n.x,n.y,e),m.map.texture.name=u.name+".shadowMap",m.mapPass=new iG(n.x,n.y,e),m.camera.updateProjectionMatrix()}if(null===m.map){let e={minFilter:ey,magFilter:ey,format:ek};m.map=new iG(n.x,n.y,e),m.map.texture.name=u.name+".shadowMap",m.camera.updateProjectionMatrix()}e.setRenderTarget(m.map),e.clear();let x=m.getViewportCount();for(let i=0;i<x;i++){let n=m.getViewport(i);s.set(a.x*n.x,a.y*n.y,a.x*n.z,a.y*n.w),f.viewport(s),m.updateMatrices(u,i),r=m.getFrustum(),function i(n,a,s,o,l){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&l===v)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);let i=t.update(n),r=n.material;if(Array.isArray(r)){let t=i.groups;for(let a=0,h=t.length;a<h;a++){let h=t[a],c=r[h.materialIndex];if(c&&c.visible){let t=T(n,i,c,o,s.near,s.far,l);e.renderBufferDirect(s,null,i,t,n,h)}}}else if(r.visible){let t=T(n,i,r,o,s.near,s.far,l);e.renderBufferDirect(s,null,i,t,n,null)}}let h=n.children;for(let e=0,t=h.length;e<t;e++)i(h[e],a,s,o,l)}(o,l,m.camera,u,this.type)}m.isPointLightShadow||this.type!==v||function(i,r){let n=t.update(g);d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(r,null,n,d,g,null),p.uniforms.shadow_pass.value=i.mapPass.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(r,null,n,p,g,null)}(m,l),m.needsUpdate=!1}b.needsUpdate=!1,e.setRenderTarget(h,u,m)}}function sF(e,t,i){let r=i.isWebGL2,n=new function(){let t=!1,i=new iU,r=null,n=new iU(0,0,0,0);return{setMask:function(i){r===i||t||(e.colorMask(i,i,i,i),r=i)},setLocked:function(e){t=e},setClear:function(t,r,a,s,o){!0===o&&(t*=s,r*=s,a*=s),i.set(t,r,a,s),!1===n.equals(i)&&(e.clearColor(t,r,a,s),n.copy(i))},reset:function(){t=!1,r=null,n.set(-1,0,0,0)}}},a=new function(){let t=!1,i=null,r=null,n=null;return{setTest:function(e){e?ef(2929):eg(2929)},setMask:function(r){i===r||t||(e.depthMask(r),i=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case j:e.depthFunc(512);break;case q:e.depthFunc(519);break;case X:e.depthFunc(513);break;case Y:e.depthFunc(515);break;case Z:e.depthFunc(514);break;case J:e.depthFunc(518);break;case Q:e.depthFunc(516);break;case K:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){n!==t&&(e.clearDepth(t),n=t)},reset:function(){t=!1,i=null,r=null,n=null}}},s=new function(){let t=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?ef(2960):eg(2960))},setMask:function(r){i===r||t||(e.stencilMask(r),i=r)},setFunc:function(t,i,s){(r!==t||n!==i||a!==s)&&(e.stencilFunc(t,i,s),r=t,n=i,a=s)},setOp:function(t,i,r){(s!==t||o!==i||l!==r)&&(e.stencilOp(t,i,r),s=t,o=i,l=r)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,h=null}}},o={},l=null,h={},p=null,m=!1,f=null,g=null,v=null,y=null,b=null,w=null,$=null,ee=!1,et=null,ei=null,er=null,en=null,ea=null,es=e.getParameter(35661),eo=!1,el=e.getParameter(7938);-1!==el.indexOf("WebGL")?eo=parseFloat(/^WebGL (\d)/.exec(el)[1])>=1:-1!==el.indexOf("OpenGL ES")&&(eo=parseFloat(/^OpenGL ES (\d)/.exec(el)[1])>=2);let eh=null,ec={},eu=new iU(0,0,e.canvas.width,e.canvas.height),ed=new iU(0,0,e.canvas.width,e.canvas.height);function ep(t,i,r){let n=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(i+t,0,6408,1,1,0,6408,5121,n);return a}let em={};function ef(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function eg(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}em[3553]=ep(3553,3553,1),em[34067]=ep(34067,34069,6),n.setClear(0,0,0,1),a.setClear(1),s.setClear(0),ef(2929),a.setFunc(Y),e_(!1),eb(u),ef(2884),ex(M);let ev={[R]:32774,[C]:32778,[P]:32779};if(r)ev[I]=32775,ev[D]=32776;else{let e=t.get("EXT_blend_minmax");null!==e&&(ev[I]=e.MIN_EXT,ev[D]=e.MAX_EXT)}let ey={[N]:0,[B]:1,[z]:768,[O]:770,[W]:776,[k]:774,[U]:772,[F]:769,[H]:771,[V]:775,[G]:773};function ex(t,i,r,n,a,s,o,l){if(t===M){!0===m&&(eg(3042),m=!1);return}if(!1===m&&(ef(3042),m=!0),t!==L){if(t!==f||l!==ee){if((g!==R||b!==R)&&(e.blendEquation(32774),g=R,b=R),l)switch(t){case S:e.blendFuncSeparate(1,771,1,771);break;case T:e.blendFunc(1,1);break;case E:e.blendFuncSeparate(0,0,769,771);break;case A:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case S:e.blendFuncSeparate(770,771,1,771);break;case T:e.blendFunc(770,1);break;case E:e.blendFunc(0,769);break;case A:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,y=null,w=null,$=null,f=t,ee=l}return}a=a||i,s=s||r,o=o||n,(i!==g||a!==b)&&(e.blendEquationSeparate(ev[i],ev[a]),g=i,b=a),(r!==v||n!==y||s!==w||o!==$)&&(e.blendFuncSeparate(ey[r],ey[n],ey[s],ey[o]),v=r,y=n,w=s,$=o),f=t,ee=null}function e_(t){et!==t&&(t?e.frontFace(2304):e.frontFace(2305),et=t)}function eb(t){t!==c?(ef(2884),t!==ei&&(t===u?e.cullFace(1029):t===d?e.cullFace(1028):e.cullFace(1032))):eg(2884),ei=t}function ew(t,i,r){t?(ef(32823),(en!==i||ea!==r)&&(e.polygonOffset(i,r),en=i,ea=r)):eg(32823)}function eM(t){void 0===t&&(t=33984+es-1),eh!==t&&(e.activeTexture(t),eh=t)}return{buffers:{color:n,depth:a,stencil:s},enable:ef,disable:eg,bindFramebuffer:function(t,i){null===i&&null!==l&&(i=l),h[t]!==i&&(e.bindFramebuffer(t,i),h[t]=i,r&&(36009===t&&(h[36160]=i),36160===t&&(h[36009]=i)))},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:ex,setMaterial:function(e,t){e.side===_?eg(2884):ef(2884);let i=e.side===x;t&&(i=!i),e_(i),e.blending===S&&!1===e.transparent?ex(M):ex(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),n.setMask(e.colorWrite);let r=e.stencilWrite;s.setTest(r),r&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),ew(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?ef(32926):eg(32926)},setFlipSided:e_,setCullFace:eb,setLineWidth:function(t){t!==er&&(eo&&e.lineWidth(t),er=t)},setPolygonOffset:ew,setScissorTest:function(e){e?ef(3089):eg(3089)},activeTexture:eM,bindTexture:function(t,i){null===eh&&eM();let r=ec[eh];void 0===r&&(r={type:void 0,texture:void 0},ec[eh]=r),(r.type!==t||r.texture!==i)&&(e.bindTexture(t,i||em[t]),r.type=t,r.texture=i)},unbindTexture:function(){let t=ec[eh];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===eu.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),eu.copy(t))},viewport:function(t){!1===ed.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ed.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},eh=null,ec={},l=null,h={},p=null,m=!1,f=null,g=null,v=null,y=null,b=null,w=null,$=null,ee=!1,et=null,ei=null,er=null,en=null,ea=null,eu.set(0,0,e.canvas.width,e.canvas.height),ed.set(0,0,e.canvas.width,e.canvas.height),n.reset(),a.reset(),s.reset()}}}function sO(e,t,i,r,n,a,s){let o;let l=n.isWebGL2,h=n.maxTextures,c=n.maxCubemapSize,u=n.maxTextureSize,d=n.maxSamples,p=new WeakMap,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function f(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,i,r){let n=1;if((e.width>r||e.height>r)&&(n=r/Math.max(e.width,e.height)),n<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let r=t?iI:Math.floor,a=r(n*e.width),s=r(n*e.height);void 0===o&&(o=f(a,s));let l=i?f(a,s):o;return l.width=a,l.height=s,l.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function v(e){return iC(e.width)&&iC(e.height)}function y(e,t){return e.generateMipmaps&&t&&e.minFilter!==ey&&e.minFilter!==eM}function x(t,i,n,a){e.generateMipmap(t),r.get(i).__maxMipLevel=Math.log2(Math.max(n,a))}function _(i,r,n){if(!1===l)return r;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let a=r;return 6403===r&&(5126===n&&(a=33326),5131===n&&(a=33325),5121===n&&(a=33321)),6407===r&&(5126===n&&(a=34837),5131===n&&(a=34843),5121===n&&(a=32849)),6408===r&&(5126===n&&(a=34836),5131===n&&(a=34842),5121===n&&(a=32856)),(33325===a||33326===a||34842===a||34836===a)&&t.get("EXT_color_buffer_float"),a}function b(e){return e===ey||e===ex||e===eb?9728:9729}function w(t){let i=t.target;i.removeEventListener("dispose",w),function(t){let i=r.get(t);void 0!==i.__webglInit&&(e.deleteTexture(i.__webglTexture),r.remove(t))}(i),i.isVideoTexture&&p.delete(i),s.memory.textures--}function M(t){let i=t.target;i.removeEventListener("dispose",M),function(t){let i=t.texture,n=r.get(t),a=r.get(i);if(t){if(void 0!==a.__webglTexture&&e.deleteTexture(a.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&e.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer);r.remove(i),r.remove(t)}}(i),s.memory.textures--}let S=0;function T(e,t){let n=r.get(e);if(e.isVideoTexture&&function(e){let t=s.render.frame;p.get(e)!==t&&(p.set(e,t),e.update())}(e),e.version>0&&n.__version!==e.version){let i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===i.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{P(n,e,t);return}}i.activeTexture(33984+t),i.bindTexture(3553,n.__webglTexture)}function E(t,n){let s=r.get(t);if(t.version>0&&s.__version!==t.version){!function(t,r,n){let s;if(6!==r.image.length)return;C(t,r),i.activeTexture(33984+n),i.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);let o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),h=r.image[0]&&r.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)o||h?u[e]=h?r.image[e].image:r.image[e]:u[e]=g(r.image[e],!1,!0,c);let d=u[0],p=v(d)||l,m=a.convert(r.format),f=a.convert(r.type),b=_(r.internalFormat,m,f);if(R(34067,r,p),o){for(let e=0;e<6;e++){s=u[e].mipmaps;for(let t=0;t<s.length;t++){let n=s[t];r.format!==ek&&r.format!==eG?null!==m?i.compressedTexImage2D(34069+e,t,b,n.width,n.height,0,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+e,t,b,n.width,n.height,0,m,f,n.data)}}t.__maxMipLevel=s.length-1}else{s=r.mipmaps;for(let e=0;e<6;e++)if(h){i.texImage2D(34069+e,0,b,u[e].width,u[e].height,0,m,f,u[e].data);for(let t=0;t<s.length;t++){let r=s[t].image[e].image;i.texImage2D(34069+e,t+1,b,r.width,r.height,0,m,f,r.data)}}else{i.texImage2D(34069+e,0,b,m,f,u[e]);for(let t=0;t<s.length;t++){let r=s[t];i.texImage2D(34069+e,t+1,b,m,f,r.image[e])}}t.__maxMipLevel=s.length}y(r,p)&&x(34067,r,d.width,d.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}(s,t,n);return}i.activeTexture(33984+n),i.bindTexture(34067,s.__webglTexture)}let A={[ef]:10497,[eg]:33071,[ev]:33648},L={[ey]:9728,[ex]:9984,[eb]:9986,[eM]:9729,[eS]:9985,[eE]:9987};function R(i,a,s){if(s?(e.texParameteri(i,10242,A[a.wrapS]),e.texParameteri(i,10243,A[a.wrapT]),(32879===i||35866===i)&&e.texParameteri(i,32882,A[a.wrapR]),e.texParameteri(i,10240,L[a.magFilter]),e.texParameteri(i,10241,L[a.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),(32879===i||35866===i)&&e.texParameteri(i,32882,33071),(a.wrapS!==eg||a.wrapT!==eg)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,b(a.magFilter)),e.texParameteri(i,10241,b(a.minFilter)),a.minFilter!==ey&&a.minFilter!==eM&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let s=t.get("EXT_texture_filter_anisotropic");(a.type!==eN||!1!==t.has("OES_texture_float_linear"))&&(!1!==l||a.type!==eB||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function C(t,i){void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",w),t.__webglTexture=e.createTexture(),s.memory.textures++)}function P(t,r,n){let s,o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),C(t,r),i.activeTexture(33984+n),i.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);let h=!l&&(r.wrapS!==eg||r.wrapT!==eg||r.minFilter!==ey&&r.minFilter!==eM)&&!1===v(r.image),c=g(r.image,h,!1,u),d=v(c)||l,p=a.convert(r.format),m=a.convert(r.type),f=_(r.internalFormat,p,m);R(o,r,d);let b=r.mipmaps;if(r.isDepthTexture)f=6402,l?f=r.type===eN?36012:r.type===eD?33190:r.type===eH?35056:33189:r.type===eN&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===eq&&6402===f&&r.type!==eP&&r.type!==eD&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=eP,m=a.convert(r.type)),r.format===eX&&6402===f&&(f=34041,r.type!==eH&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=eH,m=a.convert(r.type))),i.texImage2D(3553,0,f,c.width,c.height,0,p,m,null);else if(r.isDataTexture){if(b.length>0&&d){for(let e=0,t=b.length;e<t;e++)s=b[e],i.texImage2D(3553,e,f,s.width,s.height,0,p,m,s.data);r.generateMipmaps=!1,t.__maxMipLevel=b.length-1}else i.texImage2D(3553,0,f,c.width,c.height,0,p,m,c.data),t.__maxMipLevel=0}else if(r.isCompressedTexture){for(let e=0,t=b.length;e<t;e++)s=b[e],r.format!==ek&&r.format!==eG?null!==p?i.compressedTexImage2D(3553,e,f,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,e,f,s.width,s.height,0,p,m,s.data);t.__maxMipLevel=b.length-1}else if(r.isDataTexture2DArray)i.texImage3D(35866,0,f,c.width,c.height,c.depth,0,p,m,c.data),t.__maxMipLevel=0;else if(r.isDataTexture3D)i.texImage3D(32879,0,f,c.width,c.height,c.depth,0,p,m,c.data),t.__maxMipLevel=0;else if(b.length>0&&d){for(let e=0,t=b.length;e<t;e++)s=b[e],i.texImage2D(3553,e,f,p,m,s);r.generateMipmaps=!1,t.__maxMipLevel=b.length-1}else i.texImage2D(3553,0,f,p,m,c),t.__maxMipLevel=0;y(r,d)&&x(o,r,c.width,c.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function I(t,n,s,o){let l=n.texture,h=a.convert(l.format),c=a.convert(l.type),u=_(l.internalFormat,h,c);32879===o||35866===o?i.texImage3D(o,0,u,n.width,n.height,n.depth,0,h,c,null):i.texImage2D(o,0,u,n.width,n.height,0,h,c,null),i.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,s,o,r.get(l).__webglTexture,0),i.bindFramebuffer(36160,null)}function D(t,i,r){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let n=33189;if(r){let t=i.depthTexture;t&&t.isDepthTexture&&(t.type===eN?n=36012:t.type===eD&&(n=33190));let r=N(i);e.renderbufferStorageMultisample(36161,r,n,i.width,i.height)}else e.renderbufferStorage(36161,n,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){if(r){let t=N(i);e.renderbufferStorageMultisample(36161,t,35056,i.width,i.height)}else e.renderbufferStorage(36161,34041,i.width,i.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{let t=i.texture,n=a.convert(t.format),s=a.convert(t.type),o=_(t.internalFormat,n,s);if(r){let t=N(i);e.renderbufferStorageMultisample(36161,t,o,i.width,i.height)}else e.renderbufferStorage(36161,o,i.width,i.height)}e.bindRenderbuffer(36161,null)}function N(e){return l&&e.isWebGLMultisampleRenderTarget?Math.min(d,e.samples):0}let B=!1,z=!1;this.allocateTextureUnit=function(){let e=S;return e>=h&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+h),S+=1,e},this.resetTextureUnits=function(){S=0},this.setTexture2D=T,this.setTexture2DArray=function(e,t){let n=r.get(e);if(e.version>0&&n.__version!==e.version){P(n,e,t);return}i.activeTexture(33984+t),i.bindTexture(35866,n.__webglTexture)},this.setTexture3D=function(e,t){let n=r.get(e);if(e.version>0&&n.__version!==e.version){P(n,e,t);return}i.activeTexture(33984+t),i.bindTexture(32879,n.__webglTexture)},this.setTextureCube=E,this.setupRenderTarget=function(t){let n=t.texture,o=r.get(t),h=r.get(n);t.addEventListener("dispose",M),h.__webglTexture=e.createTexture(),h.__version=n.version,s.memory.textures++;let c=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultisampleRenderTarget,d=n.isDataTexture3D||n.isDataTexture2DArray,p=v(t)||l;if(l&&n.format===eG&&(n.type===eN||n.type===eB)&&(n.format=ek,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){o.__webglFramebuffer=[];for(let t=0;t<6;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else if(o.__webglFramebuffer=e.createFramebuffer(),u){if(l){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,o.__webglColorRenderbuffer);let r=a.convert(n.format),s=a.convert(n.type),l=_(n.internalFormat,r,s),h=N(t);e.renderbufferStorageMultisample(36161,h,l,t.width,t.height),i.bindFramebuffer(36160,o.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,o.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),D(o.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(c){i.bindTexture(34067,h.__webglTexture),R(34067,n,p);for(let e=0;e<6;e++)I(o.__webglFramebuffer[e],t,36064,34069+e);y(n,p)&&x(34067,n,t.width,t.height),i.bindTexture(34067,null)}else{let e=3553;d&&(l?e=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),i.bindTexture(e,h.__webglTexture),R(e,n,p),I(o.__webglFramebuffer,t,36064,e),y(n,p)&&x(3553,n,t.width,t.height),i.bindTexture(3553,null)}t.depthBuffer&&function(t){let n=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,n){if(n&&n.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,t),!(n.depthTexture&&n.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),T(n.depthTexture,0);let a=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===eq)e.framebufferTexture2D(36160,36096,3553,a,0);else if(n.depthTexture.format===eX)e.framebufferTexture2D(36160,33306,3553,a,0);else throw Error("Unknown depthTexture format")}(n.__webglFramebuffer,t)}else if(a){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)i.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=e.createRenderbuffer(),D(n.__webglDepthbuffer[r],t,!1)}else i.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),D(n.__webglDepthbuffer,t,!1);i.bindFramebuffer(36160,null)}(t)},this.updateRenderTargetMipmap=function(e){let t=e.texture;if(y(t,v(e)||l)){let n=e.isWebGLCubeRenderTarget?34067:3553,a=r.get(t).__webglTexture;i.bindTexture(n,a),x(n,t,e.width,e.height),i.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget){if(l){let n=t.width,a=t.height,s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024);let o=r.get(t);i.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,o.__webglFramebuffer),e.blitFramebuffer(0,0,n,a,0,0,n,a,s,9728),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),T(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),z=!0),e=e.texture),E(e,t)}}function sH(e,t,i){let r=i.isWebGL2;return{convert:function(e){let i;if(e===eL)return 5121;if(e===ez)return 32819;if(e===eF)return 32820;if(e===eO)return 33635;if(e===eR)return 5120;if(e===eC)return 5122;if(e===eP)return 5123;if(e===eI)return 5124;if(e===eD)return 5125;if(e===eN)return 5126;if(e===eB)return r?5131:null!==(i=t.get("OES_texture_half_float"))?i.HALF_FLOAT_OES:null;if(e===eU)return 6406;if(e===eG)return 6407;if(e===ek)return 6408;if(e===eV)return 6409;if(e===eW)return 6410;if(e===eq)return 6402;if(e===eX)return 34041;if(e===eY)return 6403;if(e===eZ)return 36244;if(e===eJ)return 33319;if(e===eQ)return 33320;if(e===eK)return 36248;if(e===e$)return 36249;if(e===e0||e===e1||e===e3||e===e2){if(null===(i=t.get("WEBGL_compressed_texture_s3tc")))return null;if(e===e0)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===e1)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===e3)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===e2)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===e4||e===e5||e===e6||e===e8){if(null===(i=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===e4)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===e5)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===e6)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===e8)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===e7)return null!==(i=t.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===e9||e===te)&&null!==(i=t.get("WEBGL_compressed_texture_etc"))){if(e===e9)return i.COMPRESSED_RGB8_ETC2;if(e===te)return i.COMPRESSED_RGBA8_ETC2_EAC}return e===tt||e===ti||e===tr||e===tn||e===ta||e===ts||e===to||e===tl||e===th||e===tc||e===tu||e===td||e===tp||e===tm||e===tg||e===tv||e===ty||e===tx||e===t_||e===tb||e===tw||e===tM||e===tS||e===tT||e===tE||e===tA||e===tL||e===tR?null!==(i=t.get("WEBGL_compressed_texture_astc"))?e:null:e===tf?null!==(i=t.get("EXT_texture_compression_bptc"))?e:null:e===eH?r?34042:null!==(i=t.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}sB.prototype.isMeshDistanceMaterial=!0;class sU extends nX{constructor(e=[]){super(),this.cameras=e}}sU.prototype.isArrayCamera=!0;class sG extends rz{constructor(){super(),this.type="Group"}}sG.prototype.isGroup=!0;const sk={type:"move"};class sV{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new sG,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new sG,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new iW,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new iW),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new sG,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new iW,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new iW),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let r=null,n=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(null!==s&&null!==(r=t.getPose(e.targetRaySpace,i))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(sk)),l&&e.hand){for(let r of(a=!0,e.hand.values())){let e=t.getJointPose(r,i);if(void 0===l.joints[r.jointName]){let e=new sG;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}let n=l.joints[r.jointName];null!==e&&(n.matrix.fromArray(e.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.jointRadius=e.radius),n.visible=null!==e}let r=l.joints["index-finger-tip"],n=l.joints["thumb-tip"],s=r.position.distanceTo(n.position);l.inputState.pinching&&s>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1)}return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class sW extends ib{constructor(e,t){super();let i=this,r=e.state,n=null,a=1,s=null,o="local-floor",l=null,h=[],c=new Map,u=new nX;u.layers.enable(1),u.viewport=new iU;let d=new nX;d.layers.enable(2),d.viewport=new iU;let p=[u,d],m=new sU;m.layers.enable(1),m.layers.enable(2);let f=null,g=null;function v(e){let t=c.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){c.forEach(function(e,t){e.disconnect(t)}),c.clear(),f=null,g=null,r.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),S.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function x(e){let t=n.inputSources;for(let e=0;e<h.length;e++)c.set(t[e],h[e]);for(let t=0;t<e.removed.length;t++){let i=e.removed[t],r=c.get(i);r&&(r.dispatchEvent({type:"disconnected",data:i}),c.delete(i))}for(let t=0;t<e.added.length;t++){let i=e.added[t],r=c.get(i);r&&r.dispatchEvent({type:"connected",data:i})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=h[e];return void 0===t&&(t=new sV,h[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=h[e];return void 0===t&&(t=new sV,h[e]=t),t.getGripSpace()},this.getHand=function(e){let t=h[e];return void 0===t&&(t=new sV,h[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return n},this.setSession=async function(e){if(null!==(n=e)){n.addEventListener("select",v),n.addEventListener("selectstart",v),n.addEventListener("selectend",v),n.addEventListener("squeeze",v),n.addEventListener("squeezestart",v),n.addEventListener("squeezeend",v),n.addEventListener("end",y),n.addEventListener("inputsourceschange",x);let e=t.getContextAttributes();!0!==e.xrCompatible&&await t.makeXRCompatible();let r={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:a},l=new XRWebGLLayer(n,t,r);n.updateRenderState({baseLayer:l}),s=await n.requestReferenceSpace(o),S.setContext(n),S.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};let _=new iW,b=new iW;function w(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){m.near=d.near=u.near=e.near,m.far=d.far=u.far=e.far,(f!==m.near||g!==m.far)&&(n.updateRenderState({depthNear:m.near,depthFar:m.far}),f=m.near,g=m.far);let t=e.parent,i=m.cameras;w(m,t);for(let e=0;e<i.length;e++)w(i[e],t);e.matrixWorld.copy(m.matrixWorld),e.matrix.copy(m.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);let r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);return 2===i.length?function(e,t,i){_.setFromMatrixPosition(t.matrixWorld),b.setFromMatrixPosition(i.matrixWorld);let r=_.distanceTo(b),n=t.projectionMatrix.elements,a=i.projectionMatrix.elements,s=n[14]/(n[10]-1),o=n[14]/(n[10]+1),l=(n[9]+1)/n[5],h=(n[9]-1)/n[5],c=(n[8]-1)/n[0],u=(a[8]+1)/a[0],d=r/(-c+u),p=-(d*c);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let m=s+d,f=o+d;e.projectionMatrix.makePerspective(s*c-p,s*u+(r-p),l*o/f*m,h*o/f*m,m,f)}(m,u,d):m.projectionMatrix.copy(u.projectionMatrix),m};let M=null,S=new n1;S.setAnimationLoop(function(e,t){if(null!==(l=t.getViewerPose(s))){let e=l.views,t=n.renderState.baseLayer;r.bindXRFramebuffer(t.framebuffer);let i=!1;e.length!==m.cameras.length&&(m.cameras.length=0,i=!0);for(let r=0;r<e.length;r++){let n=e[r],a=t.getViewport(n),s=p[r];s.matrix.fromArray(n.transform.matrix),s.projectionMatrix.fromArray(n.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===r&&m.matrix.copy(s.matrix),!0===i&&m.cameras.push(s)}}let i=n.inputSources;for(let e=0;e<h.length;e++){let r=h[e],n=i[e];r.update(n,t,s)}M&&M(e,t)}),this.setAnimationLoop=function(e){M=e},this.dispose=function(){}}}function sj(e){function t(t,i){let r,n;t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map),i.alphaMap&&(t.alphaMap.value=i.alphaMap),i.specularMap&&(t.specularMap.value=i.specularMap);let a=e.get(i).envMap;if(a){t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture&&a._needsFlipEnvMap?-1:1,t.reflectivity.value=i.reflectivity,t.refractionRatio.value=i.refractionRatio;let r=e.get(a).__maxMipLevel;void 0!==r&&(t.maxMipLevel.value=r)}i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap&&(r=i.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix)),i.aoMap?n=i.aoMap:i.lightMap&&(n=i.lightMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uv2Transform.value.copy(n.matrix))}function i(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap),i.bumpMap&&(t.bumpMap.value=i.bumpMap,t.bumpScale.value=i.bumpScale,i.side===x&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,t.normalScale.value.copy(i.normalScale),i.side===x&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),e.get(i).envMap&&(t.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,n,a){let s,o;r.isMeshBasicMaterial?t(e,r):r.isMeshLambertMaterial?(t(e,r),r.emissiveMap&&(e.emissiveMap.value=r.emissiveMap)):r.isMeshToonMaterial?(t(e,r),r.gradientMap&&(e.gradientMap.value=r.gradientMap),r.emissiveMap&&(e.emissiveMap.value=r.emissiveMap),r.bumpMap&&(e.bumpMap.value=r.bumpMap,e.bumpScale.value=r.bumpScale,r.side===x&&(e.bumpScale.value*=-1)),r.normalMap&&(e.normalMap.value=r.normalMap,e.normalScale.value.copy(r.normalScale),r.side===x&&e.normalScale.value.negate()),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias)):r.isMeshPhongMaterial?(t(e,r),e.specular.value.copy(r.specular),e.shininess.value=Math.max(r.shininess,1e-4),r.emissiveMap&&(e.emissiveMap.value=r.emissiveMap),r.bumpMap&&(e.bumpMap.value=r.bumpMap,e.bumpScale.value=r.bumpScale,r.side===x&&(e.bumpScale.value*=-1)),r.normalMap&&(e.normalMap.value=r.normalMap,e.normalScale.value.copy(r.normalScale),r.side===x&&e.normalScale.value.negate()),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias)):r.isMeshStandardMaterial?(t(e,r),r.isMeshPhysicalMaterial?(i(e,r),e.reflectivity.value=r.reflectivity,e.clearcoat.value=r.clearcoat,e.clearcoatRoughness.value=r.clearcoatRoughness,r.sheen&&e.sheen.value.copy(r.sheen),r.clearcoatMap&&(e.clearcoatMap.value=r.clearcoatMap),r.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=r.clearcoatRoughnessMap),r.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(r.clearcoatNormalScale),e.clearcoatNormalMap.value=r.clearcoatNormalMap,r.side===x&&e.clearcoatNormalScale.value.negate()),e.transmission.value=r.transmission,r.transmissionMap&&(e.transmissionMap.value=r.transmissionMap)):i(e,r)):r.isMeshMatcapMaterial?(t(e,r),r.matcap&&(e.matcap.value=r.matcap),r.bumpMap&&(e.bumpMap.value=r.bumpMap,e.bumpScale.value=r.bumpScale,r.side===x&&(e.bumpScale.value*=-1)),r.normalMap&&(e.normalMap.value=r.normalMap,e.normalScale.value.copy(r.normalScale),r.side===x&&e.normalScale.value.negate()),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias)):r.isMeshDepthMaterial?(t(e,r),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias)):r.isMeshDistanceMaterial?(t(e,r),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias),e.referencePosition.value.copy(r.referencePosition),e.nearDistance.value=r.nearDistance,e.farDistance.value=r.farDistance):r.isMeshNormalMaterial?(t(e,r),r.bumpMap&&(e.bumpMap.value=r.bumpMap,e.bumpScale.value=r.bumpScale,r.side===x&&(e.bumpScale.value*=-1)),r.normalMap&&(e.normalMap.value=r.normalMap,e.normalScale.value.copy(r.normalScale),r.side===x&&e.normalScale.value.negate()),r.displacementMap&&(e.displacementMap.value=r.displacementMap,e.displacementScale.value=r.displacementScale,e.displacementBias.value=r.displacementBias)):r.isLineBasicMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,r.isLineDashedMaterial&&(e.dashSize.value=r.dashSize,e.totalSize.value=r.dashSize+r.gapSize,e.scale.value=r.scale)):r.isPointsMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,e.size.value=r.size*n,e.scale.value=.5*a,r.map&&(e.map.value=r.map),r.alphaMap&&(e.alphaMap.value=r.alphaMap),r.map?s=r.map:r.alphaMap&&(s=r.alphaMap),void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uvTransform.value.copy(s.matrix))):r.isSpriteMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,e.rotation.value=r.rotation,r.map&&(e.map.value=r.map),r.alphaMap&&(e.alphaMap.value=r.alphaMap),r.map?o=r.map:r.alphaMap&&(o=r.alphaMap),void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix))):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function sq(e){let t,i,r,n,a,s,o,l,h,c,u,d,p,m,f,g,v,y,x,_,b,w;let M=void 0!==(e=e||{}).canvas?e.canvas:function(){let e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),S=void 0!==e.context?e.context:null,T=void 0!==e.alpha&&e.alpha,E=void 0===e.depth||e.depth,A=void 0===e.stencil||e.stencil,L=void 0!==e.antialias&&e.antialias,R=void 0===e.premultipliedAlpha||e.premultipliedAlpha,C=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,P=void 0!==e.powerPreference?e.powerPreference:"default",I=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,D=null,N=null,B=[],z=[];this.domElement=M,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=tW,this.physicallyCorrectLights=!1,this.toneMapping=ei,this.toneMappingExposure=1;let F=this,O=!1,H=0,U=0,G=null,k=-1,V=null,W=new iU,j=new iU,q=null,X=M.width,Y=M.height,Z=1,J=null,Q=null,K=new iU(0,0,X,Y),$=new iU(0,0,X,Y),ee=!1,et=new n0,er=!1,en=!1,ea=new ru,es=new iW,eo={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function el(){return null===G?Z:1}let eh=S;function ec(e,t){for(let i=0;i<e.length;i++){let r=e[i],n=M.getContext(r,t);if(null!==n)return n}return null}try{if(M.addEventListener("webglcontextlost",ep,!1),M.addEventListener("webglcontextrestored",em,!1),null===eh){let e=["webgl2","webgl","experimental-webgl"];if(!0===F.isWebGL1Renderer&&e.shift(),eh=ec(e,{alpha:T,depth:E,stencil:A,antialias:L,premultipliedAlpha:R,preserveDrawingBuffer:C,powerPreference:P,failIfMajorPerformanceCaveat:I}),null===eh){if(ec(e))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===eh.getShaderPrecisionFormat&&(eh.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function eu(){t=new ar(eh),i=new ae(eh,t,e),t.init(i),b=new sH(eh,t,i),r=new sF(eh,t,i),n=new as(eh),a=new sM,s=new sO(eh,t,r,a,i,b,n),o=new ai(F),l=new n3(eh,i),w=new n7(eh,t,l,i),h=new an(eh,l,n,w),c=new ac(eh,h,l,n),y=new ah(eh),f=new at(a),u=new sw(F,o,t,i,w,f),d=new sj(a),p=new sA(a),m=new sD(t,i),v=new n8(F,o,r,c,R),g=new sz(F,c,i),x=new n9(eh,t,n,i),_=new aa(eh,t,n,i),n.programs=u.programs,F.capabilities=i,F.extensions=t,F.properties=a,F.renderLists=p,F.shadowMap=g,F.state=r,F.info=n}eu();let ed=new sW(F,eh);function ep(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),O=!0}function em(){console.log("THREE.WebGLRenderer: Context Restored."),O=!1;let e=n.autoReset,t=g.enabled,i=g.autoUpdate,r=g.needsUpdate,a=g.type;eu(),n.autoReset=e,g.enabled=t,g.autoUpdate=i,g.needsUpdate=r,g.type=a}function ef(e){let t=e.target;t.removeEventListener("dispose",ef),function(e){let t=a.get(e).programs;void 0!==t&&t.forEach(function(e){u.releaseProgram(e)})}(t),a.remove(t)}this.xr=ed,this.getContext=function(){return eh},this.getContextAttributes=function(){return eh.getContextAttributes()},this.forceContextLoss=function(){let e=t.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=t.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(e){void 0!==e&&(Z=e,this.setSize(X,Y,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new iN),e.set(X,Y)},this.setSize=function(e,t,i){if(ed.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}X=e,Y=t,M.width=Math.floor(e*Z),M.height=Math.floor(t*Z),!1!==i&&(M.style.width=e+"px",M.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new iN),e.set(X*Z,Y*Z).floor()},this.setDrawingBufferSize=function(e,t,i){X=e,Y=t,Z=i,M.width=Math.floor(e*i),M.height=Math.floor(t*i),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new iU),e.copy(W)},this.getViewport=function(e){return e.copy(K)},this.setViewport=function(e,t,i,n){e.isVector4?K.set(e.x,e.y,e.z,e.w):K.set(e,t,i,n),r.viewport(W.copy(K).multiplyScalar(Z).floor())},this.getScissor=function(e){return e.copy($)},this.setScissor=function(e,t,i,n){e.isVector4?$.set(e.x,e.y,e.z,e.w):$.set(e,t,i,n),r.scissor(j.copy($).multiplyScalar(Z).floor())},this.getScissorTest=function(){return ee},this.setScissorTest=function(e){r.setScissorTest(ee=e)},this.setOpaqueSort=function(e){J=e},this.setTransparentSort=function(e){Q=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new r6),e.copy(v.getClearColor())},this.setClearColor=function(){v.setClearColor.apply(v,arguments)},this.getClearAlpha=function(){return v.getClearAlpha()},this.setClearAlpha=function(){v.setClearAlpha.apply(v,arguments)},this.clear=function(e,t,i){let r=0;(void 0===e||e)&&(r|=16384),(void 0===t||t)&&(r|=256),(void 0===i||i)&&(r|=1024),eh.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){M.removeEventListener("webglcontextlost",ep,!1),M.removeEventListener("webglcontextrestored",em,!1),p.dispose(),m.dispose(),a.dispose(),o.dispose(),c.dispose(),w.dispose(),ed.dispose(),ed.removeEventListener("sessionstart",ev),ed.removeEventListener("sessionend",ey),ex.stop()},this.renderBufferImmediate=function(e,t){w.initAttributes();let i=a.get(e);e.hasPositions&&!i.position&&(i.position=eh.createBuffer()),e.hasNormals&&!i.normal&&(i.normal=eh.createBuffer()),e.hasUvs&&!i.uv&&(i.uv=eh.createBuffer()),e.hasColors&&!i.color&&(i.color=eh.createBuffer());let r=t.getAttributes();e.hasPositions&&(eh.bindBuffer(34962,i.position),eh.bufferData(34962,e.positionArray,35048),w.enableAttribute(r.position),eh.vertexAttribPointer(r.position,3,5126,!1,0,0)),e.hasNormals&&(eh.bindBuffer(34962,i.normal),eh.bufferData(34962,e.normalArray,35048),w.enableAttribute(r.normal),eh.vertexAttribPointer(r.normal,3,5126,!1,0,0)),e.hasUvs&&(eh.bindBuffer(34962,i.uv),eh.bufferData(34962,e.uvArray,35048),w.enableAttribute(r.uv),eh.vertexAttribPointer(r.uv,2,5126,!1,0,0)),e.hasColors&&(eh.bindBuffer(34962,i.color),eh.bufferData(34962,e.colorArray,35048),w.enableAttribute(r.color),eh.vertexAttribPointer(r.color,3,5126,!1,0,0)),w.disableUnusedAttributes(),eh.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,n,a,s){let o;null===t&&(t=eo);let c=a.isMesh&&0>a.matrixWorld.determinant(),u=eS(e,t,n,a);r.setMaterial(n,c);let d=i.index,p=i.attributes.position;if(null===d){if(void 0===p||0===p.count)return}else if(0===d.count)return;let m=1;!0===n.wireframe&&(d=h.getWireframeAttribute(i),m=2),(n.morphTargets||n.morphNormals)&&y.update(a,i,n,u),w.setup(a,n,u,i,d);let f=x;null!==d&&(o=l.get(d),(f=_).setIndex(o));let g=null!==d?d.count:p.count,v=i.drawRange.start*m,b=i.drawRange.count*m,M=null!==s?s.start*m:0,S=null!==s?s.count*m:1/0,T=Math.max(v,M),E=Math.max(0,Math.min(g,v+b,M+S)-1-T+1);if(0!==E){if(a.isMesh)!0===n.wireframe?(r.setLineWidth(n.wireframeLinewidth*el()),f.setMode(1)):f.setMode(4);else if(a.isLine){let e=n.linewidth;void 0===e&&(e=1),r.setLineWidth(e*el()),a.isLineSegments?f.setMode(1):a.isLineLoop?f.setMode(2):f.setMode(3)}else a.isPoints?f.setMode(0):a.isSprite&&f.setMode(4);if(a.isInstancedMesh)f.renderInstances(T,E,a.count);else if(i.isInstancedBufferGeometry){let e=Math.min(i.instanceCount,i._maxInstanceCount);f.renderInstances(T,E,e)}else f.render(T,E)}},this.compile=function(e,t){(N=m.get(e)).init(),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(N.pushLight(e),e.castShadow&&N.pushShadow(e))}),N.setupLights(),e.traverse(function(t){let i=t.material;if(i){if(Array.isArray(i))for(let r=0;r<i.length;r++)ew(i[r],e,t);else ew(i,e,t)}})};let eg=null;function ev(){ex.stop()}function ey(){ex.start()}let ex=new n1;function e_(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let a=0,s=e.length;a<s;a++){let s=e[a],o=s.object,l=s.geometry,h=null===n?s.material:n,c=s.group;if(i.isArrayCamera){let e=i.cameras;for(let i=0,n=e.length;i<n;i++){let n=e[i];o.layers.test(n.layers)&&(r.viewport(W.copy(n.viewport)),N.setupLightsView(n),eb(o,t,n,l,h,c))}}else eb(o,t,i,l,h,c)}}function eb(e,t,i,n,a,s){if(e.onBeforeRender(F,t,i,n,a,s),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){let n=eS(i,t,a,e);r.setMaterial(a),w.reset(),function(e,t){e.render(function(e){F.renderBufferImmediate(e,t)})}(e,n)}else F.renderBufferDirect(i,t,n,a,e,s);e.onAfterRender(F,t,i,n,a,s)}function ew(e,t,i){!0!==t.isScene&&(t=eo);let r=a.get(e),n=N.state.lights,s=N.state.shadowsArray,l=n.state.version,h=u.getParameters(e,n.state,s,t,i),c=u.getProgramCacheKey(h),d=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=o.get(e.envMap||r.environment),void 0===d&&(e.addEventListener("dispose",ef),d=new Map,r.programs=d);let p=d.get(c);if(void 0!==p){if(r.currentProgram===p&&r.lightsStateVersion===l)return eM(e,h),p}else h.uniforms=u.getUniforms(e),e.onBuild(h,F),e.onBeforeCompile(h,F),p=u.acquireProgram(h,c),d.set(c,p),r.uniforms=h.uniforms;let m=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(m.clippingPlanes=f.uniform),eM(e,h),r.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,r.lightsStateVersion=l,r.needsLights&&(m.ambientLightColor.value=n.state.ambient,m.lightProbe.value=n.state.probe,m.directionalLights.value=n.state.directional,m.directionalLightShadows.value=n.state.directionalShadow,m.spotLights.value=n.state.spot,m.spotLightShadows.value=n.state.spotShadow,m.rectAreaLights.value=n.state.rectArea,m.ltc_1.value=n.state.rectAreaLTC1,m.ltc_2.value=n.state.rectAreaLTC2,m.pointLights.value=n.state.point,m.pointLightShadows.value=n.state.pointShadow,m.hemisphereLights.value=n.state.hemi,m.directionalShadowMap.value=n.state.directionalShadowMap,m.directionalShadowMatrix.value=n.state.directionalShadowMatrix,m.spotShadowMap.value=n.state.spotShadowMap,m.spotShadowMatrix.value=n.state.spotShadowMatrix,m.pointShadowMap.value=n.state.pointShadowMap,m.pointShadowMatrix.value=n.state.pointShadowMatrix);let g=p.getUniforms(),v=sr.seqWithValue(g.seq,m);return r.currentProgram=p,r.uniformsList=v,p}function eM(e,t){let i=a.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas}function eS(e,t,n,l){var h;!0!==t.isScene&&(t=eo),s.resetTextureUnits();let c=t.fog,u=n.isMeshStandardMaterial?t.environment:null,p=null===G?F.outputEncoding:G.texture.encoding,m=o.get(n.envMap||u),g=!0===n.vertexColors&&l.geometry&&l.geometry.attributes.color&&4===l.geometry.attributes.color.itemSize,v=a.get(n),y=N.state.lights;if(!0===er&&(!0===en||e!==V)){let t=e===V&&n.id===k;f.setState(n,e,t)}let x=!1;n.version===v.__version?v.needsLights&&v.lightsStateVersion!==y.state.version?x=!0:v.outputEncoding!==p?x=!0:l.isInstancedMesh&&!1===v.instancing?x=!0:l.isInstancedMesh||!0!==v.instancing?v.envMap!==m?x=!0:n.fog&&v.fog!==c?x=!0:void 0!==v.numClippingPlanes&&(v.numClippingPlanes!==f.numPlanes||v.numIntersection!==f.numIntersection)?x=!0:v.vertexAlphas!==g&&(x=!0):x=!0:(x=!0,v.__version=n.version);let _=v.currentProgram;!0===x&&(_=ew(n,t,l));let b=!1,w=!1,M=!1,S=_.getUniforms(),T=v.uniforms;if(r.useProgram(_.program)&&(b=!0,w=!0,M=!0),n.id!==k&&(k=n.id,w=!0),b||V!==e){if(S.setValue(eh,"projectionMatrix",e.projectionMatrix),i.logarithmicDepthBuffer&&S.setValue(eh,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),V!==e&&(V=e,w=!0,M=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){let t=S.map.cameraPosition;void 0!==t&&t.setValue(eh,es.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&S.setValue(eh,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&S.setValue(eh,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){S.setOptional(eh,l,"bindMatrix"),S.setOptional(eh,l,"bindMatrixInverse");let e=l.skeleton;if(e){let t=e.bones;if(i.floatVertexTextures){if(null===e.boneTexture){let i=Math.sqrt(4*t.length),r=new Float32Array((i=Math.max(i=iP(i),4))*i*4);r.set(e.boneMatrices);let n=new nQ(r,i,i,ek,eN);e.boneMatrices=r,e.boneTexture=n,e.boneTextureSize=i}S.setValue(eh,"boneTexture",e.boneTexture,s),S.setValue(eh,"boneTextureSize",e.boneTextureSize)}else S.setOptional(eh,e,"boneMatrices")}}return(w||v.receiveShadow!==l.receiveShadow)&&(v.receiveShadow=l.receiveShadow,S.setValue(eh,"receiveShadow",l.receiveShadow)),w&&(S.setValue(eh,"toneMappingExposure",F.toneMappingExposure),v.needsLights&&(h=M,T.ambientLightColor.needsUpdate=h,T.lightProbe.needsUpdate=h,T.directionalLights.needsUpdate=h,T.directionalLightShadows.needsUpdate=h,T.pointLights.needsUpdate=h,T.pointLightShadows.needsUpdate=h,T.spotLights.needsUpdate=h,T.spotLightShadows.needsUpdate=h,T.rectAreaLights.needsUpdate=h,T.hemisphereLights.needsUpdate=h),c&&n.fog&&d.refreshFogUniforms(T,c),d.refreshMaterialUniforms(T,n,Z,Y),sr.upload(eh,v.uniformsList,T,s)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(sr.upload(eh,v.uniformsList,T,s),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&S.setValue(eh,"center",l.center),S.setValue(eh,"modelViewMatrix",l.modelViewMatrix),S.setValue(eh,"normalMatrix",l.normalMatrix),S.setValue(eh,"modelMatrix",l.matrixWorld),_}ex.setAnimationLoop(function(e){eg&&eg(e)}),"undefined"!=typeof window&&ex.setContext(window),this.setAnimationLoop=function(e){eg=e,ed.setAnimationLoop(e),null===e?ex.stop():ex.start()},ed.addEventListener("sessionstart",ev),ed.addEventListener("sessionend",ey),this.render=function(e,t){let i,a;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),a=arguments[3]),void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===O)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ed.enabled&&!0===ed.isPresenting&&(t=ed.getCamera(t)),!0===e.isScene&&e.onBeforeRender(F,e,t,i||G),(N=m.get(e,z.length)).init(),z.push(N),ea.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),et.setFromProjectionMatrix(ea),en=this.localClippingEnabled,er=f.init(this.clippingPlanes,en,t),(D=p.get(e,B.length)).init(),B.push(D),function e(t,i,r,a){if(!1===t.visible)return;if(t.layers.test(i.layers)){if(t.isGroup)r=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)N.pushLight(t),t.castShadow&&N.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||et.intersectsSprite(t)){a&&es.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ea);let e=c.update(t),i=t.material;i.visible&&D.push(t,e,i,r,es.z,null)}}else if(t.isImmediateRenderObject)a&&es.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ea),D.push(t,null,t.material,r,es.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==n.render.frame&&(t.skeleton.update(),t.skeleton.frame=n.render.frame),!t.frustumCulled||et.intersectsObject(t))){a&&es.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ea);let e=c.update(t),i=t.material;if(Array.isArray(i)){let n=e.groups;for(let a=0,s=n.length;a<s;a++){let s=n[a],o=i[s.materialIndex];o&&o.visible&&D.push(t,e,o,r,es.z,s)}}else i.visible&&D.push(t,e,i,r,es.z,null)}}let s=t.children;for(let t=0,n=s.length;t<n;t++)e(s[t],i,r,a)}(e,t,0,F.sortObjects),D.finish(),!0===F.sortObjects&&D.sort(J,Q),!0===er&&f.beginShadows();let o=N.state.shadowsArray;g.render(o,e,t),N.setupLights(),N.setupLightsView(t),!0===er&&f.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),v.render(D,e,t,a);let l=D.opaque,h=D.transparent;l.length>0&&e_(l,e,t),h.length>0&&e_(h,e,t),null!==G&&(s.updateRenderTargetMipmap(G),s.updateMultisampleRenderTarget(G)),!0===e.isScene&&e.onAfterRender(F,e,t),r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),r.setPolygonOffset(!1),w.resetDefaultState(),k=-1,V=null,z.pop(),N=z.length>0?z[z.length-1]:null,B.pop(),D=B.length>0?B[B.length-1]:null},this.getActiveCubeFace=function(){return H},this.getActiveMipmapLevel=function(){return U},this.getRenderTarget=function(){return G},this.setRenderTarget=function(e,t=0,i=0){G=e,H=t,U=i,e&&void 0===a.get(e).__webglFramebuffer&&s.setupRenderTarget(e);let n=null,o=!1,l=!1;if(e){let i=e.texture;(i.isDataTexture3D||i.isDataTexture2DArray)&&(l=!0);let r=a.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=r[t],o=!0):n=e.isWebGLMultisampleRenderTarget?a.get(e).__webglMultisampledFramebuffer:r,W.copy(e.viewport),j.copy(e.scissor),q=e.scissorTest}else W.copy(K).multiplyScalar(Z).floor(),j.copy($).multiplyScalar(Z).floor(),q=ee;if(r.bindFramebuffer(36160,n),r.viewport(W),r.scissor(j),r.setScissorTest(q),o){let r=a.get(e.texture);eh.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,i)}else if(l){let r=a.get(e.texture);eh.framebufferTextureLayer(36160,36064,r.__webglTexture,i||0,t||0)}},this.readRenderTargetPixels=function(e,n,s,o,l,h,c){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let u=a.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==c&&(u=u[c]),u){r.bindFramebuffer(36160,u);try{let r=e.texture,a=r.format,c=r.type;if(a!==ek&&b.convert(a)!==eh.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let u=c===eB&&(t.has("EXT_color_buffer_half_float")||i.isWebGL2&&t.has("EXT_color_buffer_float"));if(c!==eL&&b.convert(c)!==eh.getParameter(35738)&&!(c===eN&&(i.isWebGL2||t.has("OES_texture_float")||t.has("WEBGL_color_buffer_float")))&&!u){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}36053===eh.checkFramebufferStatus(36160)?n>=0&&n<=e.width-o&&s>=0&&s<=e.height-l&&eh.readPixels(n,s,o,l,b.convert(a),b.convert(c),h):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let e=null!==G?a.get(G).__webglFramebuffer:null;r.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,i=0){let n=Math.pow(2,-i),a=Math.floor(t.image.width*n),o=Math.floor(t.image.height*n),l=b.convert(t.format);s.setTexture2D(t,0),eh.copyTexImage2D(3553,i,l,e.x,e.y,a,o,0),r.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n=0){let a=t.image.width,o=t.image.height,l=b.convert(i.format),h=b.convert(i.type);s.setTexture2D(i,0),eh.pixelStorei(37440,i.flipY),eh.pixelStorei(37441,i.premultiplyAlpha),eh.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?eh.texSubImage2D(3553,n,e.x,e.y,a,o,l,h,t.image.data):t.isCompressedTexture?eh.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,l,t.mipmaps[0].data):eh.texSubImage2D(3553,n,e.x,e.y,l,h,t.image),0===n&&i.generateMipmaps&&eh.generateMipmap(3553),r.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,n,a=0){let o;if(F.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let{width:l,height:h,data:c}=i.image,u=b.convert(n.format),d=b.convert(n.type);if(n.isDataTexture3D)s.setTexture3D(n,0),o=32879;else if(n.isDataTexture2DArray)s.setTexture2DArray(n,0),o=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}eh.pixelStorei(37440,n.flipY),eh.pixelStorei(37441,n.premultiplyAlpha),eh.pixelStorei(3317,n.unpackAlignment);let p=eh.getParameter(3314),m=eh.getParameter(32878),f=eh.getParameter(3316),g=eh.getParameter(3315),v=eh.getParameter(32877);eh.pixelStorei(3314,l),eh.pixelStorei(32878,h),eh.pixelStorei(3316,e.min.x),eh.pixelStorei(3315,e.min.y),eh.pixelStorei(32877,e.min.z),eh.texSubImage3D(o,a,t.x,t.y,t.z,e.max.x-e.min.x+1,e.max.y-e.min.y+1,e.max.z-e.min.z+1,u,d,c),eh.pixelStorei(3314,p),eh.pixelStorei(32878,m),eh.pixelStorei(3316,f),eh.pixelStorei(3315,g),eh.pixelStorei(32877,v),0===a&&n.generateMipmaps&&eh.generateMipmap(o),r.unbindTexture()},this.initTexture=function(e){s.setTexture2D(e,0),r.unbindTexture()},this.resetState=function(){H=0,U=0,G=null,r.reset(),w.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class sX extends sq{}sX.prototype.isWebGL1Renderer=!0;class sY{constructor(e,t=25e-5){this.name="",this.color=new r6(e),this.density=t}clone(){return new sY(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}sY.prototype.isFogExp2=!0;class sZ{constructor(e,t=1,i=1e3){this.name="",this.color=new r6(e),this.near=t,this.far=i}clone(){return new sZ(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}sZ.prototype.isFog=!0;class sJ extends rz{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}sJ.prototype.isScene=!0;class sQ{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=ih,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=iE(),this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,n=this.stride;r<n;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=iE()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new sQ(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=iE()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}sQ.prototype.isInterleavedBuffer=!0;const sK=new iW;class s${constructor(e,t,i,r){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)sK.x=this.getX(t),sK.y=this.getY(t),sK.z=this.getZ(t),sK.applyMatrix4(e),this.setXYZ(t,sK.x,sK.y,sK.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)sK.x=this.getX(t),sK.y=this.getY(t),sK.z=this.getZ(t),sK.applyNormalMatrix(e),this.setXYZ(t,sK.x,sK.y,sK.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)sK.x=this.getX(t),sK.y=this.getY(t),sK.z=this.getZ(t),sK.transformDirection(e),this.setXYZ(t,sK.x,sK.y,sK.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=n,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new s$(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new ne(new this.array.constructor(e),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}}s$.prototype.isInterleavedBufferAttribute=!0;class s0 extends r${constructor(e){super(),this.type="SpriteMaterial",this.color=new r6(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}s0.prototype.isSpriteMaterial=!0;const s1=new iW,s3=new iW,s2=new iW,s4=new iN,s5=new iN,s6=new ru,s8=new iW,s7=new iW,s9=new iW,oe=new iN,ot=new iN,oi=new iN;class or extends rz{constructor(e){if(super(),this.type="Sprite",void 0===t){t=new nb;let e=new sQ(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);t.setIndex([0,1,2,0,2,3]),t.setAttribute("position",new s$(e,3,0,!1)),t.setAttribute("uv",new s$(e,2,3,!1))}this.geometry=t,this.material=void 0!==e?e:new s0,this.center=new iN(.5,.5)}raycast(e,t){let i,r;null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),s3.setFromMatrixScale(this.matrixWorld),s6.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),s2.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&s3.multiplyScalar(-s2.z);let n=this.material.rotation;0!==n&&(r=Math.cos(n),i=Math.sin(n));let a=this.center;on(s8.set(-.5,-.5,0),s2,a,s3,i,r),on(s7.set(.5,-.5,0),s2,a,s3,i,r),on(s9.set(.5,.5,0),s2,a,s3,i,r),oe.set(0,0),ot.set(1,0),oi.set(1,1);let s=e.ray.intersectTriangle(s8,s7,s9,!1,s1);if(null===s&&(on(s7.set(-.5,.5,0),s2,a,s3,i,r),ot.set(0,1),null===(s=e.ray.intersectTriangle(s8,s9,s7,!1,s1))))return;let o=e.ray.origin.distanceTo(s1);o<e.near||o>e.far||t.push({distance:o,point:s1.clone(),uv:rQ.getUV(s1,s8,s7,s9,oe,ot,oi,new iN),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function on(e,t,i,r,n,a){s4.subVectors(e,i).addScalar(.5).multiply(r),void 0!==n?(s5.x=a*s4.x-n*s4.y,s5.y=n*s4.x+a*s4.y):s5.copy(s4),e.copy(t),e.x+=s5.x,e.y+=s5.y,e.applyMatrix4(s6)}or.prototype.isSprite=!0;const oa=new iW,os=new iW;class oo extends rz{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let e=0,i=t.length;e<i;e++){let i=t[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){let i;t=Math.abs(t);let r=this.levels;for(i=0;i<r.length&&!(t<r[i].distance);i++);return r.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r&&!(e<t[i].distance);i++);return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){oa.setFromMatrixPosition(this.matrixWorld);let i=e.ray.origin.distanceTo(oa);this.getObjectForDistance(i).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){let i,r;oa.setFromMatrixPosition(e.matrixWorld),os.setFromMatrixPosition(this.matrixWorld);let n=oa.distanceTo(os)/e.zoom;for(i=1,t[0].object.visible=!0,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let e=0,r=i.length;e<r;e++){let r=i[e];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}}const ol=new iW,oh=new iU,oc=new iU,ou=new iW,od=new ru;class op extends nH{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ru,this.bindMatrixInverse=new ru}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new iU,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let i=this.skeleton,r=this.geometry;oh.fromBufferAttribute(r.attributes.skinIndex,e),oc.fromBufferAttribute(r.attributes.skinWeight,e),ol.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){let r=oc.getComponent(e);if(0!==r){let n=oh.getComponent(e);od.multiplyMatrices(i.bones[n].matrixWorld,i.boneInverses[n]),t.addScaledVector(ou.copy(ol).applyMatrix4(od),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}op.prototype.isSkinnedMesh=!0;class om extends rz{constructor(){super(),this.type="Bone"}}om.prototype.isBone=!0;const of=new ru,og=new ru;class ov{constructor(e=[],t=[]){this.uuid=iE(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new ru)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let t=new ru;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let r=0,n=e.length;r<n;r++){let n=e[r]?e[r].matrixWorld:og;of.multiplyMatrices(n,t[r]),of.toArray(i,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new ov(this.bones,this.boneInverses)}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){let r=e.bones[i],n=t[r];void 0===n&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),n=new om),this.bones.push(n),this.boneInverses.push(new ru().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let r=0,n=t.length;r<n;r++){let n=t[r];e.bones.push(n.uuid);let a=i[r];e.boneInverses.push(a.toArray())}return e}}const oy=new ru,ox=new ru,o_=[],ob=new nH;class ow extends nH{constructor(e,t,i){super(e,t),this.instanceMatrix=new ne(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,r=this.count;if(ob.geometry=this.geometry,ob.material=this.material,void 0!==ob.material)for(let n=0;n<r;n++){this.getMatrixAt(n,oy),ox.multiplyMatrices(i,oy),ob.matrixWorld=ox,ob.raycast(e,o_);for(let e=0,i=o_.length;e<i;e++){let i=o_[e];i.instanceId=n,i.object=this,t.push(i)}o_.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new ne(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}ow.prototype.isInstancedMesh=!0;class oM extends r${constructor(e){super(),this.type="LineBasicMaterial",this.color=new r6(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}oM.prototype.isLineBasicMaterial=!0;const oS=new iW,oT=new iW,oE=new ru,oA=new rc,oL=new ri;class oR extends rz{constructor(e=new nb,t=new oM){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[0];for(let e=1,r=t.count;e<r;e++)oS.fromBufferAttribute(t,e-1),oT.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=oS.distanceTo(oT);e.setAttribute("lineDistance",new nh(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){let i=this.geometry,r=this.matrixWorld,n=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oL.copy(i.boundingSphere),oL.applyMatrix4(r),oL.radius+=n,!1===e.ray.intersectsSphere(oL))return;oE.copy(r).invert(),oA.copy(e.ray).applyMatrix4(oE);let s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new iW,h=new iW,c=new iW,u=new iW,d=this.isLineSegments?2:1;if(i.isBufferGeometry){let r=i.index,n=i.attributes.position;if(null!==r){let i=Math.max(0,a.start),s=Math.min(r.count,a.start+a.count);for(let a=i,p=s-1;a<p;a+=d){let i=r.getX(a),s=r.getX(a+1);if(l.fromBufferAttribute(n,i),h.fromBufferAttribute(n,s),oA.distanceSqToSegment(l,h,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);let d=e.ray.origin.distanceTo(u);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this})}}else{let i=Math.max(0,a.start),r=Math.min(n.count,a.start+a.count);for(let a=i,s=r-1;a<s;a+=d){if(l.fromBufferAttribute(n,a),h.fromBufferAttribute(n,a+1),oA.distanceSqToSegment(l,h,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);let i=e.ray.origin.distanceTo(u);i<e.near||i>e.far||t.push({distance:i,point:c.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){let i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{let t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}oR.prototype.isLine=!0;const oC=new iW,oP=new iW;class oI extends oR{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[];for(let e=0,r=t.count;e<r;e+=2)oC.fromBufferAttribute(t,e),oP.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+oC.distanceTo(oP);e.setAttribute("lineDistance",new nh(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}oI.prototype.isLineSegments=!0;class oD extends oR{constructor(e,t){super(e,t),this.type="LineLoop"}}oD.prototype.isLineLoop=!0;class oN extends r${constructor(e){super(),this.type="PointsMaterial",this.color=new r6(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}oN.prototype.isPointsMaterial=!0;const oB=new ru,oz=new rc,oF=new ri,oO=new iW;class oH extends rz{constructor(e=new nb,t=new oN){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,r=this.matrixWorld,n=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oF.copy(i.boundingSphere),oF.applyMatrix4(r),oF.radius+=n,!1===e.ray.intersectsSphere(oF))return;oB.copy(r).invert(),oz.copy(e.ray).applyMatrix4(oB);let s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(i.isBufferGeometry){let n=i.index,s=i.attributes.position;if(null!==n){let i=Math.max(0,a.start),l=Math.min(n.count,a.start+a.count);for(let a=i;a<l;a++){let i=n.getX(a);oO.fromBufferAttribute(s,i),oU(oO,i,o,r,e,t,this)}}else{let i=Math.max(0,a.start),n=Math.min(s.count,a.start+a.count);for(let a=i;a<n;a++)oO.fromBufferAttribute(s,a),oU(oO,a,o,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){let i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{let t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function oU(e,t,i,r,n,a,s){let o=oz.distanceSqToPoint(e);if(o<i){let i=new iW;oz.closestPointToPoint(e,i),i.applyMatrix4(r);let l=n.ray.origin.distanceTo(i);if(l<n.near||l>n.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:i,index:t,face:null,object:s})}}oH.prototype.isPoints=!0;class oG extends iO{constructor(e,t,i,r,n,a,s,o,l){super(e,t,i,r,n,a,s,o,l),this.format=void 0!==s?s:eG,this.minFilter=void 0!==a?a:eM,this.magFilter=void 0!==n?n:eM,this.generateMipmaps=!1;let h=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){h.needsUpdate=!0,e.requestVideoFrameCallback(t)})}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}oG.prototype.isVideoTexture=!0;class ok extends iO{constructor(e,t,i,r,n,a,s,o,l,h,c,u){super(null,a,s,o,l,h,r,n,c,u),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ok.prototype.isCompressedTexture=!0;class oV extends iO{constructor(e,t,i,r,n,a,s,o,l){super(e,t,i,r,n,a,s,o,l),this.needsUpdate=!0}}oV.prototype.isCanvasTexture=!0;class oW extends iO{constructor(e,t,i,r,n,a,s,o,l,h){if((h=void 0!==h?h:eq)!==eq&&h!==eX)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===eq&&(i=eP),void 0===i&&h===eX&&(i=eH),super(null,r,n,a,s,o,h,i,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:ey,this.minFilter=void 0!==o?o:ey,this.flipY=!1,this.generateMipmaps=!1}}oW.prototype.isDepthTexture=!0;class oj extends nb{constructor(e=1,t=8,i=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);let n=[],a=[],s=[],o=[],l=new iW,h=new iN;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let n=0,c=3;n<=t;n++,c+=3){let u=i+n/t*r;l.x=e*Math.cos(u),l.y=e*Math.sin(u),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[c]/e+1)/2,h.y=(a[c+1]/e+1)/2,o.push(h.x,h.y)}for(let e=1;e<=t;e++)n.push(e,e+1,0);this.setIndex(n),this.setAttribute("position",new nh(a,3)),this.setAttribute("normal",new nh(s,3)),this.setAttribute("uv",new nh(o,2))}}class oq extends nb{constructor(e=1,t=1,i=1,r=8,n=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:n,openEnded:a,thetaStart:s,thetaLength:o};let l=this;r=Math.floor(r),n=Math.floor(n);let h=[],c=[],u=[],d=[],p=0,m=[],f=i/2,g=0;function v(i){let n=p,a=new iN,m=new iW,v=0,y=!0===i?e:t,x=!0===i?1:-1;for(let e=1;e<=r;e++)c.push(0,f*x,0),u.push(0,x,0),d.push(.5,.5),p++;let _=p;for(let e=0;e<=r;e++){let t=e/r*o+s,i=Math.cos(t),n=Math.sin(t);m.x=y*n,m.y=f*x,m.z=y*i,c.push(m.x,m.y,m.z),u.push(0,x,0),a.x=.5*i+.5,a.y=.5*n*x+.5,d.push(a.x,a.y),p++}for(let e=0;e<r;e++){let t=n+e,r=_+e;!0===i?h.push(r,r+1,t):h.push(r+1,r,t),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}(function(){let a=new iW,v=new iW,y=0,x=(t-e)/i;for(let l=0;l<=n;l++){let h=[],g=l/n,y=g*(t-e)+e;for(let e=0;e<=r;e++){let t=e/r,n=t*o+s,l=Math.sin(n),m=Math.cos(n);v.x=y*l,v.y=-g*i+f,v.z=y*m,c.push(v.x,v.y,v.z),a.set(l,x,m).normalize(),u.push(a.x,a.y,a.z),d.push(t,1-g),h.push(p++)}m.push(h)}for(let e=0;e<r;e++)for(let t=0;t<n;t++){let i=m[t][e],r=m[t+1][e],n=m[t+1][e+1],a=m[t][e+1];h.push(i,r,a),h.push(r,n,a),y+=6}l.addGroup(g,y,0),g+=y})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new nh(c,3)),this.setAttribute("normal",new nh(u,3)),this.setAttribute("uv",new nh(d,2))}}class oX extends oq{constructor(e=1,t=1,i=8,r=1,n=!1,a=0,s=2*Math.PI){super(0,e,t,i,r,n,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:n,thetaStart:a,thetaLength:s}}}class oY extends nb{constructor(e,t,i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};let n=[],a=[];function s(e){n.push(e.x,e.y,e.z)}function o(t,i){let r=3*t;i.x=e[r+0],i.y=e[r+1],i.z=e[r+2]}function l(e,t,i,r){r<0&&1===e.x&&(a[t]=e.x-1),0===i.x&&0===i.z&&(a[t]=r/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}(function(e){let i=new iW,r=new iW,n=new iW;for(let a=0;a<t.length;a+=3)o(t[a+0],i),o(t[a+1],r),o(t[a+2],n),function(e,t,i,r){let n=r+1,a=[];for(let r=0;r<=n;r++){a[r]=[];let s=e.clone().lerp(i,r/n),o=t.clone().lerp(i,r/n),l=n-r;for(let e=0;e<=l;e++)0===e&&r===n?a[r][e]=s:a[r][e]=s.clone().lerp(o,e/l)}for(let e=0;e<n;e++)for(let t=0;t<2*(n-e)-1;t++){let i=Math.floor(t/2);t%2==0?(s(a[e][i+1]),s(a[e+1][i]),s(a[e][i])):(s(a[e][i+1]),s(a[e+1][i+1]),s(a[e+1][i]))}}(i,r,n,e)})(r),function(e){let t=new iW;for(let i=0;i<n.length;i+=3)t.x=n[i+0],t.y=n[i+1],t.z=n[i+2],t.normalize().multiplyScalar(e),n[i+0]=t.x,n[i+1]=t.y,n[i+2]=t.z}(i),function(){let e=new iW;for(let t=0;t<n.length;t+=3){e.x=n[t+0],e.y=n[t+1],e.z=n[t+2];let i=h(e)/2/Math.PI+.5,r=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(i,1-r)}(function(){let e=new iW,t=new iW,i=new iW,r=new iW,s=new iN,o=new iN,c=new iN;for(let u=0,d=0;u<n.length;u+=9,d+=6){e.set(n[u+0],n[u+1],n[u+2]),t.set(n[u+3],n[u+4],n[u+5]),i.set(n[u+6],n[u+7],n[u+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),c.set(a[d+4],a[d+5]),r.copy(e).add(t).add(i).divideScalar(3);let p=h(r);l(s,d+0,e,p),l(o,d+2,t,p),l(c,d+4,i,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],i=a[e+2],r=a[e+4],n=Math.max(t,i,r),s=Math.min(t,i,r);n>.9&&s<.1&&(t<.2&&(a[e+0]+=1),i<.2&&(a[e+2]+=1),r<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new nh(n,3)),this.setAttribute("normal",new nh(n.slice(),3)),this.setAttribute("uv",new nh(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}}class oZ extends oY{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,r=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const oJ=new iW,oQ=new iW,oK=new iW,o$=new rQ;class o0 extends nb{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}let i=Math.cos(iS*t),r=e.getIndex(),n=e.getAttribute("position"),a=r?r.count:n.count,s=[0,0,0],o=["a","b","c"],l=[,,,],h={},c=[];for(let e=0;e<a;e+=3){r?(s[0]=r.getX(e),s[1]=r.getX(e+1),s[2]=r.getX(e+2)):(s[0]=e,s[1]=e+1,s[2]=e+2);let{a:t,b:a,c:u}=o$;if(t.fromBufferAttribute(n,s[0]),a.fromBufferAttribute(n,s[1]),u.fromBufferAttribute(n,s[2]),o$.getNormal(oK),l[0]=`${Math.round(1e4*t.x)},${Math.round(1e4*t.y)},${Math.round(1e4*t.z)}`,l[1]=`${Math.round(1e4*a.x)},${Math.round(1e4*a.y)},${Math.round(1e4*a.z)}`,l[2]=`${Math.round(1e4*u.x)},${Math.round(1e4*u.y)},${Math.round(1e4*u.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let e=0;e<3;e++){let t=(e+1)%3,r=l[e],n=l[t],a=o$[o[e]],u=o$[o[t]],d=`${r}_${n}`,p=`${n}_${r}`;p in h&&h[p]?(oK.dot(h[p].normal)<=i&&(c.push(a.x,a.y,a.z),c.push(u.x,u.y,u.z)),h[p]=null):d in h||(h[d]={index0:s[e],index1:s[t],normal:oK.clone()})}}for(let e in h)if(h[e]){let{index0:t,index1:i}=h[e];oJ.fromBufferAttribute(n,t),oQ.fromBufferAttribute(n,i),c.push(oJ.x,oJ.y,oJ.z),c.push(oQ.x,oQ.y,oQ.z)}this.setAttribute("position",new nh(c,3))}}const o1=function(e,t,i){let r,n,a,s,o,l,h;i=i||2;let c=t&&t.length,u=c?t[0]*i:e.length,d=o3(e,0,u,i,!0),p=[];if(!d||d.next===d.prev)return p;if(c&&(d=function(e,t,i,r){let n,a,s,o,l;let h=[];for(n=0,a=t.length;n<a;n++)s=t[n]*r,o=n<a-1?t[n+1]*r:e.length,(l=o3(e,s,o,r,!1))===l.next&&(l.steiner=!0),h.push(function(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e)return i}(l));for(h.sort(o4),n=0;n<h.length;n++)(function(e,t){if(t=function(e,t){let i=t,r=e.x,n=e.y,a=-1/0,s;do{if(n<=i.y&&n>=i.next.y&&i.next.y!==i.y){let e=i.x+(n-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=r&&e>a){if(a=e,e===r){if(n===i.y)return i;if(n===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t)if(!s)return null;if(r===a)return s;let o=s,l=s.x,h=s.y,c=1/0,u;i=s;do{var d,p;r>=i.x&&i.x>=l&&r!==i.x&&o6(n<h?r:a,n,l,h,n<h?a:r,n,i.x,i.y)&&(u=Math.abs(n-i.y)/(r-i.x),li(i,e)&&(u<c||u===c&&(i.x>s.x||i.x===s.x&&(d=s,p=i,0>o8(d.prev,d,p.prev)&&0>o8(p.next,d,d.next))))&&(s=i,c=u)),i=i.next}while(i!==o)return s}(e,t)){let i=lr(t,e);o2(t,t.next),o2(i,i.next)}})(h[n],i),i=o2(i,i.next);return i}(e,t,d,i)),e.length>80*i){r=a=e[0],n=s=e[1];for(let t=i;t<u;t+=i)o=e[t],l=e[t+1],o<r&&(r=o),l<n&&(n=l),o>a&&(a=o),l>s&&(s=l);h=0!==(h=Math.max(a-r,s-n))?1/h:0}return function e(t,i,r,n,a,s,o){if(!t)return;!o&&s&&function(e,t,i,r){let n=e;do null===n.z&&(n.z=o5(n.x,n.y,t,i,r)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==e)n.prevZ.nextZ=null,n.prevZ=null,function(e){let t,i,r,n,a,s,o,l,h=1;do{for(i=e,e=null,a=null,s=0;i;){for(s++,r=i,o=0,t=0;t<h&&(o++,r=r.nextZ);t++);for(l=h;o>0||l>0&&r;)0!==o&&(0===l||!r||i.z<=r.z)?(n=i,i=i.nextZ,o--):(n=r,r=r.nextZ,l--),a?a.nextZ=n:e=n,n.prevZ=a,a=n;i=r}a.nextZ=null,h*=2}while(s>1)}(n)}(t,n,a,s);let l=t,h,c;for(;t.prev!==t.next;){if(h=t.prev,c=t.next,s?function(e,t,i,r){let n=e.prev,a=e.next;if(o8(n,e,a)>=0)return!1;let s=n.x<e.x?n.x<a.x?n.x:a.x:e.x<a.x?e.x:a.x,o=n.y<e.y?n.y<a.y?n.y:a.y:e.y<a.y?e.y:a.y,l=n.x>e.x?n.x>a.x?n.x:a.x:e.x>a.x?e.x:a.x,h=n.y>e.y?n.y>a.y?n.y:a.y:e.y>a.y?e.y:a.y,c=o5(s,o,t,i,r),u=o5(l,h,t,i,r),d=e.prevZ,p=e.nextZ;for(;d&&d.z>=c&&p&&p.z<=u;){if(d!==e.prev&&d!==e.next&&o6(n.x,n.y,e.x,e.y,a.x,a.y,d.x,d.y)&&o8(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&o6(n.x,n.y,e.x,e.y,a.x,a.y,p.x,p.y)&&o8(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=c;){if(d!==e.prev&&d!==e.next&&o6(n.x,n.y,e.x,e.y,a.x,a.y,d.x,d.y)&&o8(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=u;){if(p!==e.prev&&p!==e.next&&o6(n.x,n.y,e.x,e.y,a.x,a.y,p.x,p.y)&&o8(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}(t,n,a,s):function(e){let t=e.prev,i=e.next;if(o8(t,e,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(o6(t.x,t.y,e.x,e.y,i.x,i.y,r.x,r.y)&&o8(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}(t)){i.push(h.i/r),i.push(t.i/r),i.push(c.i/r),la(t),t=c.next,l=c.next;continue}if((t=c)===l){o?1===o?e(t=function(e,t,i){let r=e;do{let n=r.prev,a=r.next.next;!o7(n,a)&&o9(n,r,r.next,a)&&li(n,a)&&li(a,n)&&(t.push(n.i/i),t.push(r.i/i),t.push(a.i/i),la(r),la(r.next),r=e=a),r=r.next}while(r!==e)return o2(r)}(o2(t),i,r),i,r,n,a,s,2):2===o&&function(t,i,r,n,a,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){var l,h;if(o.i!==t.i&&(l=o,h=t,l.next.i!==h.i&&l.prev.i!==h.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&o9(i,i.next,e,t))return!0;i=i.next}while(i!==e)return!1}(l,h)&&(li(l,h)&&li(h,l)&&function(e,t){let i=e,r=!1,n=(e.x+t.x)/2,a=(e.y+t.y)/2;do i.y>a!=i.next.y>a&&i.next.y!==i.y&&n<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next;while(i!==e)return r}(l,h)&&(o8(l.prev,l,h.prev)||o8(l,h.prev,h))||o7(l,h)&&o8(l.prev,l,l.next)>0&&o8(h.prev,h,h.next)>0))){let l=lr(o,t);o=o2(o,o.next),l=o2(l,l.next),e(o,i,r,n,a,s),e(l,i,r,n,a,s);return}t=t.next}o=o.next}while(o!==t)}(t,i,r,n,a,s):e(o2(t),i,r,n,a,s,1);break}}}(d,p,i,r,n,h),p};function o3(e,t,i,r,n){let a,s;if(n===function(e,t,i,r){let n=0;for(let a=t,s=i-r;a<i;a+=r)n+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return n}(e,t,i,r)>0)for(a=t;a<i;a+=r)s=ln(a,e[a],e[a+1],s);else for(a=i-r;a>=t;a-=r)s=ln(a,e[a],e[a+1],s);return s&&o7(s,s.next)&&(la(s),s=s.next),s}function o2(e,t){if(!e)return e;t||(t=e);let i=e,r;do if(r=!1,!i.steiner&&(o7(i,i.next)||0===o8(i.prev,i,i.next))){if(la(i),(i=t=i.prev)===i.next)break;r=!0}else i=i.next;while(r||i!==t)return t}function o4(e,t){return e.x-t.x}function o5(e,t,i,r,n){return(e=((e=((e=((e=((e=32767*(e-i)*n)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-r)*n)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function o6(e,t,i,r,n,a,s,o){return(n-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(r-o)-(i-s)*(t-o)>=0&&(i-s)*(a-o)-(n-s)*(r-o)>=0}function o8(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function o7(e,t){return e.x===t.x&&e.y===t.y}function o9(e,t,i,r){let n=lt(o8(e,t,i)),a=lt(o8(e,t,r)),s=lt(o8(i,r,e)),o=lt(o8(i,r,t));return!!(n!==a&&s!==o||0===n&&le(e,i,t)||0===a&&le(e,r,t)||0===s&&le(i,e,r)||0===o&&le(i,t,r))}function le(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function lt(e){return e>0?1:e<0?-1:0}function li(e,t){return 0>o8(e.prev,e,e.next)?o8(e,t,e.next)>=0&&o8(e,e.prev,t)>=0:0>o8(e,t,e.prev)||0>o8(e,e.next,t)}function lr(e,t){let i=new ls(e.i,e.x,e.y),r=new ls(t.i,t.x,t.y),n=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=n,n.prev=i,r.next=i,i.prev=r,a.next=r,r.prev=a,r}function ln(e,t,i,r){let n=new ls(e,t,i);return r?(n.next=r.next,n.prev=r,r.next.prev=n,r.next=n):(n.prev=n,n.next=n),n}function la(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ls(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lo{static area(e){let t=e.length,i=0;for(let r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return .5*i}static isClockWise(e){return 0>lo.area(e)}static triangulateShape(e,t){let i=[],r=[],n=[];ll(e),lh(i,e);let a=e.length;t.forEach(ll);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,lh(i,t[e]);let s=o1(i,r);for(let e=0;e<s.length;e+=3)n.push(s.slice(e,e+3));return n}}function ll(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function lh(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class lc extends nb{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,r=[],n=[];for(let a=0,s=e.length;a<s;a++)!function(e){let a,s,o,l;let h=[],c=void 0!==t.curveSegments?t.curveSegments:12,u=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:100,p=void 0===t.bevelEnabled||t.bevelEnabled,m=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:m-2,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3,y=t.extrudePath,x=void 0!==t.UVGenerator?t.UVGenerator:lu;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=t.amount);let _,b=!1;y&&(_=y.getSpacedPoints(u),b=!0,p=!1,a=y.computeFrenetFrames(u,!1),s=new iW,o=new iW,l=new iW),p||(v=0,m=0,f=0,g=0);let w=e.extractPoints(c),M=w.shape,S=w.holes;if(!lo.isClockWise(M)){M=M.reverse();for(let e=0,t=S.length;e<t;e++){let t=S[e];lo.isClockWise(t)&&(S[e]=t.reverse())}}let T=lo.triangulateShape(M,S),E=M;for(let e=0,t=S.length;e<t;e++){let t=S[e];M=M.concat(t)}function A(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}let L=M.length,R=T.length;function C(e,t,i){let r,n,a;let s=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,m=t.y+s/u,f=((i.x-h/d-p)*h-(i.y+l/d-m)*l)/(s*h-o*l),g=(r=p+s*f-e.x)*r+(n=m+o*f-e.y)*n;if(g<=2)return new iN(r,n);a=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),e?(r=-o,n=s,a=Math.sqrt(c)):(r=s,n=o,a=Math.sqrt(c/2))}return new iN(r/a,n/a)}let P=[];for(let e=0,t=E.length,i=t-1,r=e+1;e<t;e++,i++,r++)i===t&&(i=0),r===t&&(r=0),P[e]=C(E[e],E[i],E[r]);let I=[],D,N=P.concat();for(let e=0,t=S.length;e<t;e++){let t=S[e];D=[];for(let e=0,i=t.length,r=i-1,n=e+1;e<i;e++,r++,n++)r===i&&(r=0),n===i&&(n=0),D[e]=C(t[e],t[r],t[n]);I.push(D),N=N.concat(D)}for(let e=0;e<v;e++){let t=e/v,i=m*Math.cos(t*Math.PI/2),r=f*Math.sin(t*Math.PI/2)+g;for(let e=0,t=E.length;e<t;e++){let t=A(E[e],P[e],r);F(t.x,t.y,-i)}for(let e=0,t=S.length;e<t;e++){let t=S[e];D=I[e];for(let e=0,n=t.length;e<n;e++){let n=A(t[e],D[e],r);F(n.x,n.y,-i)}}}let B=f+g;for(let e=0;e<L;e++){let t=p?A(M[e],N[e],B):M[e];b?(o.copy(a.normals[0]).multiplyScalar(t.x),s.copy(a.binormals[0]).multiplyScalar(t.y),l.copy(_[0]).add(o).add(s),F(l.x,l.y,l.z)):F(t.x,t.y,0)}for(let e=1;e<=u;e++)for(let t=0;t<L;t++){let i=p?A(M[t],N[t],B):M[t];b?(o.copy(a.normals[e]).multiplyScalar(i.x),s.copy(a.binormals[e]).multiplyScalar(i.y),l.copy(_[e]).add(o).add(s),F(l.x,l.y,l.z)):F(i.x,i.y,d/u*e)}for(let e=v-1;e>=0;e--){let t=e/v,i=m*Math.cos(t*Math.PI/2),r=f*Math.sin(t*Math.PI/2)+g;for(let e=0,t=E.length;e<t;e++){let t=A(E[e],P[e],r);F(t.x,t.y,d+i)}for(let e=0,t=S.length;e<t;e++){let t=S[e];D=I[e];for(let e=0,n=t.length;e<n;e++){let n=A(t[e],D[e],r);b?F(n.x,n.y+_[u-1].y,_[u-1].x+i):F(n.x,n.y,d+i)}}}function z(e,t){let n=e.length;for(;--n>=0;){let a=n,s=n-1;s<0&&(s=e.length-1);for(let e=0,n=u+2*v;e<n;e++){let n=L*e,o=L*(e+1);!function(e,t,n,a){H(e),H(t),H(a),H(t),H(n),H(a);let s=r.length/3,o=x.generateSideWallUV(i,r,s-6,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[3]),U(o[1]),U(o[2]),U(o[3])}(t+a+n,t+s+n,t+s+o,t+a+o)}}}function F(e,t,i){h.push(e),h.push(t),h.push(i)}function O(e,t,n){H(e),H(t),H(n);let a=r.length/3,s=x.generateTopUV(i,r,a-3,a-2,a-1);U(s[0]),U(s[1]),U(s[2])}function H(e){r.push(h[3*e+0]),r.push(h[3*e+1]),r.push(h[3*e+2])}function U(e){n.push(e.x),n.push(e.y)}(function(){let e=r.length/3;if(p){let e=0*L;for(let t=0;t<R;t++){let i=T[t];O(i[2]+e,i[1]+e,i[0]+e)}e=L*(u+2*v);for(let t=0;t<R;t++){let i=T[t];O(i[0]+e,i[1]+e,i[2]+e)}}else{for(let e=0;e<R;e++){let t=T[e];O(t[2],t[1],t[0])}for(let e=0;e<R;e++){let t=T[e];O(t[0]+L*u,t[1]+L*u,t[2]+L*u)}}i.addGroup(e,r.length/3-e,0)})(),function(){let e=r.length/3,t=0;z(E,0),t+=E.length;for(let e=0,i=S.length;e<i;e++){let i=S[e];z(i,t),t+=i.length}i.addGroup(e,r.length/3-e,1)}()}(e[a]);this.setAttribute("position",new nh(r,3)),this.setAttribute("uv",new nh(n,2)),this.computeVertexNormals()}toJSON(){let e=nb.prototype.toJSON.call(this);return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){let r=e[t];i.shapes.push(r.uuid)}else i.shapes.push(e.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,e)}}const lu={generateTopUV:function(e,t,i,r,n){let a=t[3*i],s=t[3*i+1],o=t[3*r],l=t[3*r+1],h=t[3*n],c=t[3*n+1];return[new iN(a,s),new iN(o,l),new iN(h,c)]},generateSideWallUV:function(e,t,i,r,n,a){let s=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*r],c=t[3*r+1],u=t[3*r+2],d=t[3*n],p=t[3*n+1],m=t[3*n+2],f=t[3*a],g=t[3*a+1],v=t[3*a+2];return .01>Math.abs(o-c)?[new iN(s,1-l),new iN(h,1-u),new iN(d,1-m),new iN(f,1-v)]:[new iN(o,1-l),new iN(c,1-u),new iN(p,1-m),new iN(g,1-v)]}};class ld extends oY{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class lp extends nb{constructor(e,t=12,i=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=iA(r,0,2*Math.PI);let n=[],a=[],s=[],o=1/t,l=new iW,h=new iN;for(let n=0;n<=t;n++){let c=i+n*o*r,u=Math.sin(c),d=Math.cos(c);for(let i=0;i<=e.length-1;i++)l.x=e[i].x*u,l.y=e[i].y,l.z=e[i].x*d,a.push(l.x,l.y,l.z),h.x=n/t,h.y=i/(e.length-1),s.push(h.x,h.y)}for(let i=0;i<t;i++)for(let t=0;t<e.length-1;t++){let r=t+i*e.length,a=r+e.length,s=r+e.length+1,o=r+1;n.push(r,a,o),n.push(a,s,o)}if(this.setIndex(n),this.setAttribute("position",new nh(a,3)),this.setAttribute("uv",new nh(s,2)),this.computeVertexNormals(),r===2*Math.PI){let i=this.attributes.normal.array,r=new iW,n=new iW,a=new iW,s=t*e.length*3;for(let t=0,o=0;t<e.length;t++,o+=3)r.x=i[o+0],r.y=i[o+1],r.z=i[o+2],n.x=i[s+o+0],n.y=i[s+o+1],n.z=i[s+o+2],a.addVectors(r,n).normalize(),i[o+0]=i[s+o+0]=a.x,i[o+1]=i[s+o+1]=a.y,i[o+2]=i[s+o+2]=a.z}}}class lm extends oY{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}class lf extends nb{constructor(e,t,i){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:i};let r=[],n=[],a=[],s=[],o=new iW,l=new iW,h=new iW,c=new iW,u=new iW;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");let d=t+1;for(let r=0;r<=i;r++){let d=r/i;for(let i=0;i<=t;i++){let r=i/t;e(r,d,l),n.push(l.x,l.y,l.z),r-1e-5>=0?(e(r-1e-5,d,h),c.subVectors(l,h)):(e(r+1e-5,d,h),c.subVectors(h,l)),d-1e-5>=0?(e(r,d-1e-5,h),u.subVectors(l,h)):(e(r,d+1e-5,h),u.subVectors(h,l)),o.crossVectors(c,u).normalize(),a.push(o.x,o.y,o.z),s.push(r,d)}}for(let e=0;e<i;e++)for(let i=0;i<t;i++){let t=e*d+i,n=e*d+i+1,a=(e+1)*d+i+1,s=(e+1)*d+i;r.push(t,n,s),r.push(n,a,s)}this.setIndex(r),this.setAttribute("position",new nh(n,3)),this.setAttribute("normal",new nh(a,3)),this.setAttribute("uv",new nh(s,2))}}class lg extends nb{constructor(e=.5,t=1,i=8,r=1,n=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:a},i=Math.max(3,i);let s=[],o=[],l=[],h=[],c=e,u=(t-e)/(r=Math.max(1,r)),d=new iW,p=new iN;for(let e=0;e<=r;e++){for(let e=0;e<=i;e++){let r=n+e/i*a;d.x=c*Math.cos(r),d.y=c*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}c+=u}for(let e=0;e<r;e++){let t=e*(i+1);for(let e=0;e<i;e++){let r=e+t,n=r+i+1,a=r+i+2,o=r+1;s.push(r,n,o),s.push(n,a,o)}}this.setIndex(s),this.setAttribute("position",new nh(o,3)),this.setAttribute("normal",new nh(l,3)),this.setAttribute("uv",new nh(h,2))}}class lv extends nb{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],r=[],n=[],a=[],s=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(s,o,t),s+=o,o=0;function l(e){let s=r.length/3,l=e.extractPoints(t),h=l.shape,c=l.holes;!1===lo.isClockWise(h)&&(h=h.reverse());for(let e=0,t=c.length;e<t;e++){let t=c[e];!0===lo.isClockWise(t)&&(c[e]=t.reverse())}let u=lo.triangulateShape(h,c);for(let e=0,t=c.length;e<t;e++){let t=c[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){let t=h[e];r.push(t.x,t.y,0),n.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){let t=u[e],r=t[0]+s,n=t[1]+s,a=t[2]+s;i.push(r,n,a),o+=3}}this.setIndex(i),this.setAttribute("position",new nh(r,3)),this.setAttribute("normal",new nh(n,3)),this.setAttribute("uv",new nh(a,2))}toJSON(){let e=nb.prototype.toJSON.call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){let r=e[i];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}class ly extends nb{constructor(e=1,t=8,i=6,r=0,n=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:n,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(a+s,Math.PI),l=0,h=[],c=new iW,u=new iW,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){let g=[],v=d/i,y=0;0==d&&0==a?y=.5/t:d==i&&o==Math.PI&&(y=-.5/t);for(let i=0;i<=t;i++){let o=i/t;c.x=-e*Math.cos(r+o*n)*Math.sin(a+v*s),c.y=e*Math.cos(a+v*s),c.z=e*Math.sin(r+o*n)*Math.sin(a+v*s),p.push(c.x,c.y,c.z),u.copy(c).normalize(),m.push(u.x,u.y,u.z),f.push(o+y,1-v),g.push(l++)}h.push(g)}for(let e=0;e<i;e++)for(let r=0;r<t;r++){let t=h[e][r+1],n=h[e][r],s=h[e+1][r],l=h[e+1][r+1];(0!==e||a>0)&&d.push(t,n,l),(e!==i-1||o<Math.PI)&&d.push(n,s,l)}this.setIndex(d),this.setAttribute("position",new nh(p,3)),this.setAttribute("normal",new nh(m,3)),this.setAttribute("uv",new nh(f,2))}}class lx extends oY{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class l_ extends lc{constructor(e,t={}){let i=t.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new nb;let r=i.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class lb extends nb{constructor(e=1,t=.4,i=8,r=6,n=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:n},i=Math.floor(i),r=Math.floor(r);let a=[],s=[],o=[],l=[],h=new iW,c=new iW,u=new iW;for(let a=0;a<=i;a++)for(let d=0;d<=r;d++){let p=d/r*n,m=a/i*Math.PI*2;c.x=(e+t*Math.cos(m))*Math.cos(p),c.y=(e+t*Math.cos(m))*Math.sin(p),c.z=t*Math.sin(m),s.push(c.x,c.y,c.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),u.subVectors(c,h).normalize(),o.push(u.x,u.y,u.z),l.push(d/r),l.push(a/i)}for(let e=1;e<=i;e++)for(let t=1;t<=r;t++){let i=(r+1)*e+t-1,n=(r+1)*(e-1)+t-1,s=(r+1)*(e-1)+t,o=(r+1)*e+t;a.push(i,n,o),a.push(n,s,o)}this.setIndex(a),this.setAttribute("position",new nh(s,3)),this.setAttribute("normal",new nh(o,3)),this.setAttribute("uv",new nh(l,2))}}class lw extends nb{constructor(e=1,t=.4,i=64,r=8,n=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:n,q:a},i=Math.floor(i),r=Math.floor(r);let s=[],o=[],l=[],h=[],c=new iW,u=new iW,d=new iW,p=new iW,m=new iW,f=new iW,g=new iW;for(let s=0;s<=i;++s){let y=s/i*n*Math.PI*2;v(y,n,a,e,d),v(y+.01,n,a,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=r;++e){let n=e/r*Math.PI*2,a=-t*Math.cos(n),p=t*Math.sin(n);c.x=d.x+(a*g.x+p*m.x),c.y=d.y+(a*g.y+p*m.y),c.z=d.z+(a*g.z+p*m.z),o.push(c.x,c.y,c.z),u.subVectors(c,d).normalize(),l.push(u.x,u.y,u.z),h.push(s/i),h.push(e/r)}}for(let e=1;e<=i;e++)for(let t=1;t<=r;t++){let i=(r+1)*(e-1)+(t-1),n=(r+1)*e+(t-1),a=(r+1)*e+t,o=(r+1)*(e-1)+t;s.push(i,n,o),s.push(n,a,o)}function v(e,t,i,r,n){let a=Math.cos(e),s=Math.sin(e),o=i/t*e,l=Math.cos(o);n.x=r*(2+l)*.5*a,n.y=r*(2+l)*s*.5,n.z=r*Math.sin(o)*.5}this.setIndex(s),this.setAttribute("position",new nh(o,3)),this.setAttribute("normal",new nh(l,3)),this.setAttribute("uv",new nh(h,2))}}class lM extends nb{constructor(e,t=64,i=1,r=8,n=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:n};let a=e.computeFrenetFrames(t,n);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new iW,o=new iW,l=new iN,h=new iW,c=[],u=[],d=[],p=[];function m(n){h=e.getPointAt(n/t,h);let l=a.normals[n],d=a.binormals[n];for(let e=0;e<=r;e++){let t=e/r*Math.PI*2,n=Math.sin(t),a=-Math.cos(t);o.x=a*l.x+n*d.x,o.y=a*l.y+n*d.y,o.z=a*l.z+n*d.z,o.normalize(),u.push(o.x,o.y,o.z),s.x=h.x+i*o.x,s.y=h.y+i*o.y,s.z=h.z+i*o.z,c.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)m(e);m(!1===n?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=r;i++)l.x=e/t,l.y=i/r,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=r;t++){let i=(r+1)*(e-1)+(t-1),n=(r+1)*e+(t-1),a=(r+1)*e+t,s=(r+1)*(e-1)+t;p.push(i,n,s),p.push(n,a,s)}}()})(),this.setIndex(p),this.setAttribute("position",new nh(c,3)),this.setAttribute("normal",new nh(u,3)),this.setAttribute("uv",new nh(d,2))}toJSON(){let e=nb.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class lS extends nb{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}let t=[],i=[0,0],r={},n=new iW;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let e=0,t=o.length;e<t;++e){let t=o[e],n=t.start,a=t.count;for(let e=n,t=n+a;e<t;e+=3)for(let t=0;t<3;t++){let n=s.getX(e+t),a=s.getX(e+(t+1)%3);i[0]=Math.min(n,a),i[1]=Math.max(n,a);let o=i[0]+","+i[1];void 0===r[o]&&(r[o]={index1:i[0],index2:i[1]})}}for(let e in r){let i=r[e];n.fromBufferAttribute(a,i.index1),t.push(n.x,n.y,n.z),n.fromBufferAttribute(a,i.index2),t.push(n.x,n.y,n.z)}}else{let i=e.attributes.position;for(let e=0,r=i.count/3;e<r;e++)for(let r=0;r<3;r++){let a=3*e+r;n.fromBufferAttribute(i,a),t.push(n.x,n.y,n.z);let s=3*e+(r+1)%3;n.fromBufferAttribute(i,s),t.push(n.x,n.y,n.z)}}this.setAttribute("position",new nh(t,3))}}var lT=Object.freeze({__proto__:null,BoxGeometry:nG,BoxBufferGeometry:nG,CircleGeometry:oj,CircleBufferGeometry:oj,ConeGeometry:oX,ConeBufferGeometry:oX,CylinderGeometry:oq,CylinderBufferGeometry:oq,DodecahedronGeometry:oZ,DodecahedronBufferGeometry:oZ,EdgesGeometry:o0,ExtrudeGeometry:lc,ExtrudeBufferGeometry:lc,IcosahedronGeometry:ld,IcosahedronBufferGeometry:ld,LatheGeometry:lp,LatheBufferGeometry:lp,OctahedronGeometry:lm,OctahedronBufferGeometry:lm,ParametricGeometry:lf,ParametricBufferGeometry:lf,PlaneGeometry:n2,PlaneBufferGeometry:n2,PolyhedronGeometry:oY,PolyhedronBufferGeometry:oY,RingGeometry:lg,RingBufferGeometry:lg,ShapeGeometry:lv,ShapeBufferGeometry:lv,SphereGeometry:ly,SphereBufferGeometry:ly,TetrahedronGeometry:lx,TetrahedronBufferGeometry:lx,TextGeometry:l_,TextBufferGeometry:l_,TorusGeometry:lb,TorusBufferGeometry:lb,TorusKnotGeometry:lw,TorusKnotBufferGeometry:lw,TubeGeometry:lM,TubeBufferGeometry:lM,WireframeGeometry:lS});class lE extends r${constructor(e){super(),this.type="ShadowMaterial",this.color=new r6(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}lE.prototype.isShadowMaterial=!0;class lA extends nj{constructor(e){super(e),this.type="RawShaderMaterial"}}lA.prototype.isRawShaderMaterial=!0;class lL extends r${constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new r6(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new r6(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t0,this.normalScale=new iN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}lL.prototype.isMeshStandardMaterial=!0;class lR extends lL{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new iN(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=iA(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new r6).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this}}lR.prototype.isMeshPhysicalMaterial=!0;class lC extends r${constructor(e){super(),this.type="MeshPhongMaterial",this.color=new r6(16777215),this.specular=new r6(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new r6(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t0,this.normalScale=new iN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}lC.prototype.isMeshPhongMaterial=!0;class lP extends r${constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new r6(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new r6(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t0,this.normalScale=new iN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}lP.prototype.isMeshToonMaterial=!0;class lI extends r${constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t0,this.normalScale=new iN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}lI.prototype.isMeshNormalMaterial=!0;class lD extends r${constructor(e){super(),this.type="MeshLambertMaterial",this.color=new r6(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new r6(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}lD.prototype.isMeshLambertMaterial=!0;class lN extends r${constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new r6(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t0,this.normalScale=new iN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}lN.prototype.isMeshMatcapMaterial=!0;class lB extends oM{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}lB.prototype.isLineDashedMaterial=!0;var lz=Object.freeze({__proto__:null,ShadowMaterial:lE,SpriteMaterial:s0,RawShaderMaterial:lA,ShaderMaterial:nj,PointsMaterial:oN,MeshPhysicalMaterial:lR,MeshStandardMaterial:lL,MeshPhongMaterial:lC,MeshToonMaterial:lP,MeshNormalMaterial:lI,MeshLambertMaterial:lD,MeshDepthMaterial:sN,MeshDistanceMaterial:sB,MeshBasicMaterial:r8,MeshMatcapMaterial:lN,LineDashedMaterial:lB,LineBasicMaterial:oM,Material:r$});const lF={arraySlice:function(e,t,i){return lF.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){let t=e.length,i=Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(t,i){return e[t]-e[i]}),i},sortedArray:function(e,t,i){let r=e.length,n=new e.constructor(r);for(let a=0,s=0;s!==r;++a){let r=i[a]*t;for(let i=0;i!==t;++i)n[s++]=e[r+i]}return n},flattenJSON:function(e,t,i,r){let n=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[n++];if(void 0===a)return;let s=a[r];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[r])&&(t.push(a.time),i.push.apply(i,s)),a=e[n++];while(void 0!==a)else if(void 0!==s.toArray)do void 0!==(s=a[r])&&(t.push(a.time),s.toArray(i,i.length)),a=e[n++];while(void 0!==a)else do void 0!==(s=a[r])&&(t.push(a.time),i.push(s)),a=e[n++];while(void 0!==a)}},subclip:function(e,t,i,r,n=30){let a=e.clone();a.name=t;let s=[];for(let e=0;e<a.tracks.length;++e){let t=a.tracks[e],o=t.getValueSize(),l=[],h=[];for(let e=0;e<t.times.length;++e){let a=t.times[e]*n;if(!(a<i)&&!(a>=r)){l.push(t.times[e]);for(let i=0;i<o;++i)h.push(t.values[e*o+i])}}0!==l.length&&(t.times=lF.convertArray(l,t.times.constructor),t.values=lF.convertArray(h,t.values.constructor),s.push(t))}a.tracks=s;let o=1/0;for(let e=0;e<a.tracks.length;++e)o>a.tracks[e].times[0]&&(o=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,i=e,r=30){r<=0&&(r=30);let n=i.tracks.length,a=t/r;for(let t=0;t<n;++t){let r;let n=i.tracks[t],s=n.ValueTypeName;if("bool"===s||"string"===s)continue;let o=e.tracks.find(function(e){return e.name===n.name&&e.ValueTypeName===s});if(void 0===o)continue;let l=0,h=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);let c=0,u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);let d=n.times.length-1;if(a<=n.times[0]){let e=l,t=h-l;r=lF.arraySlice(n.values,e,t)}else if(a>=n.times[d]){let e=d*h+l,t=e+h-l;r=lF.arraySlice(n.values,e,t)}else{let e=n.createInterpolant(),t=l,i=h-l;e.evaluate(a),r=lF.arraySlice(e.resultBuffer,t,i)}"quaternion"===s&&new iV().fromArray(r).normalize().conjugate().toArray(r);let p=o.times.length;for(let e=0;e<p;++e){let t=e*u+c;if("quaternion"===s)iV.multiplyQuaternionsFlat(o.values,t,r,0,o.values,t);else{let e=u-2*c;for(let i=0;i<e;++i)o.values[t+i]-=r[i]}}}return e.blendMode=tU,e}};class lO{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,r=t[i],n=t[i-1];e:{t:{let a;i:{r:if(!(e<r)){for(let a=i+2;;){if(void 0===r){if(e<n)break r;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,n)}if(i===a)break;if(n=r,e<(r=t[++i]))break t}a=t.length;break i}if(!(e>=n)){let s=t[1];e<s&&(i=2,n=s);for(let a=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===a)break;if(r=n,e>=(n=t[--i-1]))break t}a=i,i=0;break i}break e}for(;i<a;){let r=i+a>>>1;e<t[r]?a=r:i=r+1}if(r=t[i],void 0===(n=t[i-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,n,e)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=e*r;for(let e=0;e!==r;++e)t[e]=i[n+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}lO.prototype.beforeStart_=lO.prototype.copySampleValue_,lO.prototype.afterEnd_=lO.prototype.copySampleValue_;class lH extends lO{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tz,endingEnd:tz}}intervalChanged_(e,t,i){let r=this.parameterPositions,n=e-2,a=e+1,s=r[n],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case tF:n=e,s=2*t-i;break;case tO:n=r.length-2,s=t+r[n]-r[n+1];break;default:n=e,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case tF:a=e,o=2*i-t;break;case tO:a=1,o=i+r[1]-r[0];break;default:a=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-i),this._offsetPrev=n*h,this._offsetNext=a*h}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-t)/(r-t),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==s;++e)n[e]=g*a[h+e]+v*a[l+e]+y*a[o+e]+x*a[c+e];return n}}class lU extends lO{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(i-t)/(r-t),c=1-h;for(let e=0;e!==s;++e)n[e]=a[l+e]*c+a[o+e]*h;return n}}class lG extends lO{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class lk{constructor(e,t,i,r){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=lF.convertArray(t,this.TimeBufferType),this.values=lF.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){let t;let i=e.constructor;if(i.toJSON!==this.toJSON)t=i.toJSON(e);else{t={name:e.name,times:lF.convertArray(e.times,Array),values:lF.convertArray(e.values,Array)};let i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new lG(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new lU(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new lH(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case tD:t=this.InterpolantFactoryMethodDiscrete;break;case tN:t=this.InterpolantFactoryMethodLinear;break;case tB:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return tD;case this.InterpolantFactoryMethodLinear:return tN;case this.InterpolantFactoryMethodSmooth:return tB}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){let i=this.times,r=i.length,n=0,a=r-1;for(;n!==r&&i[n]<e;)++n;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==n||a!==r){n>=a&&(n=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=lF.arraySlice(i,n,a),this.values=lF.arraySlice(this.values,n*e,a*e)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,r=this.values,n=i.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==n;t++){let r=i[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&lF.isTypedArray(r))for(let t=0,i=r.length;t!==i;++t){let i=r[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e}optimize(){let e=lF.arraySlice(this.times),t=lF.arraySlice(this.values),i=this.getValueSize(),r=this.getInterpolation()===tB,n=e.length-1,a=1;for(let s=1;s<n;++s){let n=!1,o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0])){if(r)n=!0;else{let e=s*i,r=e-i,a=e+i;for(let s=0;s!==i;++s){let i=t[e+s];if(i!==t[r+s]||i!==t[a+s]){n=!0;break}}}}if(n){if(s!==a){e[a]=e[s];let r=s*i,n=a*i;for(let e=0;e!==i;++e)t[n+e]=t[r+e]}++a}}if(n>0){e[a]=e[n];for(let e=n*i,r=a*i,s=0;s!==i;++s)t[r+s]=t[e+s];++a}return a!==e.length?(this.times=lF.arraySlice(e,0,a),this.values=lF.arraySlice(t,0,a*i)):(this.times=e,this.values=t),this}clone(){let e=lF.arraySlice(this.times,0),t=lF.arraySlice(this.values,0),i=new this.constructor(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}lk.prototype.TimeBufferType=Float32Array,lk.prototype.ValueBufferType=Float32Array,lk.prototype.DefaultInterpolation=tN;class lV extends lk{}lV.prototype.ValueTypeName="bool",lV.prototype.ValueBufferType=Array,lV.prototype.DefaultInterpolation=tD,lV.prototype.InterpolantFactoryMethodLinear=void 0,lV.prototype.InterpolantFactoryMethodSmooth=void 0;class lW extends lk{}lW.prototype.ValueTypeName="color";class lj extends lk{}lj.prototype.ValueTypeName="number";class lq extends lO{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-t)/(r-t),l=e*s;for(let e=l+s;l!==e;l+=4)iV.slerpFlat(n,0,a,l-s,a,l,o);return n}}class lX extends lk{InterpolantFactoryMethodLinear(e){return new lq(this.times,this.values,this.getValueSize(),e)}}lX.prototype.ValueTypeName="quaternion",lX.prototype.DefaultInterpolation=tN,lX.prototype.InterpolantFactoryMethodSmooth=void 0;class lY extends lk{}lY.prototype.ValueTypeName="string",lY.prototype.ValueBufferType=Array,lY.prototype.DefaultInterpolation=tD,lY.prototype.InterpolantFactoryMethodLinear=void 0,lY.prototype.InterpolantFactoryMethodSmooth=void 0;class lZ extends lk{}lZ.prototype.ValueTypeName="vector";class lJ{constructor(e,t=-1,i,r=tH){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=iE(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,r=1/(e.fps||1);for(let e=0,n=i.length;e!==n;++e)t.push((function(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return lj;case"vector":case"vector2":case"vector3":case"vector4":return lZ;case"color":return lW;case"quaternion":return lX;case"bool":case"boolean":return lV;case"string":return lY}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let t=[],i=[];lF.flattenJSON(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)})(i[e]).scale(r));let n=new this(e.name,e.duration,t,e.blendMode);return n.uuid=e.uuid,n}static toJSON(e){let t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,r=i.length;e!==r;++e)t.push(lk.toJSON(i[e]));return r}static CreateFromMorphTargetSequence(e,t,i,r){let n=t.length,a=[];for(let e=0;e<n;e++){let s=[],o=[];s.push((e+n-1)%n,e,(e+1)%n),o.push(0,1,0);let l=lF.getKeyframeOrder(s);s=lF.sortedArray(s,1,l),o=lF.sortedArray(o,1,l),r||0!==s[0]||(s.push(n),o.push(o[0])),a.push(new lj(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;Array.isArray(e)||(i=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<i.length;e++)if(i[e].name===t)return i[e];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let r={},n=/^([\w-]*?)([\d]+)$/;for(let t=0,i=e.length;t<i;t++){let i=e[t],a=i.name.match(n);if(a&&a.length>1){let e=a[1],t=r[e];t||(r[e]=t=[]),t.push(i)}}let a=[];for(let e in r)a.push(this.CreateFromMorphTargetSequence(e,r[e],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,r,n){if(0!==i.length){let a=[],s=[];lF.flattenJSON(i,a,s,r),0!==a.length&&n.push(new e(t,a,s))}},r=[],n=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let e=0;e<l.length;e++){let n=l[e].keys;if(n&&0!==n.length){if(n[0].morphTargets){let e;let t={};for(e=0;e<n.length;e++)if(n[e].morphTargets)for(let i=0;i<n[e].morphTargets.length;i++)t[n[e].morphTargets[i]]=-1;for(let i in t){let t=[],a=[];for(let r=0;r!==n[e].morphTargets.length;++r){let r=n[e];t.push(r.time),a.push(r.morphTarget===i?1:0)}r.push(new lj(".morphTargetInfluence["+i+"]",t,a))}o=t.length*(a||1)}else{let a=".bones["+t[e].name+"]";i(lZ,a+".position",n,"pos",r),i(lX,a+".quaternion",n,"rot",r),i(lZ,a+".scale",n,"scl",r)}}}return 0===r.length?null:new this(n,o,r,s)}resetDuration(){let e=this.tracks,t=0;for(let i=0,r=e.length;i!==r;++i){let e=this.tracks[i];t=Math.max(t,e.times[e.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const lQ={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class lK{constructor(e,t,i){let r;let n=this,a=!1,s=0,o=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){o++,!1===a&&void 0!==n.onStart&&n.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==n.onProgress&&n.onProgress(e,s,o),s===o&&(a=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let i=l[t],r=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return r}return null}}}const l$=new lK;class l0{constructor(e){this.manager=void 0!==e?e:l$,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(r,n){i.load(e,r,t,n)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const l1={};class l3 extends l0{constructor(e){super(e)}load(e,t,i,r){let n;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let a=this,s=lQ.get(e);if(void 0!==s)return a.manager.itemStart(e),setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s;if(void 0!==l1[e]){l1[e].push({onLoad:t,onProgress:i,onError:r});return}let o=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){let i=o[1],n=!!o[2],s=o[3];s=decodeURIComponent(s),n&&(s=atob(s));try{let r;let n=(this.responseType||"").toLowerCase();switch(n){case"arraybuffer":case"blob":let o=new Uint8Array(s.length);for(let e=0;e<s.length;e++)o[e]=s.charCodeAt(e);r="blob"===n?new Blob([o.buffer],{type:i}):o.buffer;break;case"document":r=new DOMParser().parseFromString(s,i);break;case"json":r=JSON.parse(s);break;default:r=s}setTimeout(function(){t&&t(r),a.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){r&&r(t),a.manager.itemError(e),a.manager.itemEnd(e)},0)}}else{for(let s in l1[e]=[],l1[e].push({onLoad:t,onProgress:i,onError:r}),(n=new XMLHttpRequest).open("GET",e,!0),n.addEventListener("load",function(t){let i=this.response,r=l1[e];if(delete l1[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),lQ.add(e,i);for(let e=0,t=r.length;e<t;e++){let t=r[e];t.onLoad&&t.onLoad(i)}a.manager.itemEnd(e)}else{for(let e=0,i=r.length;e<i;e++){let i=r[e];i.onError&&i.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)}},!1),n.addEventListener("progress",function(t){let i=l1[e];for(let e=0,r=i.length;e<r;e++){let r=i[e];r.onProgress&&r.onProgress(t)}},!1),n.addEventListener("error",function(t){let i=l1[e];delete l1[e];for(let e=0,r=i.length;e<r;e++){let r=i[e];r.onError&&r.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)},!1),n.addEventListener("abort",function(t){let i=l1[e];delete l1[e];for(let e=0,r=i.length;e<r;e++){let r=i[e];r.onError&&r.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)},!1),void 0!==this.responseType&&(n.responseType=this.responseType),void 0!==this.withCredentials&&(n.withCredentials=this.withCredentials),n.overrideMimeType&&n.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)n.setRequestHeader(s,this.requestHeader[s]);n.send(null)}return a.manager.itemStart(e),n}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class l2 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new l3(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)}parse(e){let t=[];for(let i=0;i<e.length;i++){let r=lJ.parse(e[i]);t.push(r)}return t}}class l4 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=[],s=new ok,o=new l3(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(n.withCredentials);let l=0;if(Array.isArray(e))for(let h=0,c=e.length;h<c;++h)!function(h){o.load(e[h],function(e){let i=n.parse(e,!0);a[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(s.minFilter=eM),s.image=a,s.format=i.format,s.needsUpdate=!0,t&&t(s))},i,r)}(h);else o.load(e,function(e){let i=n.parse(e,!0);if(i.isCubemap){let e=i.mipmaps.length/i.mipmapCount;for(let t=0;t<e;t++){a[t]={mipmaps:[]};for(let e=0;e<i.mipmapCount;e++)a[t].mipmaps.push(i.mipmaps[t*i.mipmapCount+e]),a[t].format=i.format,a[t].width=i.width,a[t].height=i.height}s.image=a}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=eM),s.format=i.format,s.needsUpdate=!0,t&&t(s)},i,r);return s}}class l5 extends l0{constructor(e){super(e)}load(e,t,i,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let n=this,a=lQ.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;let s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),lQ.add(e,this),t&&t(this),n.manager.itemEnd(e)}function l(t){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(e),s.src=e,s}}class l6 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=new nZ,a=new l5(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;for(let i=0;i<e.length;++i)!function(i){a.load(e[i],function(e){n.images[i]=e,6==++s&&(n.needsUpdate=!0,t&&t(n))},void 0,r)}(i);return n}}class l8 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new nQ,s=new l3(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(n.withCredentials),s.load(e,function(e){let i=n.parse(e);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:eg,a.wrapT=void 0!==i.wrapT?i.wrapT:eg,a.magFilter=void 0!==i.magFilter?i.magFilter:eM,a.minFilter=void 0!==i.minFilter?i.minFilter:eM,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=eE),1===i.mipmapCount&&(a.minFilter=eM),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,t&&t(a,i))},i,r),a}}class l7 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=new iO,a=new l5(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(i){n.image=i;let r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);n.format=r?eG:ek,n.needsUpdate=!0,void 0!==t&&t(n)},i,r),n}}class l9{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,r=this.getPoint(0),n=0;t.push(0);for(let a=1;a<=e;a++)t.push(n+=(i=this.getPoint(a/e)).distanceTo(r)),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i;let r=this.getLengths(),n=0,a=r.length;i=t||e*r[a-1];let s=0,o=a-1,l;for(;s<=o;)if((l=r[n=Math.floor(s+(o-s)/2)]-i)<0)s=n+1;else if(l>0)o=n-1;else{o=n;break}if(r[n=o]===i)return n/(a-1);let h=r[n],c=r[n+1];return(n+(i-h)/(c-h))/(a-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);let n=this.getPoint(i),a=this.getPoint(r),s=t||(n.isVector2?new iN:new iW);return s.copy(a).sub(n).normalize(),s}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new iW,r=[],n=[],a=[],s=new iW,o=new ru;for(let t=0;t<=e;t++){let i=t/e;r[t]=this.getTangentAt(i,new iW),r[t].normalize()}n[0]=new iW,a[0]=new iW;let l=Number.MAX_VALUE,h=Math.abs(r[0].x),c=Math.abs(r[0].y),u=Math.abs(r[0].z);h<=l&&(l=h,i.set(1,0,0)),c<=l&&(l=c,i.set(0,1,0)),u<=l&&i.set(0,0,1),s.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],s),a[0].crossVectors(r[0],n[0]);for(let t=1;t<=e;t++){if(n[t]=n[t-1].clone(),a[t]=a[t-1].clone(),s.crossVectors(r[t-1],r[t]),s.length()>Number.EPSILON){s.normalize();let e=Math.acos(iA(r[t-1].dot(r[t]),-1,1));n[t].applyMatrix4(o.makeRotationAxis(s,e))}a[t].crossVectors(r[t],n[t])}if(!0===t){let t=Math.acos(iA(n[0].dot(n[e]),-1,1));t/=e,r[0].dot(s.crossVectors(n[0],n[e]))>0&&(t=-t);for(let i=1;i<=e;i++)n[i].applyMatrix4(o.makeRotationAxis(r[i],t*i)),a[i].crossVectors(r[i],n[i])}return{tangents:r,normals:n,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class he extends l9{constructor(e=0,t=0,i=1,r=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let i=t||new iN,r=2*Math.PI,n=this.aEndAngle-this.aStartAngle,a=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=r;for(;n>r;)n-=r;n<Number.EPSILON&&(n=a?0:r),!0!==this.aClockwise||a||(n===r?n=-r:n-=r);let s=this.aStartAngle+e*n,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=o-this.aX,r=l-this.aY;o=i*e-r*t+this.aX,l=i*t+r*e+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}he.prototype.isEllipseCurve=!0;class ht extends he{constructor(e,t,i,r,n,a){super(e,t,i,i,r,n,a),this.type="ArcCurve"}}function hi(){let e=0,t=0,i=0,r=0;function n(n,a,s,o){e=n,t=s,i=-3*n+3*a-2*s-o,r=2*n-2*a+s+o}return{initCatmullRom:function(e,t,i,r,a){n(t,i,a*(i-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,i,r,a,s,o){let l=(t-e)/a-(i-e)/(a+s)+(i-t)/s,h=(i-t)/s-(r-t)/(s+o)+(r-i)/o;n(t,i,l*=s,h*=s)},calc:function(n){let a=n*n;return e+t*n+i*a+a*n*r}}}ht.prototype.isArcCurve=!0;const hr=new iW,hn=new hi,ha=new hi,hs=new hi;class ho extends l9{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new iW){let i,r;let n=this.points,a=n.length,s=(a-(this.closed?0:1))*e,o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:0===l&&o===a-1&&(o=a-2,l=1),this.closed||o>0?i=n[(o-1)%a]:(hr.subVectors(n[0],n[1]).add(n[0]),i=hr);let h=n[o%a],c=n[(o+1)%a];if(this.closed||o+2<a?r=n[(o+2)%a]:(hr.subVectors(n[a-1],n[a-2]).add(n[a-1]),r=hr),"centripetal"===this.curveType||"chordal"===this.curveType){let e="chordal"===this.curveType?.5:.25,t=Math.pow(i.distanceToSquared(h),e),n=Math.pow(h.distanceToSquared(c),e),a=Math.pow(c.distanceToSquared(r),e);n<1e-4&&(n=1),t<1e-4&&(t=n),a<1e-4&&(a=n),hn.initNonuniformCatmullRom(i.x,h.x,c.x,r.x,t,n,a),ha.initNonuniformCatmullRom(i.y,h.y,c.y,r.y,t,n,a),hs.initNonuniformCatmullRom(i.z,h.z,c.z,r.z,t,n,a)}else"catmullrom"===this.curveType&&(hn.initCatmullRom(i.x,h.x,c.x,r.x,this.tension),ha.initCatmullRom(i.y,h.y,c.y,r.y,this.tension),hs.initCatmullRom(i.z,h.z,c.z,r.z,this.tension));return t.set(hn.calc(l),ha.calc(l),hs.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new iW().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function hl(e,t,i,r,n){let a=(r-t)*.5,s=(n-i)*.5,o=e*e;return e*o*(2*i-2*r+a+s)+(-3*i+3*r-2*a-s)*o+a*e+i}function hh(e,t,i,r){return function(e,t){let i=1-e;return i*i*t}(e,t)+2*(1-e)*e*i+e*e*r}function hc(e,t,i,r,n){return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+3*(1-e)*e*e*r+e*e*e*n}ho.prototype.isCatmullRomCurve3=!0;class hu extends l9{constructor(e=new iN,t=new iN,i=new iN,r=new iN){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new iN){let i=this.v0,r=this.v1,n=this.v2,a=this.v3;return t.set(hc(e,i.x,r.x,n.x,a.x),hc(e,i.y,r.y,n.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}hu.prototype.isCubicBezierCurve=!0;class hd extends l9{constructor(e=new iW,t=new iW,i=new iW,r=new iW){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new iW){let i=this.v0,r=this.v1,n=this.v2,a=this.v3;return t.set(hc(e,i.x,r.x,n.x,a.x),hc(e,i.y,r.y,n.y,a.y),hc(e,i.z,r.z,n.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}hd.prototype.isCubicBezierCurve3=!0;class hp extends l9{constructor(e=new iN,t=new iN){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new iN){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let i=t||new iN;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}hp.prototype.isLineCurve=!0;class hm extends l9{constructor(e=new iW,t=new iW){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new iW){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hf extends l9{constructor(e=new iN,t=new iN,i=new iN){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iN){let i=this.v0,r=this.v1,n=this.v2;return t.set(hh(e,i.x,r.x,n.x),hh(e,i.y,r.y,n.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}hf.prototype.isQuadraticBezierCurve=!0;class hg extends l9{constructor(e=new iW,t=new iW,i=new iW){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iW){let i=this.v0,r=this.v1,n=this.v2;return t.set(hh(e,i.x,r.x,n.x),hh(e,i.y,r.y,n.y),hh(e,i.z,r.z,n.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}hg.prototype.isQuadraticBezierCurve3=!0;class hv extends l9{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new iN){let i=this.points,r=(i.length-1)*e,n=Math.floor(r),a=r-n,s=i[0===n?n:n-1],o=i[n],l=i[n>i.length-2?i.length-1:n+1],h=i[n>i.length-3?i.length-1:n+2];return t.set(hl(a,s.x,o.x,l.x,h.x),hl(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new iN().fromArray(i))}return this}}hv.prototype.isSplineCurve=!0;var hy=Object.freeze({__proto__:null,ArcCurve:ht,CatmullRomCurve3:ho,CubicBezierCurve:hu,CubicBezierCurve3:hd,EllipseCurve:he,LineCurve:hp,LineCurve3:hm,QuadraticBezierCurve:hf,QuadraticBezierCurve3:hg,SplineCurve:hv});class hx extends l9{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new hp(t,e))}getPoint(e){let t=e*this.getLength(),i=this.getCurveLengths(),r=0;for(;r<i.length;){if(i[r]>=t){let e=i[r]-t,n=this.curves[r],a=n.getLength(),s=0===a?0:1-e/a;return n.getPointAt(s)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,r=this.curves.length;i<r;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let i=[];for(let r=0,n=this.curves;r<n.length;r++){let a=n[r],s=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let e=0;e<o.length;e++){let r=o[e];t&&t.equals(r)||(i.push(r),t=r)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(new hy[i.type]().fromJSON(i))}return this}}class h_ extends hx{constructor(e){super(),this.type="Path",this.currentPoint=new iN,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new hp(this.currentPoint.clone(),new iN(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){let n=new hf(this.currentPoint.clone(),new iN(e,t),new iN(i,r));return this.curves.push(n),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,n,a){let s=new hu(this.currentPoint.clone(),new iN(e,t),new iN(i,r),new iN(n,a));return this.curves.push(s),this.currentPoint.set(n,a),this}splineThru(e){let t=new hv([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,n,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,i,r,n,a),this}absarc(e,t,i,r,n,a){return this.absellipse(e,t,i,i,r,n,a),this}ellipse(e,t,i,r,n,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,r,n,a,s,o),this}absellipse(e,t,i,r,n,a,s,o){let l=new he(e,t,i,r,n,a,s,o);if(this.curves.length>0){let e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class hb extends h_{constructor(e){super(e),this.uuid=iE(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(new h_().fromJSON(i))}return this}}class hw extends rz{constructor(e,t=1){super(),this.type="Light",this.color=new r6(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}hw.prototype.isLight=!0;class hM extends hw{constructor(e,t,i){super(e,i),this.type="HemisphereLight",this.position.copy(rz.DefaultUp),this.updateMatrix(),this.groundColor=new r6(t)}copy(e){return hw.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}hM.prototype.isHemisphereLight=!0;const hS=new ru,hT=new iW,hE=new iW;class hA{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new iN(512,512),this.map=null,this.mapPass=null,this.matrix=new ru,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new n0,this._frameExtents=new iN(1,1),this._viewportCount=1,this._viewports=[new iU(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;hT.setFromMatrixPosition(e.matrixWorld),t.position.copy(hT),hE.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hE),t.updateMatrixWorld(),hS.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hS),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class hL extends hA{constructor(){super(new nX(50,1,.5,500)),this.focus=1}updateMatrices(e){let t=this.camera,i=2*iT*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;(i!==t.fov||r!==t.aspect||n!==t.far)&&(t.fov=i,t.aspect=r,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}hL.prototype.isSpotLightShadow=!0;class hR extends hw{constructor(e,t,i=0,r=Math.PI/3,n=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(rz.DefaultUp),this.updateMatrix(),this.target=new rz,this.distance=i,this.angle=r,this.penumbra=n,this.decay=a,this.shadow=new hL}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hR.prototype.isSpotLight=!0;const hC=new ru,hP=new iW,hI=new iW;class hD extends hA{constructor(){super(new nX(90,1,.5,500)),this._frameExtents=new iN(4,2),this._viewportCount=6,this._viewports=[new iU(2,1,1,1),new iU(0,1,1,1),new iU(3,1,1,1),new iU(1,1,1,1),new iU(3,0,1,1),new iU(1,0,1,1)],this._cubeDirections=[new iW(1,0,0),new iW(-1,0,0),new iW(0,0,1),new iW(0,0,-1),new iW(0,1,0),new iW(0,-1,0)],this._cubeUps=[new iW(0,1,0),new iW(0,1,0),new iW(0,1,0),new iW(0,1,0),new iW(0,0,1),new iW(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,r=this.matrix,n=e.distance||i.far;n!==i.far&&(i.far=n,i.updateProjectionMatrix()),hP.setFromMatrixPosition(e.matrixWorld),i.position.copy(hP),hI.copy(i.position),hI.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(hI),i.updateMatrixWorld(),r.makeTranslation(-hP.x,-hP.y,-hP.z),hC.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hC)}}hD.prototype.isPointLightShadow=!0;class hN extends hw{constructor(e,t,i=0,r=1){super(e,t),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new hD}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}hN.prototype.isPointLight=!0;class hB extends nq{constructor(e=-1,t=1,i=1,r=-1,n=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2,n=i-e,a=i+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=e*this.view.offsetX,a=n+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}hB.prototype.isOrthographicCamera=!0;class hz extends hA{constructor(){super(new hB(-5,5,5,-5,.5,500))}}hz.prototype.isDirectionalLightShadow=!0;class hF extends hw{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(rz.DefaultUp),this.updateMatrix(),this.target=new rz,this.shadow=new hz}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hF.prototype.isDirectionalLight=!0;class hO extends hw{constructor(e,t){super(e,t),this.type="AmbientLight"}}hO.prototype.isAmbientLight=!0;class hH extends hw{constructor(e,t,i=10,r=10){super(e,t),this.type="RectAreaLight",this.width=i,this.height=r}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}hH.prototype.isRectAreaLight=!0;class hU{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new iW)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*n),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],i*r*1.092548),t.addScaledVector(a[5],r*n*1.092548),t.addScaledVector(a[6],.315392*(3*n*n-1)),t.addScaledVector(a[7],i*n*1.092548),t.addScaledVector(a[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){let i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*r),t.addScaledVector(a[2],1.023328*n),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*r),t.addScaledVector(a[5],.858086*r*n),t.addScaledVector(a[6],.743125*n*n-.247708),t.addScaledVector(a[7],.858086*i*n),t.addScaledVector(a[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){let i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){let i=e.x,r=e.y,n=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*n,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*n,t[6]=.315392*(3*n*n-1),t[7]=1.092548*i*n,t[8]=.546274*(i*i-r*r)}}hU.prototype.isSphericalHarmonics3=!0;class hG extends hw{constructor(e=new hU,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}hG.prototype.isLightProbe=!0;class hk extends l0{constructor(e){super(e),this.textures={}}load(e,t,i,r){let n=this,a=new l3(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let r=new lz[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=new r6().setHex(e.sheen)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(r.morphNormals=e.morphNormals),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.vertexTangents&&(r.vertexTangents=e.vertexTangents),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let t in e.uniforms){let n=e.uniforms[t];switch(r.uniforms[t]={},n.type){case"t":r.uniforms[t].value=i(n.value);break;case"c":r.uniforms[t].value=new r6().setHex(n.value);break;case"v2":r.uniforms[t].value=new iN().fromArray(n.value);break;case"v3":r.uniforms[t].value=new iW().fromArray(n.value);break;case"v4":r.uniforms[t].value=new iU().fromArray(n.value);break;case"m3":r.uniforms[t].value=new iB().fromArray(n.value);break;case"m4":r.uniforms[t].value=new ru().fromArray(n.value);break;default:r.uniforms[t].value=n.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(let t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=i(e.map)),void 0!==e.matcap&&(r.matcap=i(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=new iN().fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=i(e.specularMap)),void 0!==e.envMap&&(r.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=new iN().fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.transmissionMap&&(r.transmissionMap=i(e.transmissionMap)),r}setTextures(e){return this.textures=e,this}}class hV{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.substr(0,t+1)}}class hW extends nb{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}hW.prototype.isInstancedBufferGeometry=!0;class hj extends ne{constructor(e,t,i,r){"number"==typeof i&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,i),this.meshPerAttribute=r||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}hj.prototype.isInstancedBufferAttribute=!0;class hq extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new l3(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)}parse(e){let t={},i={};function r(e,r){if(void 0!==t[r])return t[r];let n=e.interleavedBuffers[r],a=function(e,t){if(void 0!==i[t])return i[t];let r=new Uint32Array(e.arrayBuffers[t]).buffer;return i[t]=r,r}(e,n.buffer),s=new sQ(np(n.type,a),n.stride);return s.uuid=n.uuid,t[r]=s,s}let n=e.isInstancedBufferGeometry?new hW:new nb,a=e.data.index;if(void 0!==a){let e=np(a.type,a.array);n.setIndex(new ne(e,1))}let s=e.data.attributes;for(let t in s){let i;let a=s[t];if(a.isInterleavedBufferAttribute)i=new s$(r(e.data,a.data),a.itemSize,a.offset,a.normalized);else{let e=np(a.type,a.array);i=new(a.isInstancedBufferAttribute?hj:ne)(e,a.itemSize,a.normalized)}void 0!==a.name&&(i.name=a.name),void 0!==a.usage&&i.setUsage(a.usage),void 0!==a.updateRange&&(i.updateRange.offset=a.updateRange.offset,i.updateRange.count=a.updateRange.count),n.setAttribute(t,i)}let o=e.data.morphAttributes;if(o)for(let t in o){let i=o[t],a=[];for(let t=0,n=i.length;t<n;t++){let n;let s=i[t];n=s.isInterleavedBufferAttribute?new s$(r(e.data,s.data),s.itemSize,s.offset,s.normalized):new ne(np(s.type,s.array),s.itemSize,s.normalized),void 0!==s.name&&(n.name=s.name),a.push(n)}n.morphAttributes[t]=a}e.data.morphTargetsRelative&&(n.morphTargetsRelative=!0);let l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){let t=l[e];n.addGroup(t.start,t.count,t.materialIndex)}let h=e.data.boundingSphere;if(void 0!==h){let e=new iW;void 0!==h.center&&e.fromArray(h.center),n.boundingSphere=new ri(e,h.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}}class hX extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=""===this.path?hV.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new l3(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){let a=null;try{a=JSON.parse(i)}catch(t){void 0!==r&&r(t),console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message);return}let s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}n.parse(a,t)},i,r)}parse(e,t){let i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,n,o,i),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),void 0!==t){let e=!1;for(let t in a)if(a[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}parseShapes(e){let t={};if(void 0!==e)for(let i=0,r=e.length;i<r;i++){let r=new hb().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){let i={},r={};if(t.traverse(function(e){e.isBone&&(r[e.uuid]=e)}),void 0!==e)for(let t=0,n=e.length;t<n;t++){let n=new ov().fromJSON(e[t],r);i[n.uuid]=n}return i}parseGeometries(e,t){let i;let r={};if(void 0!==e){let n=new hq;for(let a=0,s=e.length;a<s;a++){let s;let o=e[a];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new lT[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":s=new lT[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new lT[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new lT[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new lT[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new lT[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new lT[o.type](o.radius,o.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new lT[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new lT[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new lT[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new lT[o.type](new hy[o.path.type]().fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new lT[o.type](o.points,o.segments,o.phiStart,o.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new lT[o.type](o.vertices,o.indices,o.radius,o.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let e=0,r=o.shapes.length;e<r;e++){let r=t[o.shapes[e]];i.push(r)}s=new lT[o.type](i,o.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let e=0,r=o.shapes.length;e<r;e++){let r=t[o.shapes[e]];i.push(r)}let l=o.options.extrudePath;void 0!==l&&(o.options.extrudePath=new hy[l.type]().fromJSON(l)),s=new lT[o.type](i,o.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=n.parse(o);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),r[o.uuid]=s}}return r}parseMaterials(e,t){let i={},r={};if(void 0!==e){let n=new hk;n.setTextures(t);for(let t=0,a=e.length;t<a;t++){let a=e[t];if("MultiMaterial"===a.type){let e=[];for(let t=0;t<a.materials.length;t++){let r=a.materials[t];void 0===i[r.uuid]&&(i[r.uuid]=n.parse(r)),e.push(i[r.uuid])}r[a.uuid]=e}else void 0===i[a.uuid]&&(i[a.uuid]=n.parse(a)),r[a.uuid]=i[a.uuid]}}return r}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let r=e[i],n=lJ.parse(r);t[n.uuid]=n}return t}parseImages(e,t){let i;let r=this,n={};function a(e){if("string"==typeof e){var t;return t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:r.resourcePath+e,r.manager.itemStart(t),i.load(t,function(){r.manager.itemEnd(t)},void 0,function(){r.manager.itemError(t),r.manager.itemEnd(t)})}return e.data?{data:np(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(i=new l5(new lK(t))).setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){let i=e[t],r=i.url;if(Array.isArray(r)){n[i.uuid]=[];for(let e=0,t=r.length;e<t;e++){let t=a(r[e]);null!==t&&(t instanceof HTMLImageElement?n[i.uuid].push(t):n[i.uuid].push(new nQ(t.data,t.width,t.height)))}}else{let e=a(i.url);null!==e&&(n[i.uuid]=e)}}}return n}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let r={};if(void 0!==e)for(let n=0,a=e.length;n<a;n++){let a;let s=e[n];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let o=t[s.image];Array.isArray(o)?(a=new nZ(o),6===o.length&&(a.needsUpdate=!0)):(a=o&&o.data?new nQ(o.data,o.width,o.height):new iO(o),o&&(a.needsUpdate=!0)),a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),void 0!==s.mapping&&(a.mapping=i(s.mapping,hY)),void 0!==s.offset&&a.offset.fromArray(s.offset),void 0!==s.repeat&&a.repeat.fromArray(s.repeat),void 0!==s.center&&a.center.fromArray(s.center),void 0!==s.rotation&&(a.rotation=s.rotation),void 0!==s.wrap&&(a.wrapS=i(s.wrap[0],hZ),a.wrapT=i(s.wrap[1],hZ)),void 0!==s.format&&(a.format=s.format),void 0!==s.type&&(a.type=s.type),void 0!==s.encoding&&(a.encoding=s.encoding),void 0!==s.minFilter&&(a.minFilter=i(s.minFilter,hJ)),void 0!==s.magFilter&&(a.magFilter=i(s.magFilter,hJ)),void 0!==s.anisotropy&&(a.anisotropy=s.anisotropy),void 0!==s.flipY&&(a.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(a.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(a.unpackAlignment=s.unpackAlignment),r[s.uuid]=a}return r}parseObject(e,t,i,r){let n,a,s;function o(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function l(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===i[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),t.push(i[n])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}switch(e.type){case"Scene":n=new sJ,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new r6(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new sZ(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new sY(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new nX(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new hB(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new hO(e.color,e.intensity);break;case"DirectionalLight":n=new hF(e.color,e.intensity);break;case"PointLight":n=new hN(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new hH(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new hR(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new hM(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=new hG().fromJSON(e);break;case"SkinnedMesh":n=new op(a=o(e.geometry),s=l(e.material)),void 0!==e.bindMode&&(n.bindMode=e.bindMode),void 0!==e.bindMatrix&&n.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(n.skeleton=e.skeleton);break;case"Mesh":n=new nH(a=o(e.geometry),s=l(e.material));break;case"InstancedMesh":a=o(e.geometry),s=l(e.material);let h=e.count,c=e.instanceMatrix,u=e.instanceColor;(n=new ow(a,s,h)).instanceMatrix=new ne(new Float32Array(c.array),16),void 0!==u&&(n.instanceColor=new ne(new Float32Array(u.array),u.itemSize));break;case"LOD":n=new oo;break;case"Line":n=new oR(o(e.geometry),l(e.material));break;case"LineLoop":n=new oD(o(e.geometry),l(e.material));break;case"LineSegments":n=new oI(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":n=new oH(o(e.geometry),l(e.material));break;case"Sprite":n=new or(l(e.material));break;case"Group":n=new sG;break;case"Bone":n=new om;break;default:n=new rz}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){let a=e.children;for(let e=0;e<a.length;e++)n.add(this.parseObject(a[e],t,i,r))}if(void 0!==e.animations){let t=e.animations;for(let e=0;e<t.length;e++){let i=t[e];n.animations.push(r[i])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);let t=e.levels;for(let e=0;e<t.length;e++){let i=t[e],r=n.getObjectByProperty("uuid",i.object);void 0!==r&&n.addLevel(r,i.distance)}}return n}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const hY={UVMapping:el,CubeReflectionMapping:eh,CubeRefractionMapping:ec,EquirectangularReflectionMapping:eu,EquirectangularRefractionMapping:ed,CubeUVReflectionMapping:ep,CubeUVRefractionMapping:em},hZ={RepeatWrapping:ef,ClampToEdgeWrapping:eg,MirroredRepeatWrapping:ev},hJ={NearestFilter:ey,NearestMipmapNearestFilter:ex,NearestMipmapLinearFilter:eb,LinearFilter:eM,LinearMipmapNearestFilter:eS,LinearMipmapLinearFilter:eE};class hQ extends l0{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let n=this,a=lQ.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(i){lQ.add(e,i),t&&t(i),n.manager.itemEnd(e)}).catch(function(t){r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}),n.manager.itemStart(e)}}hQ.prototype.isImageBitmapLoader=!0;class hK{constructor(){this.type="ShapePath",this.color=new r6,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new h_,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,n,a){return this.currentPath.bezierCurveTo(e,t,i,r,n,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){let i,r,n,a,s;function o(e){let t=[];for(let i=0,r=e.length;i<r;i++){let r=e[i],n=new hb;n.curves=r.curves,t.push(n)}return t}let l=lo.isClockWise,h=this.subPaths;if(0===h.length)return[];if(!0===t)return o(h);let c=[];if(1===h.length)return r=h[0],(n=new hb).curves=r.curves,c.push(n),c;let u=!l(h[0].getPoints());u=e?!u:u;let d=[],p=[],m=[],f=0;p[0]=void 0,m[f]=[];for(let t=0,n=h.length;t<n;t++)i=l(a=(r=h[t]).getPoints()),(i=e?!i:i)?(!u&&p[f]&&f++,p[f]={s:new hb,p:a},p[f].s.curves=r.curves,u&&f++,m[f]=[]):m[f].push({h:r,p:a[0]});if(!p[0])return o(h);if(p.length>1){let e=!1,t=[];for(let e=0,t=p.length;e<t;e++)d[e]=[];for(let i=0,r=p.length;i<r;i++){let r=m[i];for(let n=0;n<r.length;n++){let a=r[n],s=!0;for(let r=0;r<p.length;r++)(function(e,t){let i=t.length,r=!1;for(let n=i-1,a=0;a<i;n=a++){let i=t[n],s=t[a],o=s.x-i.x,l=s.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=t[a],o=-o,s=t[n],l=-l),e.y<i.y||e.y>s.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{let t=l*(e.x-i.x)-o*(e.y-i.y);if(0===t)return!0;if(t<0)continue;r=!r}}else{if(e.y!==i.y)continue;if(s.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=s.x)return!0}}return r})(a.p,p[r].p)&&(i!==r&&t.push({froms:i,tos:r,hole:n}),s?(s=!1,d[r].push(a)):e=!0);s&&d[i].push(a)}}t.length>0&&!e&&(m=d)}for(let e=0,t=p.length;e<t;e++){n=p[e].s,c.push(n),s=m[e];for(let e=0,t=s.length;e<t;e++)n.holes.push(s[e].h)}return c}}class h${constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){let i=[],r=function(e,t,i){let r=Array.from(e),n=t/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*n,s=[],o=0,l=0;for(let e=0;e<r.length;e++){let t=r[e];if("\n"===t)o=0,l-=a;else{let e=function(e,t,i,r,n){let a,s,o,l,h,c,u,d;let p=n.glyphs[e]||n.glyphs["?"];if(!p){console.error('THREE.Font: character "'+e+'" does not exists in font family '+n.familyName+".");return}let m=new hK;if(p.o){let e=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let n=0,p=e.length;n<p;)switch(e[n++]){case"m":a=e[n++]*t+i,s=e[n++]*t+r,m.moveTo(a,s);break;case"l":a=e[n++]*t+i,s=e[n++]*t+r,m.lineTo(a,s);break;case"q":o=e[n++]*t+i,l=e[n++]*t+r,h=e[n++]*t+i,c=e[n++]*t+r,m.quadraticCurveTo(h,c,o,l);break;case"b":o=e[n++]*t+i,l=e[n++]*t+r,h=e[n++]*t+i,c=e[n++]*t+r,u=e[n++]*t+i,d=e[n++]*t+r,m.bezierCurveTo(h,c,u,d,o,l)}}return{offsetX:p.ha*t,path:m}}(t,n,o,l,i);o+=e.offsetX,s.push(e.path)}}return s}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(i,r[e].toShapes());return i}}h$.prototype.isFont=!0;class h0 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new l3(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(e){let i;try{i=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(e.substring(65,e.length-2))}let r=n.parse(i);t&&t(r)},i,r)}parse(e){return new h$(e)}}const h1={getContext:function(){return void 0===i&&(i=new(window.AudioContext||window.webkitAudioContext)),i},setContext:function(e){i=e}};class h3 extends l0{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new l3(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{let e=i.slice(0);h1.getContext().decodeAudioData(e,function(e){t(e)})}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)}}class h2 extends hG{constructor(e,t,i=1){super(void 0,i);let r=new r6().set(e),n=new r6().set(t),a=new iW(r.r,r.g,r.b),s=new iW(n.r,n.g,n.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(l)}}h2.prototype.isHemisphereLightProbe=!0;class h4 extends hG{constructor(e,t=1){super(void 0,t);let i=new r6().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}h4.prototype.isAmbientLightProbe=!0;const h5=new ru,h6=new ru;class h8{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new nX,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new nX,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){let i,r;t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;let n=e.projectionMatrix.clone(),a=t.eyeSep/2,s=a*t.near/t.focus,o=t.near*Math.tan(iS*t.fov*.5)/t.zoom;h6.elements[12]=-a,h5.elements[12]=a,i=-o*t.aspect+s,r=o*t.aspect+s,n.elements[0]=2*t.near/(r-i),n.elements[8]=(r+i)/(r-i),this.cameraL.projectionMatrix.copy(n),i=-o*t.aspect-s,r=o*t.aspect-s,n.elements[0]=2*t.near/(r-i),n.elements[8]=(r+i)/(r-i),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(h6),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(h5)}}class h7{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=h9(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=h9();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function h9(){return("undefined"==typeof performance?Date:performance).now()}const ce=new iW,ct=new iV,ci=new iW,cr=new iW;class cn extends rz{constructor(){super(),this.type="AudioListener",this.context=h1.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new h7}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ce,ct,ci),cr.set(0,0,-1).applyQuaternion(ct),t.positionX){let e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ce.x,e),t.positionY.linearRampToValueAtTime(ce.y,e),t.positionZ.linearRampToValueAtTime(ce.z,e),t.forwardX.linearRampToValueAtTime(cr.x,e),t.forwardY.linearRampToValueAtTime(cr.y,e),t.forwardZ.linearRampToValueAtTime(cr.z,e),t.upX.linearRampToValueAtTime(i.x,e),t.upY.linearRampToValueAtTime(i.y,e),t.upZ.linearRampToValueAtTime(i.z,e)}else t.setPosition(ce.x,ce.y,ce.z),t.setOrientation(cr.x,cr.y,cr.z,i.x,i.y,i.z)}}class ca extends rz{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const cs=new iW,co=new iV,cl=new iW,ch=new iW;class cc extends ca{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(cs,co,cl),ch.set(0,0,1).applyQuaternion(co);let t=this.panner;if(t.positionX){let e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(cs.x,e),t.positionY.linearRampToValueAtTime(cs.y,e),t.positionZ.linearRampToValueAtTime(cs.z,e),t.orientationX.linearRampToValueAtTime(ch.x,e),t.orientationY.linearRampToValueAtTime(ch.y,e),t.orientationZ.linearRampToValueAtTime(ch.z,e)}else t.setPosition(cs.x,cs.y,cs.z),t.setOrientation(ch.x,ch.y,ch.z)}}class cu{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class cd{constructor(e,t,i){let r,n,a;switch(this.binding=e,this.valueSize=i,t){case"quaternion":r=this._slerp,n=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":r=this._select,n=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:r=this._lerp,n=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=n,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,r=this.valueSize,n=e*r+r,a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)i[n+e]=i[e];a=t}else{a+=t;let e=t/a;this._mixBufferRegion(i,n,0,e,r)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,r=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,r=e*t+t,n=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,n<1){let e=t*this._origIndex;this._mixBufferRegion(i,r,e,1-n,t)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let e=t,n=t+t;e!==n;++e)if(i[e]!==i[e+t]){s.setValue(i,r);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let e=i;e!==r;++e)t[e]=t[r+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,n){if(r>=.5)for(let r=0;r!==n;++r)e[t+r]=e[i+r]}_slerp(e,t,i,r){iV.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,n){let a=this._workIndex*n;iV.multiplyQuaternionsFlat(e,a,e,t,e,i),iV.slerpFlat(e,t,e,t,e,a,r)}_lerp(e,t,i,r,n){let a=1-r;for(let s=0;s!==n;++s){let n=t+s;e[n]=e[n]*a+e[i+s]*r}}_lerpAdditive(e,t,i,r,n){for(let a=0;a!==n;++a){let n=t+a;e[n]=e[n]+e[i+a]*r}}}const cp="\\[\\]\\.:\\/",cm=RegExp("["+cp+"]","g"),cf="[^"+cp+"]",cg="[^"+cp.replace("\\.","")+"]",cv=/((?:WC+[\/:])*)/.source.replace("WC",cf),cy=RegExp("^"+cv+/(WCOD+)?/.source.replace("WCOD",cg)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cf)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cf)+"$"),cx=["material","materials","bones"];class c_{constructor(e,t,i){this.path=t,this.parsedPath=i||c_.parseTrackName(t),this.node=c_.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new c_.Composite(e,t,i):new c_(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(cm,"")}static parseTrackName(e){let t=cy.exec(e);if(!t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){let e=i.nodeName.substring(r+1);-1!==cx.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let i=function(e){for(let r=0;r<e.length;r++){let n=e[r];if(n.name===t||n.uuid===t)return n;let a=i(n.children);if(a)return a}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.node[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,r=t.propertyName,n=t.propertyIndex;if(e||(e=c_.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let r=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==r){if(void 0===e[r]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[r]}}let a=e[r];if(void 0===a){console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+r+" but it wasn't found.",e);return}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===r){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[n]&&(n=e.morphTargetDictionary[n])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=n}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}c_.Composite=class{constructor(e,t,i){let r=i||c_.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,r=this._bindings[i];void 0!==r&&r.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},c_.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},c_.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},c_.prototype.GetterByBindingType=[c_.prototype._getValue_direct,c_.prototype._getValue_array,c_.prototype._getValue_arrayElement,c_.prototype._getValue_toArray],c_.prototype.SetterByBindingTypeAndVersioning=[[c_.prototype._setValue_direct,c_.prototype._setValue_direct_setNeedsUpdate,c_.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[c_.prototype._setValue_array,c_.prototype._setValue_array_setNeedsUpdate,c_.prototype._setValue_array_setMatrixWorldNeedsUpdate],[c_.prototype._setValue_arrayElement,c_.prototype._setValue_arrayElement_setNeedsUpdate,c_.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[c_.prototype._setValue_fromArray,c_.prototype._setValue_fromArray_setNeedsUpdate,c_.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cb{constructor(){this.uuid=iE(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};let t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,n=this._bindings,a=n.length,s,o=e.length,l=this.nCachedObjects_;for(let h=0,c=arguments.length;h!==c;++h){let c=arguments[h],u=c.uuid,d=t[u];if(void 0===d){d=o++,t[u]=d,e.push(c);for(let e=0;e!==a;++e)n[e].push(new c_(c,i[e],r[e]))}else if(d<l){s=e[d];let o=--l,h=e[o];t[h.uuid]=d,e[d]=h,t[u]=o,e[o]=c;for(let e=0;e!==a;++e){let t=n[e],a=t[o],s=t[d];t[d]=a,void 0===s&&(s=new c_(c,i[e],r[e])),t[o]=s}}else e[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length,n=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let s=arguments[a],o=s.uuid,l=t[o];if(void 0!==l&&l>=n){let a=n++,h=e[a];t[h.uuid]=l,e[l]=h,t[o]=a,e[a]=s;for(let e=0;e!==r;++e){let t=i[e],r=t[a],n=t[l];t[l]=r,t[a]=n}}}this.nCachedObjects_=n}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length,n=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let o=arguments[s],l=o.uuid,h=t[l];if(void 0!==h){if(delete t[l],h<n){let s=--n,o=e[s],l=--a,c=e[l];t[o.uuid]=h,e[h]=o,t[c.uuid]=s,e[s]=c,e.pop();for(let e=0;e!==r;++e){let t=i[e],r=t[s],n=t[l];t[h]=r,t[s]=n,t.pop()}}else{let n=--a,s=e[n];n>0&&(t[s.uuid]=h),e[h]=s,e.pop();for(let e=0;e!==r;++e){let t=i[e];t[h]=t[n],t.pop()}}}}this.nCachedObjects_=n}subscribe_(e,t){let i=this._bindingsIndicesByPath,r=i[e],n=this._bindings;if(void 0!==r)return n[r];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,c=Array(l);r=n.length,i[e]=r,a.push(e),s.push(t),n.push(c);for(let i=h,r=o.length;i!==r;++i){let r=o[i];c[i]=new c_(r,e,t)}return c}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let r=this._paths,n=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s];t[e[s]]=i,a[i]=o,a.pop(),n[i]=n[s],n.pop(),r[i]=r[s],r.pop()}}}cb.prototype.isAnimationObjectGroup=!0;class cw{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;let n=t.tracks,a=n.length,s=Array(a),o={endingStart:tz,endingEnd:tz};for(let e=0;e!==a;++e){let t=n[e].createInterpolant(null);s[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=tP,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let i=this._clip.duration,r=e._clip.duration;e.warp(1,r/i,t),this.warp(i/r,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let r=this._mixer,n=r.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=n,o[1]=n+i,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}let n=this._startTime;if(null!==n){let r=(e-n)*i;if(r<0||0===i)return;this._startTime=null,t=i*r}t*=this._updateTimeScale(e);let a=this._updateTime(t),s=this._updateWeight(e);if(s>0){let e=this._interpolants,t=this._propertyBindings;if(this.blendMode===tU)for(let i=0,r=e.length;i!==r;++i)e[i].evaluate(a),t[i].accumulateAdditive(s);else for(let i=0,n=e.length;i!==n;++i)e[i].evaluate(a),t[i].accumulate(r,s)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;null!==i&&(t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,r=this.time+e,n=this._loopCount,a=i===tI;if(0===e)return -1===n?r:a&&(1&n)==1?t-r:r;if(i===tC){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));n:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break n}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===n&&(e>=0?(n=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){let i=Math.floor(r/t);r-=t*i,n+=Math.abs(i);let s=this.repetitions-n;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===s){let t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=n,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=r;if(a&&(1&n)==1)return t-r}return r}_setEndings(e,t,i){let r=this._interpolantSettings;i?(r.endingStart=tF,r.endingEnd=tF):(e?r.endingStart=this.zeroSlopeAtStart?tF:tz:r.endingStart=tO,t?r.endingEnd=this.zeroSlopeAtEnd?tF:tz:r.endingEnd=tO)}_scheduleFading(e,t,i){let r=this._mixer,n=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=n,o[0]=t,s[1]=n+e,o[1]=i,this}}class cM extends ib{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,r=e._clip.tracks,n=r.length,a=e._propertyBindings,s=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,h=l[o];void 0===h&&(h={},l[o]=h);for(let e=0;e!==n;++e){let n=r[e],l=n.name,c=h[l];if(void 0!==c)a[e]=c;else{if(void 0!==(c=a[e])){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,o,l));continue}let r=t&&t._propertyBindings[e].binding.parsedPath;c=new cd(c_.create(i,l,r),n.ValueTypeName,n.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,o,l),a[e]=c}s[e].resultBuffer=c.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,t)}let t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){let i=t[e];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){let i=t[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;let e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let r=this._actions,n=this._actionsByClip,a=n[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=a;else{let t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;let n=e._clip.uuid,a=this._actionsByClip,s=a[n],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;let c=s.actionByRoot,u=(e._localRoot||this._root).uuid;delete c[u],0===o.length&&delete a[n],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){let i=t[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_addInactiveBinding(e,t,i){let r=this._bindingsByRootAndName,n=this._bindings,a=r[t];void 0===a&&(a={},r[t]=a),a[i]=e,e._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,r=i.rootNode.uuid,n=i.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[n],0===Object.keys(s).length&&delete a[r]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new lU(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,n=t[r];e.__cacheIndex=r,t[r]=e,n.__cacheIndex=i,t[i]=n}clipAction(e,t,i){let r=t||this._root,n=r.uuid,a="string"==typeof e?lJ.findByName(r,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===i&&(i=null!==a?a.blendMode:tH),void 0!==o){let e=o.actionByRoot[n];if(void 0!==e&&e.blendMode===i)return e;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let h=new cw(this,a,t,i);return this._bindAction(h,l),this._addInactiveAction(h,s,n),h}existingAction(e,t){let i=t||this._root,r=i.uuid,n="string"==typeof e?lJ.findByName(i,e):e,a=n?n.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[r]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,r=this.time+=e,n=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==i;++s)t[s]._update(r,e,n,a);let s=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)s[e].apply(a);return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,r=this._actionsByClip,n=r[i];if(void 0!==n){let e=n.knownActions;for(let i=0,r=e.length;i!==r;++i){let r=e[i];this._deactivateAction(r);let n=r._cacheIndex,a=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=n,t[n]=a,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let e in i){let r=i[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}let r=this._bindingsByRootAndName[t];if(void 0!==r)for(let e in r){let t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}cM.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class cS{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new cS(void 0===this.value.clone?this.value:this.value.clone())}}class cT extends sQ{constructor(e,t,i=1){super(e,t),this.meshPerAttribute=i||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}cT.prototype.isInstancedInterleavedBuffer=!0;class cE{constructor(e,t,i,r,n){this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=n,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}cE.prototype.isGLBufferAttribute=!0;class cA{constructor(e,t,i=0,r=1/0){this.ray=new rc(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new rw,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,i=[]){return cR(e,this,i,t),i.sort(cL),i}intersectObjects(e,t=!1,i=[]){for(let r=0,n=e.length;r<n;r++)cR(e[r],this,i,t);return i.sort(cL),i}}function cL(e,t){return e.distance-t.distance}function cR(e,t,i,r){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===r){let r=e.children;for(let e=0,n=r.length;e<n;e++)cR(r[e],t,i,!0)}}class cC{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(iA(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class cP{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}const cI=new iN;class cD{constructor(e=new iN(1/0,1/0),t=new iN(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=cI.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new iN),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new iN),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new iN),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new iN),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return cI.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}cD.prototype.isBox2=!0;const cN=new iW,cB=new iW;class cz{constructor(e=new iW,t=new iW){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new iW),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new iW),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new iW),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){cN.subVectors(e,this.start),cB.subVectors(this.end,this.start);let i=cB.dot(cB),r=cB.dot(cN)/i;return t&&(r=iA(r,0,1)),r}closestPointToPoint(e,t,i){let r=this.closestPointToPointParameter(e,t);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new iW),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class cF extends rz{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}cF.prototype.isImmediateRenderObject=!0;const cO=new iW;class cH extends rz{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let i=new nb,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){let i=e/32*Math.PI*2,n=t/32*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(n),Math.sin(n),1)}i.setAttribute("position",new nh(r,3));let n=new oM({fog:!1,toneMapped:!1});this.cone=new oI(i,n),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),cO.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(cO),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const cU=new iW,cG=new ru,ck=new ru;class cV extends oI{constructor(e){let t=function e(t){let i=[];t&&t.isBone&&i.push(t);for(let r=0;r<t.children.length;r++)i.push.apply(i,e(t.children[r]));return i}(e),i=new nb,r=[],n=[],a=new r6(0,0,1),s=new r6(0,1,0);for(let e=0;e<t.length;e++){let i=t[e];i.parent&&i.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(a.r,a.g,a.b),n.push(s.r,s.g,s.b))}i.setAttribute("position",new nh(r,3)),i.setAttribute("color",new nh(n,3)),super(i,new oM({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,r=i.getAttribute("position");ck.copy(this.root.matrixWorld).invert();for(let e=0,i=0;e<t.length;e++){let n=t[e];n.parent&&n.parent.isBone&&(cG.multiplyMatrices(ck,n.matrixWorld),cU.setFromMatrixPosition(cG),r.setXYZ(i,cU.x,cU.y,cU.z),cG.multiplyMatrices(ck,n.parent.matrixWorld),cU.setFromMatrixPosition(cG),r.setXYZ(i+1,cU.x,cU.y,cU.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class cW extends nH{constructor(e,t,i){super(new ly(t,4,2),new r8({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const cj=new iW,cq=new r6,cX=new r6;class cY extends rz{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let r=new lm(t);r.rotateY(.5*Math.PI),this.material=new r8({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let n=new Float32Array(3*r.getAttribute("position").count);r.setAttribute("color",new ne(n,3)),this.add(new nH(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");cq.copy(this.light.color),cX.copy(this.light.groundColor);for(let e=0,i=t.count;e<i;e++){let r=e<i/2?cq:cX;t.setXYZ(e,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(cj.setFromMatrixPosition(this.light.matrixWorld).negate())}}class cZ extends oI{constructor(e=10,t=10,i=4473924,r=8947848){i=new r6(i),r=new r6(r);let n=t/2,a=e/t,s=e/2,o=[],l=[];for(let e=0,h=0,c=-s;e<=t;e++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let t=e===n?i:r;t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3}let h=new nb;h.setAttribute("position",new nh(o,3)),h.setAttribute("color",new nh(l,3)),super(h,new oM({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class cJ extends oI{constructor(e=10,t=16,i=8,r=64,n=4473924,a=8947848){n=new r6(n),a=new r6(a);let s=[],o=[];for(let i=0;i<=t;i++){let r=i/t*(2*Math.PI),l=Math.sin(r)*e,h=Math.cos(r)*e;s.push(0,0,0),s.push(l,0,h);let c=1&i?n:a;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let t=0;t<=i;t++){let l=1&t?n:a,h=e-e/i*t;for(let e=0;e<r;e++){let t=e/r*(2*Math.PI),i=Math.sin(t)*h,n=Math.cos(t)*h;s.push(i,0,n),o.push(l.r,l.g,l.b),i=Math.sin(t=(e+1)/r*(2*Math.PI))*h,n=Math.cos(t)*h,s.push(i,0,n),o.push(l.r,l.g,l.b)}}let l=new nb;l.setAttribute("position",new nh(s,3)),l.setAttribute("color",new nh(o,3)),super(l,new oM({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const cQ=new iW,cK=new iW,c$=new iW;class c0 extends rz{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let r=new nb;r.setAttribute("position",new nh([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let n=new oM({fog:!1,toneMapped:!1});this.lightPlane=new oR(r,n),this.add(this.lightPlane),(r=new nb).setAttribute("position",new nh([0,0,0,0,0,1],3)),this.targetLine=new oR(r,n),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cQ.setFromMatrixPosition(this.light.matrixWorld),cK.setFromMatrixPosition(this.light.target.matrixWorld),c$.subVectors(cK,cQ),this.lightPlane.lookAt(cK),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cK),this.targetLine.scale.z=c$.length()}}const c1=new iW,c3=new nq;class c2 extends oI{constructor(e){let t=new nb,i=new oM({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],n=[],a={},s=new r6(16755200),o=new r6(16711680),l=new r6(43775),h=new r6(16777215),c=new r6(3355443);function u(e,t,i){d(e,i),d(t,i)}function d(e,t){r.push(0,0,0),n.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",h),u("p","c",c),u("cn1","cn2",c),u("cn3","cn4",c),u("cf1","cf2",c),u("cf3","cf4",c),t.setAttribute("position",new nh(r,3)),t.setAttribute("color",new nh(n,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){let e=this.geometry,t=this.pointMap;c3.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),c4("c",t,e,c3,0,0,-1),c4("t",t,e,c3,0,0,1),c4("n1",t,e,c3,-1,-1,-1),c4("n2",t,e,c3,1,-1,-1),c4("n3",t,e,c3,-1,1,-1),c4("n4",t,e,c3,1,1,-1),c4("f1",t,e,c3,-1,-1,1),c4("f2",t,e,c3,1,-1,1),c4("f3",t,e,c3,-1,1,1),c4("f4",t,e,c3,1,1,1),c4("u1",t,e,c3,.7,1.1,-1),c4("u2",t,e,c3,-.7,1.1,-1),c4("u3",t,e,c3,0,2,-1),c4("cf1",t,e,c3,-1,0,1),c4("cf2",t,e,c3,1,0,1),c4("cf3",t,e,c3,0,-1,1),c4("cf4",t,e,c3,0,1,1),c4("cn1",t,e,c3,-1,0,-1),c4("cn2",t,e,c3,1,0,-1),c4("cn3",t,e,c3,0,-1,-1),c4("cn4",t,e,c3,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function c4(e,t,i,r,n,a,s){c1.set(n,a,s).unproject(r);let o=t[e];if(void 0!==o){let e=i.getAttribute("position");for(let t=0,i=o.length;t<i;t++)e.setXYZ(o[t],c1.x,c1.y,c1.z)}}const c5=new iX;class c6 extends oI{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),n=new nb;n.setIndex(new ne(i,1)),n.setAttribute("position",new ne(r,3)),super(n,new oM({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&c5.setFromObject(this.object),c5.isEmpty())return;let t=c5.min,i=c5.max,r=this.geometry.attributes.position,n=r.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=t.x,n[4]=i.y,n[5]=i.z,n[6]=t.x,n[7]=t.y,n[8]=i.z,n[9]=i.x,n[10]=t.y,n[11]=i.z,n[12]=i.x,n[13]=i.y,n[14]=t.z,n[15]=t.x,n[16]=i.y,n[17]=t.z,n[18]=t.x,n[19]=t.y,n[20]=t.z,n[21]=i.x,n[22]=t.y,n[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return oI.prototype.copy.call(this,e),this.object=e.object,this}}class c8 extends oI{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new nb;r.setIndex(new ne(i,1)),r.setAttribute("position",new nh([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new oM({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class c7 extends oR{constructor(e,t=1,i=16776960){let r=new nb;r.setAttribute("position",new nh([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new oM({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let n=new nb;n.setAttribute("position",new nh([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new nH(n,new r8({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?x:y,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const c9=new iW;class ue extends rz{constructor(e=new iW(0,0,1),t=new iW(0,0,0),i=1,a=16776960,s=.2*i,o=.2*s){super(),this.type="ArrowHelper",void 0===r&&((r=new nb).setAttribute("position",new nh([0,0,0,0,1,0],3)),(n=new oq(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oR(r,new oM({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nH(n,new r8({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{c9.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(c9,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class ut extends oI{constructor(e=1){let t=new nb;t.setAttribute("position",new nh([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new nh([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(t,new oM({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const ui=new Float32Array(1),ur=new Int32Array(ui.buffer);class un{static toHalfFloat(e){ui[0]=e;let t=ur[0],i=t>>16&32768,r=t>>12&2047,n=t>>23&255;return n<103?i:n>142?(i|=31744,i|=(255==n?0:1)&&8388607&t):n<113?(r|=2048,i|=(r>>114-n)+(r>>113-n&1)):(i|=n-112<<10|r>>1,i+=1&r)}}const ua=[.125,.215,.35,.446,.526,.582],us=5+ua.length,uo={[tW]:0,[tj]:1,[tX]:2,[tZ]:3,[tJ]:4,[tQ]:5,[tq]:6},ul=new r8({side:x,depthWrite:!1,depthTest:!1}),uh=new nH(new nG,ul),uc=new hB,{_lodPlanes:uu,_sizeLods:ud,_sigmas:up}=function(){let e=[],t=[],i=[],r=8;for(let n=0;n<us;n++){let a=Math.pow(2,r);t.push(a);let s=1/a;n>4?s=ua[n-8+4-1]:0==n&&(s=0),i.push(s);let o=1/(a-1),l=-o/2,h=1+o/2,c=[l,l,h,l,h,h,l,l,h,h,l,h],u=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,i=e>2?0:-1,r=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];u.set(r,18*e),d.set(c,12*e);let n=[e,e,e,e,e,e];p.set(n,6*e)}let m=new nb;m.setAttribute("position",new ne(u,3)),m.setAttribute("uv",new ne(d,2)),m.setAttribute("faceIndex",new ne(p,1)),e.push(m),r>4&&r--}return{_lodPlanes:e,_sizeLods:t,_sigmas:i}}(),um=new r6;let uf=null;const ug=(1+Math.sqrt(5))/2,uv=1/ug,uy=[new iW(1,1,1),new iW(-1,1,1),new iW(1,1,-1),new iW(-1,1,-1),new iW(0,ug,uv),new iW(0,ug,-uv),new iW(uv,0,ug),new iW(-uv,0,ug),new iW(ug,uv,0),new iW(-ug,uv,0)];function ux(e){let t=Math.min(Math.max(Math.ceil(Math.log2(Math.max(e.r,e.g,e.b))),-128),127);return e.multiplyScalar(Math.pow(2,-t)),(t+128)/255}class u_{constructor(e){var t;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,new lA({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new iW(0,1,0)},inputEncoding:{value:uo[tW]},outputEncoding:{value:uo[tW]}},vertexShader:uT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${uE()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:M,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){uf=this._renderer.getRenderTarget();let n=this._allocateTargets();return this._sceneToCubeUV(e,i,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=uS(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=uM(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<uu.length;e++)uu[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(uf),e.scissorTest=!1,uw(e,0,0,e.width,e.height)}_fromTexture(e){uf=this._renderer.getRenderTarget();let t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){let t={magFilter:ey,minFilter:ey,generateMipmaps:!1,type:eL,format:ej,encoding:void 0!==e&&e.type===eL&&(e.encoding===tW||e.encoding===tj||e.encoding===tq)?e.encoding:tX,depthBuffer:!1},i=ub(t);return i.depthBuffer=!e,this._pingPongRenderTarget=ub(t),i}_compileMaterial(e){let t=new nH(uu[0],e);this._renderer.compile(t,uc)}_sceneToCubeUV(e,t,i,r){let n=new nX(90,1,t,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.outputEncoding,c=o.toneMapping;o.getClearColor(um),o.toneMapping=ei,o.outputEncoding=tW,o.autoClear=!1;let u=!1,d=e.background;if(d){if(d.isColor){ul.color.copy(d).convertSRGBToLinear(),e.background=null;let t=ux(ul.color);ul.opacity=t,u=!0}}else{ul.color.copy(um).convertSRGBToLinear();let e=ux(ul.color);ul.opacity=e,u=!0}for(let t=0;t<6;t++){let i=t%3;0==i?(n.up.set(0,a[t],0),n.lookAt(s[t],0,0)):1==i?(n.up.set(0,0,a[t]),n.lookAt(0,s[t],0)):(n.up.set(0,a[t],0),n.lookAt(0,0,s[t])),uw(r,256*i,t>2?256:0,256,256),o.setRenderTarget(r),u&&o.render(uh,n),o.render(e,n)}o.toneMapping=c,o.outputEncoding=h,o.autoClear=l}_textureToCubeUV(e,t){let i=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=uS()):null==this._equirectShader&&(this._equirectShader=uM());let r=e.isCubeTexture?this._cubemapShader:this._equirectShader,n=new nH(uu[0],r),a=r.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=uo[e.encoding],a.outputEncoding.value=uo[t.texture.encoding],uw(t,0,0,768,512),i.setRenderTarget(t),i.render(n,uc)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let t=1;t<us;t++){let i=Math.sqrt(up[t]*up[t]-up[t-1]*up[t-1]),r=uy[(t-1)%uy.length];this._blur(e,t-1,t,i,r)}t.autoClear=i}_blur(e,t,i,r,n){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",n),this._halfBlur(a,e,i,i,r,"longitudinal",n)}_halfBlur(e,t,i,r,n,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new nH(uu[r],l),c=l.uniforms,u=ud[i]-1,d=isFinite(n)?Math.PI/(2*u):2*Math.PI/39,p=n/d,m=isFinite(n)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);let f=[],g=0;for(let e=0;e<20;++e){let t=e/p,i=Math.exp(-t*t/2);f.push(i),0==e?g+=i:e<m&&(g+=2*i)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;c.envMap.value=e.texture,c.samples.value=m,c.weights.value=f,c.latitudinal.value="latitudinal"===a,s&&(c.poleAxis.value=s),c.dTheta.value=d,c.mipInt.value=8-i,c.inputEncoding.value=uo[e.texture.encoding],c.outputEncoding.value=uo[e.texture.encoding];let v=ud[r];uw(t,3*Math.max(0,256-2*v),(0===r?0:512)+2*v*(r>4?r-8+4:0),3*v,2*v),o.setRenderTarget(t),o.render(h,uc)}}function ub(e){let t=new iG(768,768,e);return t.texture.mapping=ep,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function uw(e,t,i,r,n){e.viewport.set(t,i,r,n),e.scissor.set(t,i,r,n)}function uM(){return new lA({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new iN(1,1)},inputEncoding:{value:uo[tW]},outputEncoding:{value:uo[tW]}},vertexShader:uT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${uE()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:M,depthTest:!1,depthWrite:!1})}function uS(){return new lA({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:uo[tW]},outputEncoding:{value:uo[tW]}},vertexShader:uT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${uE()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:M,depthTest:!1,depthWrite:!1})}function uT(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function uE(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}const uA=0,uL=1,uR=0,uC=1,uP=2;function uI(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function uD(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function uN(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new oH(e,t)}function uB(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new or(e)}function uz(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new oH(e,t)}function uF(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new oN(e)}function uO(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new oN(e)}function uH(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new oN(e)}function uU(e,t,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new iW(e,t,i)}function uG(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new ne(e,t).setUsage(ic)}function uk(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new nt(e,t)}function uV(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ni(e,t)}function uW(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new nr(e,t)}function uj(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new nn(e,t)}function uq(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new na(e,t)}function uX(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ns(e,t)}function uY(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new no(e,t)}function uZ(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new nh(e,t)}function uJ(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new nc(e,t)}function uQ(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new ut(e)}function uK(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new c6(e,t)}function u$(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new oI(new o0(e.geometry),new oM({color:void 0!==t?t:16777215}))}function u0(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new oI(new lS(e.geometry),new oM({color:void 0!==t?t:16777215}))}function u1(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new l3(e)}function u3(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new l8(e)}function u2(e,t,i){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new nJ(e,i)}function u4(){console.error("THREE.CanvasRenderer has been removed")}function u5(){console.error("THREE.JSONLoader has been removed.")}l9.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(l9.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},h_.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},cZ.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},cV.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},l0.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),hV.extractUrlBase(e)},l0.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},cD.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},cD.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},cD.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},cD.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},iX.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},iX.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},iX.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},iX.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},iX.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},ri.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},n0.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},cz.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},iB.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},iB.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},iB.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},iB.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},iB.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},iB.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ru.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ru.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ru.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new iW().setFromMatrixColumn(this,3)},ru.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ru.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ru.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ru.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ru.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ru.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ru.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ru.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ru.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ru.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ru.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ru.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ru.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ru.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ru.prototype.makeFrustum=function(e,t,i,r,n,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,i,n,a)},ru.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},rU.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},iV.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},iV.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},rc.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},rc.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},rc.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},rQ.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},rQ.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},rQ.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},rQ.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},rQ.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},rQ.barycoordFromPoint=function(e,t,i,r,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),rQ.getBarycoord(e,t,i,r,n)},rQ.normal=function(e,t,i,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),rQ.getNormal(e,t,i,r)},hb.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},hb.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new lc(this,e)},hb.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new lv(this,e)},iN.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iN.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},iN.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},iW.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},iW.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},iW.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},iW.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},iW.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},iW.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},iW.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iW.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},iW.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},iU.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iU.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},rz.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},rz.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},rz.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},rz.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},rz.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(rz.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),nH.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(nH.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),tG},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),op.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},nX.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(hw.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(ne.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ic},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ic)}}}),ne.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ic:ih),this},ne.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ne.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},nb.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},nb.prototype.addAttribute=function(e,t){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute)?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new ne(arguments[1],arguments[2])))},nb.prototype.addDrawCall=function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},nb.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},nb.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},nb.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},nb.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(nb.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),sQ.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ic:ih),this},sQ.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},lc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},lc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},lc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},sJ.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},cS.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(r$.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new r6}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===b}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(nj.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),sq.prototype.clearTarget=function(e,t,i,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,r)},sq.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},sq.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},sq.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},sq.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},sq.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},sq.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},sq.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},sq.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},sq.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},sq.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},sq.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},sq.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},sq.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},sq.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},sq.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},sq.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},sq.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},sq.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},sq.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},sq.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},sq.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},sq.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},sq.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},sq.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(sq.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?tj:tW}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(sz.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(iG.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),ca.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let t=this;return new h3().load(e,function(e){t.setBuffer(e)}),this},cu.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},nY.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},nY.prototype.clear=function(e,t,i,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,i,r)},iz.crossOrigin=void 0,iz.loadTexture=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let n=new l7;n.setCrossOrigin(this.crossOrigin);let a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},iz.loadTextureCube=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let n=new l6;n.setCrossOrigin(this.crossOrigin);let a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},iz.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},iz.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const u6={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function u8(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:o}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=o);class u7{constructor(){this.pluginCallbacks=[],this.register(function(e){return new dl(e)}),this.register(function(e){return new dh(e)}),this.register(function(e){return new dc(e)})}register(e){return -1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return -1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i){let r=new ds,n=[];for(let e=0,t=this.pluginCallbacks.length;e<t;e++)n.push(this.pluginCallbacks[e](r));r.setPlugins(n),r.write(e,t,i)}}const u9={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,FLOAT:5126,UNSIGNED_INT:5125,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},de={};de[ey]=u9.NEAREST,de[ex]=u9.NEAREST_MIPMAP_NEAREST,de[eb]=u9.NEAREST_MIPMAP_LINEAR,de[eM]=u9.LINEAR,de[eS]=u9.LINEAR_MIPMAP_NEAREST,de[eE]=u9.LINEAR_MIPMAP_LINEAR,de[eg]=u9.CLAMP_TO_EDGE,de[ef]=u9.REPEAT,de[ev]=u9.MIRRORED_REPEAT;const dt={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"};function di(e,t){return e.length===t.length&&e.every(function(e,i){return e===t[i]})}function dr(e){return 4*Math.ceil(e/4)}function dn(e,t=0){let i=dr(e.byteLength);if(i!==e.byteLength){let r=new Uint8Array(i);if(r.set(new Uint8Array(e)),0!==t)for(let n=e.byteLength;n<i;n++)r[n]=t;return r.buffer}return e}let da=null;class ds{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}write(e,t,i){this.options=Object.assign({},{binary:!1,trs:!1,onlyVisible:!0,truncateDrawRange:!0,embedImages:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},i),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e);let r=this;Promise.all(this.pending).then(function(){let e=r.buffers,i=r.json,n=r.options,a=r.extensionsUsed,s=new Blob(e,{type:"application/octet-stream"}),o=Object.keys(a);if(o.length>0&&(i.extensionsUsed=o),i.buffers&&i.buffers.length>0&&(i.buffers[0].byteLength=s.size),!0===n.binary){let e=new window.FileReader;e.readAsArrayBuffer(s),e.onloadend=function(){let r=dn(e.result),n=new DataView(new ArrayBuffer(8));n.setUint32(0,r.byteLength,!0),n.setUint32(4,5130562,!0);let a=dn(function(e){if(void 0!==window.TextEncoder)return new TextEncoder().encode(e).buffer;let t=new Uint8Array(new ArrayBuffer(e.length));for(let i=0,r=e.length;i<r;i++){let r=e.charCodeAt(i);t[i]=r>255?32:r}return t.buffer}(JSON.stringify(i)),32),s=new DataView(new ArrayBuffer(8));s.setUint32(0,a.byteLength,!0),s.setUint32(4,1313821514,!0);let o=new ArrayBuffer(12),l=new DataView(o);l.setUint32(0,1179937895,!0),l.setUint32(4,2,!0);let h=12+s.byteLength+a.byteLength+n.byteLength+r.byteLength;l.setUint32(8,h,!0);let c=new Blob([o,s,a,n,r],{type:"application/octet-stream"}),u=new window.FileReader;u.readAsArrayBuffer(c),u.onloadend=function(){t(u.result)}}}else if(i.buffers&&i.buffers.length>0){let e=new window.FileReader;e.readAsDataURL(s),e.onloadend=function(){let r=e.result;i.buffers[0].uri=r,t(i)}}else t(i)})}serializeUserData(e,t){if(0===Object.keys(e.userData).length)return;let i=this.options,r=this.extensionsUsed;try{let n=JSON.parse(JSON.stringify(e.userData));if(i.includeCustomExtensions&&n.gltfExtensions){for(let e in void 0===t.extensions&&(t.extensions={}),n.gltfExtensions)t.extensions[e]=n.gltfExtensions[e],r[e]=!0;delete n.gltfExtensions}Object.keys(n).length>0&&(t.extras=n)}catch(t){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+t.message)}}getUID(e){return this.uids.has(e)||this.uids.set(e,this.uid++),this.uids.get(e)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;let t=new iW;for(let i=0,r=e.count;i<r;i++)if(Math.abs(t.fromBufferAttribute(e,i).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){let t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);let i=e.clone(),r=new iW;for(let e=0,t=i.count;e<t;e++)r.fromBufferAttribute(i,e),0===r.x&&0===r.y&&0===r.z?r.setX(1):r.normalize(),i.setXYZ(e,r.x,r.y,r.z);return t.attributesNormalized.set(e,i),i}applyTextureTransform(e,t){let i=!1,r={};(0!==t.offset.x||0!==t.offset.y)&&(r.offset=t.offset.toArray(),i=!0),0!==t.rotation&&(r.rotation=t.rotation,i=!0),(1!==t.repeat.x||1!==t.repeat.y)&&(r.scale=t.repeat.toArray(),i=!0),i&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=r,this.extensionsUsed.KHR_texture_transform=!0)}processBuffer(e){let t=this.json,i=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),i.push(e),0}processBufferView(e,t,i,r,n){let a;let s=this.json;s.bufferViews||(s.bufferViews=[]),a=t===u9.UNSIGNED_BYTE?1:t===u9.UNSIGNED_SHORT?2:4;let o=dr(r*e.itemSize*a),l=new DataView(new ArrayBuffer(o)),h=0;for(let n=i;n<i+r;n++)for(let i=0;i<e.itemSize;i++){let r;e.itemSize>4?r=e.array[n*e.itemSize+i]:0===i?r=e.getX(n):1===i?r=e.getY(n):2===i?r=e.getZ(n):3===i&&(r=e.getW(n)),t===u9.FLOAT?l.setFloat32(h,r,!0):t===u9.UNSIGNED_INT?l.setUint32(h,r,!0):t===u9.UNSIGNED_SHORT?l.setUint16(h,r,!0):t===u9.UNSIGNED_BYTE&&l.setUint8(h,r),h+=a}let c={buffer:this.processBuffer(l.buffer),byteOffset:this.byteOffset,byteLength:o};return void 0!==n&&(c.target=n),n===u9.ARRAY_BUFFER&&(c.byteStride=e.itemSize*a),this.byteOffset+=o,s.bufferViews.push(c),{id:s.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){let t=this,i=t.json;return i.bufferViews||(i.bufferViews=[]),new Promise(function(r){let n=new window.FileReader;n.readAsArrayBuffer(e),n.onloadend=function(){let e=dn(n.result),a={buffer:t.processBuffer(e),byteOffset:t.byteOffset,byteLength:e.byteLength};t.byteOffset+=e.byteLength,r(i.bufferViews.push(a)-1)}})}processAccessor(e,t,i,r){let n,a;let s=this.options,o=this.json;if(e.array.constructor===Float32Array)n=u9.FLOAT;else if(e.array.constructor===Uint32Array)n=u9.UNSIGNED_INT;else if(e.array.constructor===Uint16Array)n=u9.UNSIGNED_SHORT;else if(e.array.constructor===Uint8Array)n=u9.UNSIGNED_BYTE;else throw Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");if(void 0===i&&(i=0),void 0===r&&(r=e.count),s.truncateDrawRange&&void 0!==t&&null===t.index&&(r=Math.min(i+r,t.drawRange.count===1/0?e.count:t.drawRange.start+t.drawRange.count)-(i=Math.max(i,t.drawRange.start)))<0&&(r=0),0===r)return null;let l=function(e,t,i){let r={min:Array(e.itemSize).fill(Number.POSITIVE_INFINITY),max:Array(e.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let n=t;n<t+i;n++)for(let t=0;t<e.itemSize;t++){let i;e.itemSize>4?i=e.array[n*e.itemSize+t]:0===t?i=e.getX(n):1===t?i=e.getY(n):2===t?i=e.getZ(n):3===t&&(i=e.getW(n)),r.min[t]=Math.min(r.min[t],i),r.max[t]=Math.max(r.max[t],i)}return r}(e,i,r);void 0!==t&&(a=e===t.index?u9.ELEMENT_ARRAY_BUFFER:u9.ARRAY_BUFFER);let h=this.processBufferView(e,n,i,r,a),c={bufferView:h.id,byteOffset:h.byteOffset,componentType:n,count:r,max:l.max,min:l.min,type:{1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"}[e.itemSize]};return!0===e.normalized&&(c.normalized=!0),o.accessors||(o.accessors=[]),o.accessors.push(c)-1}processImage(e,t,i){let r=this,n=r.cache,a=r.json,s=r.options,o=r.pending;n.images.has(e)||n.images.set(e,{});let l=n.images.get(e),h=t===ek?"image/png":"image/jpeg",c=h+":flipY/"+i.toString();if(void 0!==l[c])return l[c];a.images||(a.images=[]);let u={mimeType:h};if(s.embedImages){let n=da=da||document.createElement("canvas");n.width=Math.min(e.width,s.maxTextureSize),n.height=Math.min(e.height,s.maxTextureSize);let a=n.getContext("2d");if(!0===i&&(a.translate(0,n.height),a.scale(1,-1)),"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)a.drawImage(e,0,0,n.width,n.height);else{t!==ek&&t!==eG&&console.error("GLTFExporter: Only RGB and RGBA formats are supported."),(e.width>s.maxTextureSize||e.height>s.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);let i=e.data;if(t===eG){i=new Uint8ClampedArray(e.height*e.width*4);for(let t=0,r=0;t<i.length;t+=4,r+=3)i[t+0]=e.data[r+0],i[t+1]=e.data[r+1],i[t+2]=e.data[r+2],i[t+3]=255}a.putImageData(new ImageData(i,e.width,e.height),0,0)}!0===s.binary?o.push(new Promise(function(e){n.toBlob(function(t){r.processBufferViewImage(t).then(function(t){u.bufferView=t,e()})},h)})):u.uri=n.toDataURL(h)}else u.uri=e.src;let d=a.images.push(u)-1;return l[c]=d,d}processSampler(e){let t=this.json;t.samplers||(t.samplers=[]);let i={magFilter:de[e.magFilter],minFilter:de[e.minFilter],wrapS:de[e.wrapS],wrapT:de[e.wrapT]};return t.samplers.push(i)-1}processTexture(e){let t=this.cache,i=this.json;if(t.textures.has(e))return t.textures.get(e);i.textures||(i.textures=[]);let r={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY)};e.name&&(r.name=e.name),this._invokeAll(function(t){t.writeTexture&&t.writeTexture(e,r)});let n=i.textures.push(r)-1;return t.textures.set(e,n),n}processMaterial(e){let t=this.cache,i=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;i.materials||(i.materials=[]);let r={pbrMetallicRoughness:{}};!0!==e.isMeshStandardMaterial&&!0!==e.isMeshBasicMaterial&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");let n=e.color.toArray().concat([e.opacity]);if(di(n,[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=n),e.isMeshStandardMaterial?(r.pbrMetallicRoughness.metallicFactor=e.metalness,r.pbrMetallicRoughness.roughnessFactor=e.roughness):(r.pbrMetallicRoughness.metallicFactor=.5,r.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){if(e.metalnessMap===e.roughnessMap){let t={index:this.processTexture(e.metalnessMap)};this.applyTextureTransform(t,e.metalnessMap),r.pbrMetallicRoughness.metallicRoughnessTexture=t}else console.warn("THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.")}if(e.map){let t={index:this.processTexture(e.map)};this.applyTextureTransform(t,e.map),r.pbrMetallicRoughness.baseColorTexture=t}if(e.emissive){let t=e.emissive.clone().multiplyScalar(e.emissiveIntensity).toArray();if(di(t,[0,0,0])||(r.emissiveFactor=t),e.emissiveMap){let t={index:this.processTexture(e.emissiveMap)};this.applyTextureTransform(t,e.emissiveMap),r.emissiveTexture=t}}if(e.normalMap){let t={index:this.processTexture(e.normalMap)};e.normalScale&&-1!==e.normalScale.x&&(e.normalScale.x!==e.normalScale.y&&console.warn("THREE.GLTFExporter: Normal scale components are different, ignoring Y and exporting X."),t.scale=e.normalScale.x),this.applyTextureTransform(t,e.normalMap),r.normalTexture=t}if(e.aoMap){let t={index:this.processTexture(e.aoMap),texCoord:1};1!==e.aoMapIntensity&&(t.strength=e.aoMapIntensity),this.applyTextureTransform(t,e.aoMap),r.occlusionTexture=t}e.transparent?r.alphaMode="BLEND":e.alphaTest>0&&(r.alphaMode="MASK",r.alphaCutoff=e.alphaTest),e.side===_&&(r.doubleSided=!0),""!==e.name&&(r.name=e.name),this.serializeUserData(e,r),this._invokeAll(function(t){t.writeMaterial&&t.writeMaterial(e,r)});let a=i.materials.push(r)-1;return t.materials.set(e,a),a}processMesh(e){let t;let i=this.cache,r=this.json,n=[e.geometry.uuid];if(Array.isArray(e.material))for(let t=0,i=e.material.length;t<i;t++)n.push(e.material[t].uuid);else n.push(e.material.uuid);let a=n.join(":");if(i.meshes.has(a))return i.meshes.get(a);let s=e.geometry;if(t=e.isLineSegments?u9.LINES:e.isLineLoop?u9.LINE_LOOP:e.isLine?u9.LINE_STRIP:e.isPoints?u9.POINTS:e.material.wireframe?u9.LINES:u9.TRIANGLES,!0!==s.isBufferGeometry)throw Error("THREE.GLTFExporter: Geometry is not of type THREE.BufferGeometry.");let o={},l={},h=[],c=[],u={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},d=s.getAttribute("normal");void 0===d||this.isNormalizedNormalAttribute(d)||(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),s.setAttribute("normal",this.createNormalizedNormalAttribute(d)));let p=null;for(let e in s.attributes){if("morph"===e.substr(0,5))continue;let t=s.attributes[e];if(e=u[e]||e.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(e)||(e="_"+e),i.attributes.has(this.getUID(t))){l[e]=i.attributes.get(this.getUID(t));continue}p=null;let r=t.array;"JOINTS_0"!==e||r instanceof Uint16Array||r instanceof Uint8Array||(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new ne(new Uint16Array(r),t.itemSize,t.normalized));let n=this.processAccessor(p||t,s);null!==n&&(l[e]=n,i.attributes.set(this.getUID(t),n))}if(void 0!==d&&s.setAttribute("normal",d),0===Object.keys(l).length)return null;if(void 0!==e.morphTargetInfluences&&e.morphTargetInfluences.length>0){let t=[],r=[],n={};if(void 0!==e.morphTargetDictionary)for(let t in e.morphTargetDictionary)n[e.morphTargetDictionary[t]]=t;for(let a=0;a<e.morphTargetInfluences.length;++a){let o={},l=!1;for(let e in s.morphAttributes){if("position"!==e&&"normal"!==e){l||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),l=!0);continue}let t=s.morphAttributes[e][a],r=e.toUpperCase(),n=s.attributes[e];if(i.attributes.has(this.getUID(t))){o[r]=i.attributes.get(this.getUID(t));continue}let h=t.clone();if(!s.morphTargetsRelative)for(let e=0,i=t.count;e<i;e++)h.setXYZ(e,t.getX(e)-n.getX(e),t.getY(e)-n.getY(e),t.getZ(e)-n.getZ(e));o[r]=this.processAccessor(h,s),i.attributes.set(this.getUID(n),o[r])}c.push(o),t.push(e.morphTargetInfluences[a]),void 0!==e.morphTargetDictionary&&r.push(n[a])}o.weights=t,r.length>0&&(o.extras={},o.extras.targetNames=r)}let m=Array.isArray(e.material);if(m&&0===s.groups.length)return null;let f=m?e.material:[e.material],g=m?s.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let e=0,r=g.length;e<r;e++){let r={mode:t,attributes:l};if(this.serializeUserData(s,r),c.length>0&&(r.targets=c),null!==s.index){let t=this.getUID(s.index);(void 0!==g[e].start||void 0!==g[e].count)&&(t+=":"+g[e].start+":"+g[e].count),i.attributes.has(t)?r.indices=i.attributes.get(t):(r.indices=this.processAccessor(s.index,s,g[e].start,g[e].count),i.attributes.set(t,r.indices)),null===r.indices&&delete r.indices}let n=this.processMaterial(f[g[e].materialIndex]);null!==n&&(r.material=n),h.push(r)}o.primitives=h,r.meshes||(r.meshes=[]),this._invokeAll(function(t){t.writeMesh&&t.writeMesh(e,o)});let v=r.meshes.push(o)-1;return i.meshes.set(a,v),v}processCamera(e){let t=this.json;t.cameras||(t.cameras=[]);let i=e.isOrthographicCamera,r={type:i?"orthographic":"perspective"};return i?r.orthographic={xmag:2*e.right,ymag:2*e.top,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:r.perspective={aspectRatio:e.aspect,yfov:iD.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},""!==e.name&&(r.name=e.type),t.cameras.push(r)-1}processAnimation(e,t){let i=this.json,r=this.nodeMap;i.animations||(i.animations=[]);let n=(e=u7.Utils.mergeMorphTargetTracks(e.clone(),t)).tracks,a=[],s=[];for(let e=0;e<n.length;++e){let i;let o=n[e],l=c_.parseTrackName(o.name),h=c_.findNode(t,l.nodeName),c=dt[l.propertyName];if("bones"===l.objectName&&(h=!0===h.isSkinnedMesh?h.skeleton.getBoneByName(l.objectIndex):void 0),!h||!c)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',o.name),null;let u=o.values.length/o.times.length;c===dt.morphTargetInfluences&&(u/=h.morphTargetInfluences.length),!0===o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline?(i="CUBICSPLINE",u/=3):i=o.getInterpolation()===tD?"STEP":"LINEAR",s.push({input:this.processAccessor(new ne(o.times,1)),output:this.processAccessor(new ne(o.values,u)),interpolation:i}),a.push({sampler:s.length-1,target:{node:r.get(h),path:c}})}return i.animations.push({name:e.name||"clip_"+i.animations.length,samplers:s,channels:a}),i.animations.length-1}processSkin(e){let t=this.json,i=this.nodeMap,r=t.nodes[i.get(e)],n=e.skeleton;if(void 0===n)return null;let a=e.skeleton.bones[0];if(void 0===a)return null;let s=[],o=new Float32Array(16*n.bones.length),l=new ru;for(let t=0;t<n.bones.length;++t)s.push(i.get(n.bones[t])),l.copy(n.boneInverses[t]),l.multiply(e.bindMatrix).toArray(o,16*t);return void 0===t.skins&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new ne(o,16)),joints:s,skeleton:i.get(a)}),r.skin=t.skins.length-1}processNode(e){let t=this.json,i=this.options,r=this.nodeMap;t.nodes||(t.nodes=[]);let n={};if(i.trs){let t=e.quaternion.toArray(),i=e.position.toArray(),r=e.scale.toArray();di(t,[0,0,0,1])||(n.rotation=t),di(i,[0,0,0])||(n.translation=i),di(r,[1,1,1])||(n.scale=r)}else e.matrixAutoUpdate&&e.updateMatrix(),!1===di(e.matrix.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])&&(n.matrix=e.matrix.elements);if(""!==e.name&&(n.name=String(e.name)),this.serializeUserData(e,n),e.isMesh||e.isLine||e.isPoints){let t=this.processMesh(e);null!==t&&(n.mesh=t)}else e.isCamera&&(n.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){let t=[];for(let r=0,n=e.children.length;r<n;r++){let n=e.children[r];if(n.visible||!1===i.onlyVisible){let e=this.processNode(n);null!==e&&t.push(e)}}t.length>0&&(n.children=t)}this._invokeAll(function(t){t.writeNode&&t.writeNode(e,n)});let a=t.nodes.push(n)-1;return r.set(e,a),a}processScene(e){let t=this.json,i=this.options;t.scenes||(t.scenes=[],t.scene=0);let r={};""!==e.name&&(r.name=e.name),t.scenes.push(r);let n=[];for(let t=0,r=e.children.length;t<r;t++){let r=e.children[t];if(r.visible||!1===i.onlyVisible){let e=this.processNode(r);null!==e&&n.push(e)}}n.length>0&&(r.nodes=n),this.serializeUserData(e,r)}processObjects(e){let t=new sJ;t.name="AuxScene";for(let i=0;i<e.length;i++)t.children.push(e[i]);this.processScene(t)}processInput(e){let t=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(t){t.beforeParse&&t.beforeParse(e)});let i=[];for(let t=0;t<e.length;t++)e[t]instanceof sJ?this.processScene(e[t]):i.push(e[t]);i.length>0&&this.processObjects(i);for(let e=0;e<this.skins.length;++e)this.processSkin(this.skins[e]);for(let i=0;i<t.animations.length;++i)this.processAnimation(t.animations[i],e[0]);this._invokeAll(function(t){t.afterParse&&t.afterParse(e)})}_invokeAll(e){for(let t=0,i=this.plugins.length;t<i;t++)e(this.plugins[t])}}class dl{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}let i=this.writer,r=i.json,n=i.extensionsUsed,a={};e.name&&(a.name=e.name),a.color=e.color.toArray(),a.intensity=e.intensity,e.isDirectionalLight?a.type="directional":e.isPointLight?(a.type="point",e.distance>0&&(a.range=e.distance)):e.isSpotLight&&(a.type="spot",e.distance>0&&(a.range=e.distance),a.spot={},a.spot.innerConeAngle=-((e.penumbra-1)*e.angle*1),a.spot.outerConeAngle=e.angle),void 0!==e.decay&&2!==e.decay&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||0!==e.target.position.x||0!==e.target.position.y||-1!==e.target.position.z)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),n[this.name]||(r.extensions=r.extensions||{},r.extensions[this.name]={lights:[]},n[this.name]=!0);let s=r.extensions[this.name].lights;s.push(a),t.extensions=t.extensions||{},t.extensions[this.name]={light:s.length-1}}}class dh{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,t){if(!e.isMeshBasicMaterial)return;let i=this.writer.extensionsUsed;t.extensions=t.extensions||{},t.extensions[this.name]={},i[this.name]=!0,t.pbrMetallicRoughness.metallicFactor=0,t.pbrMetallicRoughness.roughnessFactor=.9}}class dc{constructor(e){this.writer=e,this.name="KHR_materials_pbrSpecularGlossiness"}writeMaterial(e,t){if(!e.isGLTFSpecularGlossinessMaterial)return;let i=this.writer,r=i.extensionsUsed,n={};t.pbrMetallicRoughness.baseColorFactor&&(n.diffuseFactor=t.pbrMetallicRoughness.baseColorFactor);let a=[1,1,1];if(e.specular.toArray(a,0),n.specularFactor=a,n.glossinessFactor=e.glossiness,t.pbrMetallicRoughness.baseColorTexture&&(n.diffuseTexture=t.pbrMetallicRoughness.baseColorTexture),e.specularMap){let t={index:i.processTexture(e.specularMap)};i.applyTextureTransform(t,e.specularMap),n.specularGlossinessTexture=t}t.extensions=t.extensions||{},t.extensions[this.name]=n,r[this.name]=!0}}u7.Utils={insertKeyframe:function(e,t){let i;let r=e.getValueSize(),n=new e.TimeBufferType(e.times.length+1),a=new e.ValueBufferType(e.values.length+r),s=e.createInterpolant(new e.ValueBufferType(r));if(0===e.times.length){n[0]=t;for(let e=0;e<r;e++)a[e]=0;i=0}else if(t<e.times[0]){if(.001>Math.abs(e.times[0]-t))return 0;n[0]=t,n.set(e.times,1),a.set(s.evaluate(t),0),a.set(e.values,r),i=0}else if(t>e.times[e.times.length-1]){if(.001>Math.abs(e.times[e.times.length-1]-t))return e.times.length-1;n[n.length-1]=t,n.set(e.times,0),a.set(e.values,0),a.set(s.evaluate(t),e.values.length),i=n.length-1}else for(let o=0;o<e.times.length;o++){if(.001>Math.abs(e.times[o]-t))return o;if(e.times[o]<t&&e.times[o+1]>t){n.set(e.times.slice(0,o+1),0),n[o+1]=t,n.set(e.times.slice(o+1),o+2),a.set(e.values.slice(0,(o+1)*r),0),a.set(s.evaluate(t),(o+1)*r),a.set(e.values.slice((o+1)*r),(o+2)*r),i=o+1;break}}return e.times=n,e.values=a,i},mergeMorphTargetTracks:function(e,t){let i=[],r={},n=e.tracks;for(let e=0;e<n.length;++e){let a,s=n[e],o=c_.parseTrackName(s.name),l=c_.findNode(t,o.nodeName);if("morphTargetInfluences"!==o.propertyName||void 0===o.propertyIndex){i.push(s);continue}if(s.createInterpolant!==s.InterpolantFactoryMethodDiscrete&&s.createInterpolant!==s.InterpolantFactoryMethodLinear){if(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),(s=s.clone()).setInterpolation(tN)}let h=l.morphTargetInfluences.length,c=l.morphTargetDictionary[o.propertyIndex];if(void 0===c)throw Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);if(void 0===r[l.uuid]){let e=new(a=s.clone()).ValueBufferType(h*a.times.length);for(let t=0;t<a.times.length;t++)e[t*h+c]=a.values[t];a.name=(o.nodeName||"")+".morphTargetInfluences",a.values=e,r[l.uuid]=a,i.push(a);continue}let u=s.createInterpolant(new s.ValueBufferType(1));a=r[l.uuid];for(let e=0;e<a.times.length;e++)a.values[e*h+c]=u.evaluate(a.times[e]);for(let e=0;e<s.times.length;e++){let t=this.insertKeyframe(a,s.times[e]);a.values[t*h+c]=s.values[e]}}return e.tracks=i,e}},document.getElementById("convertButton").addEventListener("click",()=>{var e;e=function(e){let t=new s.Scene,i=new s.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);i.position.z=5;let r=new s.WebGLRenderer;r.setSize(window.innerWidth,window.innerHeight);let n=document.createElement("canvas");return document.body.appendChild(n),r.getContext(),r.setPixelRatio(window.devicePixelRatio),Function("THREE","scene","camera","renderer",e)(s,t,i,r),t}(document.getElementById("splineCode").value),new u7().parse(e,function(e){(function(e,t){let i=new Blob([e],{type:"application/json"}),r=document.createElement("a");r.style.display="none",document.body.appendChild(r),r.href=URL.createObjectURL(i),r.download=t,r.click(),document.body.removeChild(r),URL.revokeObjectURL(r.href)})(JSON.stringify(e,null,2),"scene.gltf")})});
//# sourceMappingURL=index.9ed58324.js.map
